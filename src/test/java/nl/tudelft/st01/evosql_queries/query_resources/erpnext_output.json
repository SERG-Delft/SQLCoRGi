{
  "entries": [
    {
      "queryNo": 1,
      "pathList": [
        "SELECT NAME, IS_GROUP FROM TABWAREHOUSE WHERE NOT (TABWAREHOUSE.COMPANY = '_Test Company')",
        "SELECT NAME, IS_GROUP FROM TABWAREHOUSE WHERE (TABWAREHOUSE.COMPANY = '_Test Company')",
        "SELECT NAME, IS_GROUP FROM TABWAREHOUSE WHERE (TABWAREHOUSE.COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 2,
      "pathList": [
        "SELECT SUPPLIER_NAME FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier')",
        "SELECT SUPPLIER_NAME FROM TABSUPPLIER WHERE (NAME = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 3,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00003') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00003') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 2) AND (PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 1) AND (PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 0) AND (PRODUCTION_ORDER = 'PRO-00003')"
      ]
    },
    {
      "queryNo": 4,
      "pathList": [
        "SELECT NAME FROM TABAUTO EMAIL REPORT WHERE NOT (NAME = 'Permitted Documents For User')",
        "SELECT NAME FROM TABAUTO EMAIL REPORT WHERE (NAME = 'Permitted Documents For User')"
      ]
    },
    {
      "queryNo": 5,
      "pathList": [
        "SELECT STOCK_UOM FROM TABITEM WHERE NOT (NAME = '_Test Item Home Desktop 200')",
        "SELECT STOCK_UOM FROM TABITEM WHERE (NAME = '_Test Item Home Desktop 200')"
      ]
    },
    {
      "queryNo": 6,
      "pathList": [
        "SELECT PROGRAM_ABBREVIATION FROM TABPROGRAM WHERE NOT (NAME = '_Test Program')",
        "SELECT PROGRAM_ABBREVIATION FROM TABPROGRAM WHERE (NAME = '_Test Program')"
      ]
    },
    {
      "queryNo": 7,
      "pathList": [
        "SELECT MAX(char_length(EVENT_TYPE)) FROM TABEVENT HAVING COUNT(char_length(EVENT_TYPE)) > COUNT(DISTINCT char_length(EVENT_TYPE)) AND COUNT(DISTINCT char_length(EVENT_TYPE)) > 1"
      ]
    },
    {
      "queryNo": 8,
      "pathList": [
        "SELECT NAME FROM TABWEBSITE THEME WHERE NOT (NAME = 'Standard')",
        "SELECT NAME FROM TABWEBSITE THEME WHERE (NAME = 'Standard')"
      ]
    },
    {
      "queryNo": 9,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (STUDENT_GROUP IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (SCHEDULE_DATE IS NULL) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME > '3:00:00') AND (FROM_TIME < '4:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME > '3:00:00') AND (FROM_TIME < '4:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' < TO_TIME)) AND NOT (('4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME < '4:00:00') AND (FROM_TIME > '3:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME > '3:00:00') AND (TO_TIME < '4:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME > '3:00:00') AND (TO_TIME < '4:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME)) AND NOT (('3:00:00' = FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME < '4:00:00') AND (TO_TIME > '3:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('3:00:00' > FROM_TIME) AND ('3:00:00' < TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' > FROM_TIME) AND ('3:00:00' < TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('3:00:00' < TO_TIME) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' < TO_TIME) AND ('3:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('3:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('3:00:00' = FROM_TIME) AND ('4:00:00' = TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' = FROM_TIME) AND ('4:00:00' = TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('4:00:00' = TO_TIME) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('4:00:00' = TO_TIME) AND ('3:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('3:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (NAME <> 'SH00023') AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 10,
      "pathList": [
        "SELECT * FROM TABEVENT ROLE WHERE (PARENTTYPE = 'Event') AND (PARENT = 'EV00013') AND (PARENTFIELD = 'roles')",
        "SELECT * FROM TABEVENT ROLE WHERE NOT (PARENTTYPE = 'Event') AND (PARENT = 'EV00013') AND (PARENTFIELD = 'roles')",
        "SELECT * FROM TABEVENT ROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EV00013') AND (PARENTFIELD = 'roles')",
        "SELECT * FROM TABEVENT ROLE WHERE NOT (PARENT = 'EV00013') AND (PARENTTYPE = 'Event') AND (PARENTFIELD = 'roles')",
        "SELECT * FROM TABEVENT ROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Event') AND (PARENTFIELD = 'roles')",
        "SELECT * FROM TABEVENT ROLE WHERE NOT (PARENTFIELD = 'roles') AND (PARENTTYPE = 'Event') AND (PARENT = 'EV00013')",
        "SELECT * FROM TABEVENT ROLE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Event') AND (PARENT = 'EV00013')"
      ]
    },
    {
      "queryNo": 11,
      "pathList": [
        "SELECT NAME FROM TABADDRESS TEMPLATE WHERE (IS_DEFAULT = 2) AND (NAME <> 'United States')",
        "SELECT NAME FROM TABADDRESS TEMPLATE WHERE (IS_DEFAULT = 1) AND (NAME <> 'United States')",
        "SELECT NAME FROM TABADDRESS TEMPLATE WHERE (IS_DEFAULT = 0) AND (NAME <> 'United States')",
        "SELECT NAME FROM TABADDRESS TEMPLATE WHERE (NAME <> 'United States') AND (IS_DEFAULT = 1)",
        "SELECT NAME FROM TABADDRESS TEMPLATE WHERE NOT (NAME <> 'United States') AND (IS_DEFAULT = 1)"
      ]
    },
    {
      "queryNo": 12,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE NOT (AMENDED_FROM = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (AMENDED_FROM = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 13,
      "pathList": [
        "SELECT ACCOUNT_TYPE, ROOT_TYPE, ACCOUNT_CURRENCY, COMPANY FROM TABACCOUNT WHERE NOT (NAME = '_Test Receivable USD - _TC')",
        "SELECT ACCOUNT_TYPE, ROOT_TYPE, ACCOUNT_CURRENCY, COMPANY FROM TABACCOUNT WHERE (NAME = '_Test Receivable USD - _TC')"
      ]
    },
    {
      "queryNo": 14,
      "pathList": [
        "SELECT PARENT FROM TABDOCFIELD WHERE (FIELDTYPE = 'Table') AND (OPTIONS = 'Customer')",
        "SELECT PARENT FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Table') AND (OPTIONS = 'Customer')",
        "SELECT PARENT FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'Customer')",
        "SELECT PARENT FROM TABDOCFIELD WHERE NOT (OPTIONS = 'Customer') AND (FIELDTYPE = 'Table')",
        "SELECT PARENT FROM TABDOCFIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 15,
      "pathList": [
        "SELECT * FROM TABMODE OF PAYMENT WHERE NOT (NAME = 'Cash')",
        "SELECT * FROM TABMODE OF PAYMENT WHERE (NAME = 'Cash')"
      ]
    },
    {
      "queryNo": 16,
      "pathList": [
      ]
    },
    {
      "queryNo": 17,
      "pathList": [
        "SELECT ROUTE FROM TABBLOG CATEGORY WHERE NOT (NAME = '_Test Blog Category')",
        "SELECT ROUTE FROM TABBLOG CATEGORY WHERE (NAME = '_Test Blog Category')"
      ]
    },
    {
      "queryNo": 18,
      "pathList": [
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (NAME IN ('499bf31b7c', 'a33c2aae0c', '48fb7b5443', '7faa8df7b2')) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 19,
      "pathList": [
        "SELECT DOCSTATUS FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00013')",
        "SELECT DOCSTATUS FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00013')"
      ]
    },
    {
      "queryNo": 20,
      "pathList": [
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.PURCHASE_RECEIPT = 'PREC-00016') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PURCHASE_RECEIPT = 'PREC-00016') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.PURCHASE_RECEIPT IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.PURCHASE_RECEIPT = 'PREC-00016')",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.PURCHASE_RECEIPT = 'PREC-00016')",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 INNER JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.PURCHASE_RECEIPT = 'PREC-00016')",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 LEFT JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 RIGHT JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.PURCHASE_RECEIPT = 'PREC-00016')",
        "SELECT T1.NAME FROM TABPURCHASE INVOICE T1 RIGHT JOIN TABPURCHASE INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.PURCHASE_RECEIPT = 'PREC-00016')"
      ]
    },
    {
      "queryNo": 21,
      "pathList": [
        "SELECT FIRST_NAME, LAST_NAME FROM TABUSER WHERE NOT (NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT FIRST_NAME, LAST_NAME FROM TABUSER WHERE (NAME = 'Bimonthly_test_employee@salary.com')"
      ]
    },
    {
      "queryNo": 22,
      "pathList": [
        "SELECT * FROM TABDOCFIELD WHERE NOT (PARENT = 'ToDo')",
        "SELECT * FROM TABDOCFIELD WHERE (PARENT = 'ToDo')",
        "SELECT * FROM TABDOCFIELD WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 23,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (ROLE = 'Blogger') AND (PARENT = 'test_import_userrole@example.com')",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (ROLE = 'Blogger') AND (PARENT = 'test_import_userrole@example.com')",
        "SELECT NAME FROM TABUSERROLE WHERE (ROLE IS NULL) AND (PARENT = 'test_import_userrole@example.com')",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test_import_userrole@example.com') AND (ROLE = 'Blogger')",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (ROLE = 'Blogger')"
      ]
    },
    {
      "queryNo": 24,
      "pathList": [
        "SELECT SMALLEST_CURRENCY_FRACTION_VALUE FROM TABCURRENCY WHERE NOT (NAME = 'USD')",
        "SELECT SMALLEST_CURRENCY_FRACTION_VALUE FROM TABCURRENCY WHERE (NAME = 'USD')"
      ]
    },
    {
      "queryNo": 25,
      "pathList": [
        "SELECT * FROM TABSALARY SLIP WHERE NOT (NAME = 'Sal Slip/EMP-0003/00001')",
        "SELECT * FROM TABSALARY SLIP WHERE (NAME = 'Sal Slip/EMP-0003/00001')"
      ]
    },
    {
      "queryNo": 26,
      "pathList": [
        "SELECT * FROM TABPOS PROFILE WHERE (USER = 'Administrator') AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE NOT (USER = 'Administrator') AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE (USER IS NULL) AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE NOT (COMPANY = '_Test Company') AND (USER = 'Administrator')",
        "SELECT * FROM TABPOS PROFILE WHERE (COMPANY IS NULL) AND (USER = 'Administrator')"
      ]
    },
    {
      "queryNo": 27,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABCOMPANY WHERE NOT (NAME = 'COA from Existing Company')",
        "SELECT MODIFIED, DOCSTATUS FROM TABCOMPANY WHERE (NAME = 'COA from Existing Company')"
      ]
    },
    {
      "queryNo": 28,
      "pathList": [
        "SELECT DISTINCT PARENT FROM TABUSER EMAIL WHERE (AWAITING_PASSWORD = 2)",
        "SELECT DISTINCT PARENT FROM TABUSER EMAIL WHERE (AWAITING_PASSWORD = 1)",
        "SELECT DISTINCT PARENT FROM TABUSER EMAIL WHERE (AWAITING_PASSWORD = 0)"
      ]
    },
    {
      "queryNo": 29,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 2)",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 1)",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 0)"
      ]
    },
    {
      "queryNo": 30,
      "pathList": [
        "SELECT ITEM_NAME, DESCRIPTION FROM TABITEM WHERE NOT (NAME = '_Test Item Home Desktop 100')",
        "SELECT ITEM_NAME, DESCRIPTION FROM TABITEM WHERE (NAME = '_Test Item Home Desktop 100')"
      ]
    },
    {
      "queryNo": 31,
      "pathList": [
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE ((WAREHOUSE IS NOT NULL)) AND (WAREHOUSE <> '') AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (WAREHOUSE IS NULL) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE NOT (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> ''))",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> ''))",
        "SELECT WAREHOUSE, NAME, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (IS_GROUP = -1) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> ''))"
      ]
    },
    {
      "queryNo": 32,
      "pathList": [
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE = 'EMP-0002') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip')",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (EMPLOYEE = 'EMP-0002') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip')",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip')",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (EMPLOYEE = 'EMP-0002')",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT IS NULL) AND (EMPLOYEE = 'EMP-0002')"
      ]
    },
    {
      "queryNo": 33,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')) AND (date(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 2) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 1) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 0) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'Administrator') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((SEND_REMINDER IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((SEND_REMINDER IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'Administrator') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2015-02-01') AND TIMESTAMP('2015-02-01')) OR (date(STARTS_ON) <= TIMESTAMP('2015-02-01') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2015-02-01'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2015-02-01') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2015-02-01'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))"
      ]
    },
    {
      "queryNo": 34,
      "pathList": [
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENT = 'Guest') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE NOT (PARENT = 'Guest') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENT IS NULL) AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE NOT (PARENTFIELD = 'defaults') AND (PARENT = 'Guest')",
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Guest')"
      ]
    },
    {
      "queryNo": 35,
      "pathList": [
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'customer_groups')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'customer_groups')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE (PARENTTYPE IS NULL) AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'customer_groups')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE (PARENT IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENTFIELD = 'customer_groups') AND (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89')",
        "SELECT * FROM TABPOS CUSTOMER GROUP WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89')"
      ]
    },
    {
      "queryNo": 36,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER ITEM WHERE NOT (PREVDOC_DOCNAME = 'QTN-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER ITEM WHERE (PREVDOC_DOCNAME = 'QTN-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER ITEM WHERE (PREVDOC_DOCNAME IS NULL)"
      ]
    },
    {
      "queryNo": 37,
      "pathList": [
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.DOCSTATUS = 1) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.DOCSTATUS = -1) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.START_DATE >= '2016-11-01') AND (T1.DOCSTATUS = 0) AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE NOT (T1.START_DATE >= '2016-11-01') AND (T1.DOCSTATUS = 0) AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.START_DATE IS NULL) AND (T1.DOCSTATUS = 0) AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE NOT (T1.END_DATE <= '2016-11-30') AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.END_DATE IS NULL) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE ((T1.JOURNAL_ENTRY IS NOT NULL)) AND NOT (T1.JOURNAL_ENTRY = '') AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.JOURNAL_ENTRY IS NULL) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.JOURNAL_ENTRY = '') AND ((T1.JOURNAL_ENTRY IS NOT NULL)) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 1) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = -1) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE NOT (T1.COMPANY = 'Wind Power LLC') AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0)",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (T1.COMPANY IS NULL) AND (T1.DOCSTATUS = 0) AND (T1.START_DATE >= '2016-11-01') AND (T1.END_DATE <= '2016-11-30') AND (((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '')) AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0)",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE (((SALARY_SLIP_BASED_ON_TIMESHEET IS NOT NULL))) AND (T1.DOCSTATUS = 0 AND T1.START_DATE >= '2016-11-01' AND T1.END_DATE <= '2016-11-30' AND ((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '') AND T1.COMPANY = 'Wind Power LLC')",
        "SELECT T1.NAME, T1.SALARY_STRUCTURE FROM TABSALARY SLIP T1 WHERE ((SALARY_SLIP_BASED_ON_TIMESHEET IS NULL)) AND (T1.DOCSTATUS = 0 AND T1.START_DATE >= '2016-11-01' AND T1.END_DATE <= '2016-11-30' AND ((T1.JOURNAL_ENTRY IS NULL) OR T1.JOURNAL_ENTRY = '') AND T1.COMPANY = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 38,
      "pathList": [
        "SELECT NAME, HAS_BATCH_NO, DOCSTATUS, IS_STOCK_ITEM, HAS_VARIANTS, STOCK_UOM FROM TABITEM WHERE NOT (NAME = '_Test Item')",
        "SELECT NAME, HAS_BATCH_NO, DOCSTATUS, IS_STOCK_ITEM, HAS_VARIANTS, STOCK_UOM FROM TABITEM WHERE (NAME = '_Test Item')"
      ]
    },
    {
      "queryNo": 39,
      "pathList": [
        "SELECT * FROM TABTERRITORY WHERE (LFT = 5) AND NOT (RGT = 5)",
        "SELECT * FROM TABTERRITORY WHERE (LFT = 4) AND NOT (RGT = 5)",
        "SELECT * FROM TABTERRITORY WHERE (LFT = 3) AND NOT (RGT = 5)",
        "SELECT * FROM TABTERRITORY WHERE (RGT = 6) AND NOT (LFT = 4)",
        "SELECT * FROM TABTERRITORY WHERE (RGT = 5) AND NOT (LFT = 4)",
        "SELECT * FROM TABTERRITORY WHERE (RGT = 4) AND NOT (LFT = 4)"
      ]
    },
    {
      "queryNo": 40,
      "pathList": [
        "SELECT * FROM TABDOCFIELD WHERE (PARENTTYPE = 'DocType') AND (PARENT = 'Website Slideshow Item') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABDOCFIELD WHERE NOT (PARENTTYPE = 'DocType') AND (PARENT = 'Website Slideshow Item') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABDOCFIELD WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Website Slideshow Item') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABDOCFIELD WHERE NOT (PARENT = 'Website Slideshow Item') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABDOCFIELD WHERE (PARENT IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABDOCFIELD WHERE NOT (PARENTFIELD = 'fields') AND (PARENTTYPE = 'DocType') AND (PARENT = 'Website Slideshow Item')",
        "SELECT * FROM TABDOCFIELD WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENT = 'Website Slideshow Item')"
      ]
    },
    {
      "queryNo": 41,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 2) AND (ITEM = '_Test FG Item 2') AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2') AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 0) AND (ITEM = '_Test FG Item 2') AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM = '_Test FG Item 2') AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE NOT (ITEM = '_Test FG Item 2') AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM IS NULL) AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 2) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 1) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 0) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')"
      ]
    },
    {
      "queryNo": 42,
      "pathList": [
        "SELECT NAME FROM TABSALES INVOICE WHERE NOT (NAME = '_T-Sales Invoice-00004')",
        "SELECT NAME FROM TABSALES INVOICE WHERE (NAME = '_T-Sales Invoice-00004')"
      ]
    },
    {
      "queryNo": 43,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0004')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (NAME = 'EMP-0004')"
      ]
    },
    {
      "queryNo": 44,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 45,
      "pathList": [
        "SELECT NAME, DESIGNATION, BRANCH FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0001')",
        "SELECT NAME, DESIGNATION, BRANCH FROM TABEMPLOYEE WHERE (NAME = 'EMP-0001')"
      ]
    },
    {
      "queryNo": 46,
      "pathList": [
        "SELECT NAME, HAS_BATCH_NO, DOCSTATUS, IS_STOCK_ITEM, HAS_SERIAL_NO, SERIAL_NO_SERIES FROM TABITEM WHERE NOT (NAME = '_Test Serialized Item')",
        "SELECT NAME, HAS_BATCH_NO, DOCSTATUS, IS_STOCK_ITEM, HAS_SERIAL_NO, SERIAL_NO_SERIES FROM TABITEM WHERE (NAME = '_Test Serialized Item')"
      ]
    },
    {
      "queryNo": 47,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (NAME = 'STE-00044')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (NAME = 'STE-00044')"
      ]
    },
    {
      "queryNo": 48,
      "pathList": [
        "SELECT NAME FROM TABTASK WHERE (TABTASK.PROJECT = '_Test Project') AND (IFNULL(TABTASK.NAME, '') NOT IN ('TASK00004'))",
        "SELECT NAME FROM TABTASK WHERE NOT (TABTASK.PROJECT = '_Test Project') AND (IFNULL(TABTASK.NAME, '') NOT IN ('TASK00004'))",
        "SELECT NAME FROM TABTASK WHERE (TABTASK.PROJECT IS NULL) AND (IFNULL(TABTASK.NAME, '') NOT IN ('TASK00004'))",
        "SELECT NAME FROM TABTASK WHERE (IFNULL(TABTASK.NAME, '') IN ('TASK00004')) AND (TABTASK.PROJECT = '_Test Project')",
        "SELECT NAME FROM TABTASK WHERE (((TABTASK.NAME IS NOT NULL))) AND (TABTASK.PROJECT = '_Test Project')",
        "SELECT NAME FROM TABTASK WHERE ((TABTASK.NAME IS NULL)) AND (TABTASK.PROJECT = '_Test Project')"
      ]
    },
    {
      "queryNo": 49,
      "pathList": [
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (AMOUNT = BILLED_AMT + 1) AND (NAME = 'e2a298d36d') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (AMOUNT = BILLED_AMT) AND (NAME = 'e2a298d36d') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (AMOUNT = BILLED_AMT - 1) AND (NAME = 'e2a298d36d') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (NAME = 'e2a298d36d') AND (AMOUNT < BILLED_AMT) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE NOT (NAME = 'e2a298d36d') AND (AMOUNT < BILLED_AMT) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 2) AND (AMOUNT < BILLED_AMT) AND (NAME = 'e2a298d36d')",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 1) AND (AMOUNT < BILLED_AMT) AND (NAME = 'e2a298d36d')",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 0) AND (AMOUNT < BILLED_AMT) AND (NAME = 'e2a298d36d')"
      ]
    },
    {
      "queryNo": 50,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00015') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE NOT (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00015') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SINV-00015') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE NOT (PARENT = 'SINV-00015') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE NOT (PARENTFIELD = 'advances') AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00015')",
        "SELECT * FROM TABSALES INVOICE ADVANCE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00015')"
      ]
    },
    {
      "queryNo": 51,
      "pathList": [
        "SELECT * FROM TABEMAIL QUEUE WHERE NOT (NAME = 'c4031dcc1c')",
        "SELECT * FROM TABEMAIL QUEUE WHERE (NAME = 'c4031dcc1c')"
      ]
    },
    {
      "queryNo": 52,
      "pathList": [
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE ('2013-01-01' NOT BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (FROM_DATE IS NULL) AND (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (TO_DATE IS NULL) AND (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 2) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 0) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (EMPLOYEE = '_T-Employee-0002')",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, TOTAL_LEAVES_ALLOCATED, FROM_DATE, TO_DATE FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE IS NULL) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 53,
      "pathList": [
        "SELECT NAME FROM TABSALES PERSON WHERE NOT (EMPLOYEE = NULL)",
        "SELECT NAME FROM TABSALES PERSON WHERE (EMPLOYEE = NULL)",
        "SELECT NAME FROM TABSALES PERSON WHERE (EMPLOYEE IS NULL)"
      ]
    },
    {
      "queryNo": 54,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (PARENTTYPE = 'Sales Invoice') AND (PARENT = '_T-Sales Invoice-00004') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (PARENTTYPE = 'Sales Invoice') AND (PARENT = '_T-Sales Invoice-00004') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Sales Invoice-00004') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (PARENT = '_T-Sales Invoice-00004') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = '_T-Sales Invoice-00004')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = '_T-Sales Invoice-00004')"
      ]
    },
    {
      "queryNo": 55,
      "pathList": [
        "SELECT IS_STOCK_ITEM FROM TABITEM WHERE NOT (NAME = '_Test Item for Auto Price List')",
        "SELECT IS_STOCK_ITEM FROM TABITEM WHERE (NAME = '_Test Item for Auto Price List')"
      ]
    },
    {
      "queryNo": 56,
      "pathList": [
        "SELECT IS_GROUP FROM TABWAREHOUSE WHERE NOT (NAME = 'Test Warehouse for Merging 1 - _TC')",
        "SELECT IS_GROUP FROM TABWAREHOUSE WHERE (NAME = 'Test Warehouse for Merging 1 - _TC')"
      ]
    },
    {
      "queryNo": 57,
      "pathList": [
      ]
    },
    {
      "queryNo": 58,
      "pathList": [
        "SELECT PARENTTYPE, PARENT FROM TABTODO WHERE NOT (NAME = '258546aad7')",
        "SELECT PARENTTYPE, PARENT FROM TABTODO WHERE (NAME = '258546aad7')"
      ]
    },
    {
      "queryNo": 59,
      "pathList": [
        "SELECT TABITEM.NAME FROM TABITEM WHERE NOT (TABITEM.VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT TABITEM.NAME FROM TABITEM WHERE (TABITEM.VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT TABITEM.NAME FROM TABITEM WHERE (TABITEM.VARIANT_OF IS NULL)"
      ]
    },
    {
      "queryNo": 60,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE (PUBLISH = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE (PUBLISH = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE (PUBLISH = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE (ROUTE = 'test-route-000') AND (PUBLISH = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE NOT (ROUTE = 'test-route-000') AND (PUBLISH = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABJOB OPENING WHERE (ROUTE IS NULL) AND (PUBLISH = 1)"
      ]
    },
    {
      "queryNo": 61,
      "pathList": [
        "SELECT * FROM TABREPORT WHERE NOT (NAME = 'Permitted Documents For User')",
        "SELECT * FROM TABREPORT WHERE (NAME = 'Permitted Documents For User')"
      ]
    },
    {
      "queryNo": 62,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = '_Test Item Home Desktop 200') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Item Home Desktop 200') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (ITEM_CODE = '_Test Item Home Desktop 200') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = '_Test Item Home Desktop 200') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = '_Test Item Home Desktop 200') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 2) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 1) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 0) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CUSTOMER, '') = '') AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('Standard Buying', '')) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ('2017-02-09' NOT BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31')) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_FROM IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_FROM IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_UPTO IS NOT NULL))) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_UPTO IS NULL)) AND ((ITEM_CODE = '_Test Item Home Desktop 200' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))"
      ]
    },
    {
      "queryNo": 63,
      "pathList": [
        "SELECT LEAD_NAME, EMAIL_ID, PHONE, MOBILE_NO FROM TABLEAD WHERE NOT (NAME = '_T-Lead-00001')",
        "SELECT LEAD_NAME, EMAIL_ID, PHONE, MOBILE_NO FROM TABLEAD WHERE (NAME = '_T-Lead-00001')"
      ]
    },
    {
      "queryNo": 64,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE >= '2012-12-26') AND (VOUCHER_NO IN ('SR/00006', 'STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE NOT (POSTING_DATE >= '2012-12-26') AND (VOUCHER_NO IN ('SR/00006', 'STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE IS NULL) AND (VOUCHER_NO IN ('SR/00006', 'STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO NOT IN ('SR/00006', 'STE-00007', 'STE-00010')) AND (POSTING_DATE >= '2012-12-26')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (POSTING_DATE >= '2012-12-26')"
      ]
    },
    {
      "queryNo": 65,
      "pathList": [
      ]
    },
    {
      "queryNo": 66,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('fb6624c2ad', '7dcdf83959', '48b461aefc', '79ec8a8cb6')) AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 67,
      "pathList": [
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 2)",
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 1)",
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 0)"
      ]
    },
    {
      "queryNo": 68,
      "pathList": [
        "SELECT USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.STATUS = 'Active') AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT USER_ID FROM TABEMPLOYEE WHERE NOT (TABEMPLOYEE.STATUS = 'Active') AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.STATUS IS NULL) AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT USER_ID FROM TABEMPLOYEE WHERE NOT (TABEMPLOYEE.COMPANY = '_Test Company') AND (TABEMPLOYEE.STATUS = 'Active')",
        "SELECT USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.COMPANY IS NULL) AND (TABEMPLOYEE.STATUS = 'Active')"
      ]
    },
    {
      "queryNo": 69,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (SO_DETAIL = '21b1167610') AND (((DN_DETAIL IS NULL) OR DN_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (SO_DETAIL = '21b1167610') AND (((DN_DETAIL IS NULL) OR DN_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (SO_DETAIL IS NULL) AND (((DN_DETAIL IS NULL) OR DN_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE ((DN_DETAIL IS NOT NULL)) AND NOT (DN_DETAIL = '') AND (SO_DETAIL = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL IS NULL) AND (SO_DETAIL = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL = '') AND ((DN_DETAIL IS NOT NULL)) AND (SO_DETAIL = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 2) AND (SO_DETAIL = '21b1167610') AND (((DN_DETAIL IS NULL) OR DN_DETAIL = ''))",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 1) AND (SO_DETAIL = '21b1167610') AND (((DN_DETAIL IS NULL) OR DN_DETAIL = ''))",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 0) AND (SO_DETAIL = '21b1167610') AND (((DN_DETAIL IS NULL) OR DN_DETAIL = ''))",
        "SELECT SUM(AMOUNT) FROM TABSALES INVOICE ITEM WHERE SO_DETAIL = '21b1167610' AND ((DN_DETAIL IS NULL) OR DN_DETAIL = '') AND DOCSTATUS = 1 HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 70,
      "pathList": [
        "SELECT NAME FROM TABASSET CATEGORY WHERE NOT (NAME = 'Computers')",
        "SELECT NAME FROM TABASSET CATEGORY WHERE (NAME = 'Computers')"
      ]
    },
    {
      "queryNo": 71,
      "pathList": [
        "SELECT RATE FROM TABPURCHASE RECEIPT ITEM WHERE NOT (NAME = '5018a5031a')",
        "SELECT RATE FROM TABPURCHASE RECEIPT ITEM WHERE (NAME = '5018a5031a')"
      ]
    },
    {
      "queryNo": 72,
      "pathList": [
      ]
    },
    {
      "queryNo": 73,
      "pathList": [
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE (PARENT = '_Test Supplier USD') AND (PARENTTYPE = 'Supplier') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE NOT (PARENT = '_Test Supplier USD') AND (PARENTTYPE = 'Supplier') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Supplier') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE NOT (PARENTTYPE = 'Supplier') AND (PARENT = '_Test Supplier USD') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Supplier USD') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = '_Test Supplier USD') AND (PARENTTYPE = 'Supplier') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test Supplier USD') AND (PARENTTYPE = 'Supplier') AND (NAME NOT IN ('134cac726d'))",
        "SELECT NAME FROM TABPARTY ACCOUNT WHERE (NAME IN ('134cac726d')) AND (PARENT = '_Test Supplier USD') AND (PARENTTYPE = 'Supplier') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 74,
      "pathList": [
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 3) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 1) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (COST_CENTER = '_Test Cost Center - _TC') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (COST_CENTER = '_Test Cost Center - _TC') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (COST_CENTER IS NULL) AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (COMPANY = '_Test Company') AND (DOCSTATUS <> 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (COMPANY IS NULL) AND (DOCSTATUS <> 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (DOCSTATUS <> 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE (FISCAL_YEAR IS NULL) AND (DOCSTATUS <> 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (NAME <> '_Test Cost Center - _TC/_Test Fiscal Year 2013/002') AND (DOCSTATUS <> 2) AND (COST_CENTER = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013')"
      ]
    },
    {
      "queryNo": 75,
      "pathList": [
        "SELECT THUMBNAIL, WEBSITE_IMAGE, DESCRIPTION, ROUTE FROM TABITEM WHERE NOT (NAME = '_Test Item 2')",
        "SELECT THUMBNAIL, WEBSITE_IMAGE, DESCRIPTION, ROUTE FROM TABITEM WHERE (NAME = '_Test Item 2')"
      ]
    },
    {
      "queryNo": 76,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (ITEM_CODE = '_Test Service Product Bundle Item 2') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (ITEM_CODE = '_Test Service Product Bundle Item 2') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (ITEM_CODE IS NULL) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (ITEM_CODE = '_Test Service Product Bundle Item 2')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (ITEM_CODE = '_Test Service Product Bundle Item 2')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (ITEM_CODE = '_Test Service Product Bundle Item 2')",
        "SELECT SUM(BASE_NET_AMOUNT) / SUM(QTY) FROM TABPURCHASE INVOICE ITEM WHERE ITEM_CODE = '_Test Service Product Bundle Item 2' AND DOCSTATUS = 1 HAVING COUNT(BASE_NET_AMOUNT) > COUNT(DISTINCT BASE_NET_AMOUNT) AND COUNT(DISTINCT BASE_NET_AMOUNT) > 1",
        "SELECT SUM(BASE_NET_AMOUNT) / SUM(QTY) FROM TABPURCHASE INVOICE ITEM WHERE ITEM_CODE = '_Test Service Product Bundle Item 2' AND DOCSTATUS = 1 HAVING COUNT(QTY) > COUNT(DISTINCT QTY) AND COUNT(DISTINCT QTY) > 1"
      ]
    },
    {
      "queryNo": 77,
      "pathList": [
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE NOT (APPEND_TO = 'ToDo')",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (APPEND_TO = 'ToDo')",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (APPEND_TO IS NULL)"
      ]
    },
    {
      "queryNo": 78,
      "pathList": [
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_TYPE = 'Task') AND (REFERENCE_NAME = 'TASK00009')",
        "SELECT OWNER FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Task') AND (REFERENCE_NAME = 'TASK00009')",
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'TASK00009')",
        "SELECT OWNER FROM TABTODO WHERE NOT (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Task')"
      ]
    },
    {
      "queryNo": 79,
      "pathList": [
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'SR/00009') AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'SR/00009') AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00009')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SR/00009')"
      ]
    },
    {
      "queryNo": 80,
      "pathList": [
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Landed Cost Voucher') AND (PARENT = 'LCV00003') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = 'LCV00003') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'taxes') AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('a05dcf7415'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (NAME IN ('a05dcf7415')) AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'taxes')"
      ]
    },
    {
      "queryNo": 81,
      "pathList": [
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.NAME = 'BOM-_Test PPT Item Sub A-001') AND (BOM.DOCSTATUS = 1)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE NOT (BOM.NAME = 'BOM-_Test PPT Item Sub A-001') AND (BOM.DOCSTATUS = 1)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.DOCSTATUS = 2) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001')",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.DOCSTATUS = 1) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001')",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.DOCSTATUS = 0) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001')",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NOT NULL)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NULL)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM RIGHT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE ((BOM_ITEM.PARENT IS NULL) AND (BOM.NAME IS NOT NULL)) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001' AND BOM.DOCSTATUS = 1)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE (((BOM.QUANTITY IS NOT NULL))) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001' AND BOM.DOCSTATUS = 1)",
        "SELECT BOM_ITEM.ITEM_CODE, BOM_ITEM.ITEM_NAME, BOM_ITEM.DESCRIPTION, BOM_ITEM.STOCK_UOM, BOM_ITEM.QTY, BOM_ITEM.RATE, BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME WHERE ((BOM.QUANTITY IS NULL)) AND (BOM.NAME = 'BOM-_Test PPT Item Sub A-001' AND BOM.DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 82,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE NOT (SALARY_SLIP = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (SALARY_SLIP = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (SALARY_SLIP IS NULL)"
      ]
    },
    {
      "queryNo": 83,
      "pathList": [
        "SELECT ITEM_GROUP, BUYING_COST_CENTER FROM TABITEM WHERE NOT (NAME = '_Test Item')",
        "SELECT ITEM_GROUP, BUYING_COST_CENTER FROM TABITEM WHERE (NAME = '_Test Item')"
      ]
    },
    {
      "queryNo": 84,
      "pathList": [
        "SELECT NAME, FULL_NAME FROM TABUSER WHERE NOT (NAME = 'Administrator')",
        "SELECT NAME, FULL_NAME FROM TABUSER WHERE (NAME = 'Administrator')"
      ]
    },
    {
      "queryNo": 85,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER WHERE NOT (TABCUSTOMER.STATUS = 'Open')",
        "SELECT NAME FROM TABCUSTOMER WHERE (TABCUSTOMER.STATUS = 'Open')",
        "SELECT NAME FROM TABCUSTOMER WHERE (TABCUSTOMER.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 86,
      "pathList": [
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE NOT (USER = 'Administrator') AND NOT (EVERYONE = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (USER = 'Administrator') AND NOT (EVERYONE = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (USER IS NULL) AND NOT (EVERYONE = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (EVERYONE = 2) AND NOT (USER = 'Administrator')",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (EVERYONE = 1) AND NOT (USER = 'Administrator')",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (EVERYONE = 0) AND NOT (USER = 'Administrator')"
      ]
    },
    {
      "queryNo": 87,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 3) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 2) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 1) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PURPOSE = 'Manufacture') AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00002') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PURPOSE IS NULL) AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00002') AND (NAME <> 'STE-00039')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (NAME <> 'STE-00039') AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Manufacture')"
      ]
    },
    {
      "queryNo": 88,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '6f9c3a94b8', '7d2fb9484f', '6c0b5d5cef', 'd6cff724e6')) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 89,
      "pathList": [
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE NOT (LINK_DOCTYPE = 'Role')",
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (LINK_DOCTYPE = 'Role')",
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (LINK_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 90,
      "pathList": [
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE NOT (NAME = '68842f9afa')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE (NAME = '68842f9afa')"
      ]
    },
    {
      "queryNo": 91,
      "pathList": [
        "SELECT NAME FROM TABWARRANTY CLAIM WHERE NOT (TABWARRANTY CLAIM.STATUS = 'Open')",
        "SELECT NAME FROM TABWARRANTY CLAIM WHERE (TABWARRANTY CLAIM.STATUS = 'Open')",
        "SELECT NAME FROM TABWARRANTY CLAIM WHERE (TABWARRANTY CLAIM.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 92,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Customer'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Customer'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Customer'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Customer')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Customer')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 93,
      "pathList": [
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (IS_DEFAULT = 2) AND (ITEM = '_Test FG Item 2') AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2') AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (IS_DEFAULT = 0) AND (ITEM = '_Test FG Item 2') AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (ITEM = '_Test FG Item 2') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE NOT (ITEM = '_Test FG Item 2') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (ITEM IS NULL) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (DOCSTATUS = 2) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (DOCSTATUS = 1) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')",
        "SELECT NAME, OPERATING_COST FROM TABBOM WHERE (DOCSTATUS = 0) AND (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item 2')"
      ]
    },
    {
      "queryNo": 94,
      "pathList": [
        "SELECT * FROM TABSERIAL NO WHERE (NAME NOT IN ('ABCD00001', 'ABCD00002'))",
        "SELECT * FROM TABSERIAL NO WHERE (NAME IN ('ABCD00001', 'ABCD00002'))",
        "SELECT SUM(PURCHASE_RATE) FROM TABSERIAL NO WHERE NAME IN ('ABCD00001', 'ABCD00002') HAVING COUNT(PURCHASE_RATE) > COUNT(DISTINCT PURCHASE_RATE) AND COUNT(DISTINCT PURCHASE_RATE) > 1"
      ]
    },
    {
      "queryNo": 95,
      "pathList": [
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE (PARENTTYPE = 'Salary Component') AND (PARENT = 'Basic') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE NOT (PARENTTYPE = 'Salary Component') AND (PARENT = 'Basic') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Basic') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE NOT (PARENT = 'Basic') AND (PARENTTYPE = 'Salary Component') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Component') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENTTYPE = 'Salary Component') AND (PARENT = 'Basic')",
        "SELECT * FROM TABSALARY COMPONENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Salary Component') AND (PARENT = 'Basic')"
      ]
    },
    {
      "queryNo": 97,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.CUSTOMER = '_Test Customer 1') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (TABQUOTATION.CUSTOMER = '_Test Customer 1') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.CUSTOMER IS NULL) AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0 + 1) AND (TABQUOTATION.CUSTOMER = '_Test Customer 1')",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0) AND (TABQUOTATION.CUSTOMER = '_Test Customer 1')",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0 - 1) AND (TABQUOTATION.CUSTOMER = '_Test Customer 1')",
        "SELECT NAME FROM TABQUOTATION WHERE (((TABQUOTATION.DOCSTATUS IS NOT NULL))) AND (TABQUOTATION.CUSTOMER = '_Test Customer 1')",
        "SELECT NAME FROM TABQUOTATION WHERE ((TABQUOTATION.DOCSTATUS IS NULL)) AND (TABQUOTATION.CUSTOMER = '_Test Customer 1')"
      ]
    },
    {
      "queryNo": 98,
      "pathList": [
        "SELECT * FROM TABCUSTOMER WHERE NOT (CUSTOMER_GROUP = '_Test Customer Group')",
        "SELECT * FROM TABCUSTOMER WHERE (CUSTOMER_GROUP = '_Test Customer Group')",
        "SELECT * FROM TABCUSTOMER WHERE (CUSTOMER_GROUP IS NULL)",
        "SELECT COUNT(NAME) FROM TABCUSTOMER WHERE CUSTOMER_GROUP = '_Test Customer Group' HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 99,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 2) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 1) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 0) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE = 'Sales Invoice') AND (DOCSTATUS = 1) AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_DOCTYPE = 'Sales Invoice') AND (DOCSTATUS = 1) AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE IS NULL) AND (DOCSTATUS = 1) AND (REFERENCE_NAME = 'SINV-00019')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_NAME = 'SINV-00019') AND (DOCSTATUS = 1) AND (REFERENCE_DOCTYPE = 'Sales Invoice')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_NAME IS NULL) AND (DOCSTATUS = 1) AND (REFERENCE_DOCTYPE = 'Sales Invoice')"
      ]
    },
    {
      "queryNo": 100,
      "pathList": [
        "SELECT NAME, USER, READ, WRITE, SHARE, EVERYONE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Blog Post') AND (SHARE_NAME = '-test-blog-post')",
        "SELECT NAME, USER, READ, WRITE, SHARE, EVERYONE FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Blog Post') AND (SHARE_NAME = '-test-blog-post')",
        "SELECT NAME, USER, READ, WRITE, SHARE, EVERYONE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND (SHARE_NAME = '-test-blog-post')",
        "SELECT NAME, USER, READ, WRITE, SHARE, EVERYONE FROM TABDOCSHARE WHERE NOT (SHARE_NAME = '-test-blog-post') AND (SHARE_DOCTYPE = 'Blog Post')",
        "SELECT NAME, USER, READ, WRITE, SHARE, EVERYONE FROM TABDOCSHARE WHERE (SHARE_NAME IS NULL) AND (SHARE_DOCTYPE = 'Blog Post')"
      ]
    },
    {
      "queryNo": 101,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER ITEM WHERE NOT (SALES_ORDER = 'SO-00033')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER ITEM WHERE (SALES_ORDER = 'SO-00033')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER ITEM WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 103,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE >= '2017-02-07') AND (VOUCHER_NO IN ('STE-00012', '_T-Purchase Receipt-00003', 'PINV-00001', 'DN-00001', 'STE-00011', 'DN-00002'))",
        "SELECT * FROM TABGL ENTRY WHERE NOT (POSTING_DATE >= '2017-02-07') AND (VOUCHER_NO IN ('STE-00012', '_T-Purchase Receipt-00003', 'PINV-00001', 'DN-00001', 'STE-00011', 'DN-00002'))",
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE IS NULL) AND (VOUCHER_NO IN ('STE-00012', '_T-Purchase Receipt-00003', 'PINV-00001', 'DN-00001', 'STE-00011', 'DN-00002'))",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO NOT IN ('STE-00012', '_T-Purchase Receipt-00003', 'PINV-00001', 'DN-00001', 'STE-00011', 'DN-00002')) AND (POSTING_DATE >= '2017-02-07')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (POSTING_DATE >= '2017-02-07')"
      ]
    },
    {
      "queryNo": 104,
      "pathList": [
        "SELECT DT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Dynamic Link')",
        "SELECT DT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Dynamic Link')",
        "SELECT DT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 105,
      "pathList": [
        "SELECT _COMMENTS FROM TABEMAIL ACCOUNT WHERE NOT (NAME = '_Test Email Account 1')",
        "SELECT _COMMENTS FROM TABEMAIL ACCOUNT WHERE (NAME = '_Test Email Account 1')"
      ]
    },
    {
      "queryNo": 106,
      "pathList": [
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'internal_work_history')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'internal_work_history')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'internal_work_history')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE NOT (PARENT = 'EMP-0005') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'internal_work_history')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'internal_work_history')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE NOT (PARENTFIELD = 'internal_work_history') AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')",
        "SELECT * FROM TABEMPLOYEE INTERNAL WORK HISTORY WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')"
      ]
    },
    {
      "queryNo": 107,
      "pathList": [
        "SELECT WAREHOUSE, STOCK_VALUE_DIFFERENCE, VOUCHER_DETAIL_NO, ITEM_CODE, POSTING_DATE, POSTING_TIME, ACTUAL_QTY, QTY_AFTER_TRANSACTION FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00003')",
        "SELECT WAREHOUSE, STOCK_VALUE_DIFFERENCE, VOUCHER_DETAIL_NO, ITEM_CODE, POSTING_DATE, POSTING_TIME, ACTUAL_QTY, QTY_AFTER_TRANSACTION FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00003')",
        "SELECT WAREHOUSE, STOCK_VALUE_DIFFERENCE, VOUCHER_DETAIL_NO, ITEM_CODE, POSTING_DATE, POSTING_TIME, ACTUAL_QTY, QTY_AFTER_TRANSACTION FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00003')",
        "SELECT WAREHOUSE, STOCK_VALUE_DIFFERENCE, VOUCHER_DETAIL_NO, ITEM_CODE, POSTING_DATE, POSTING_TIME, ACTUAL_QTY, QTY_AFTER_TRANSACTION FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'DN-00003') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT WAREHOUSE, STOCK_VALUE_DIFFERENCE, VOUCHER_DETAIL_NO, ITEM_CODE, POSTING_DATE, POSTING_TIME, ACTUAL_QTY, QTY_AFTER_TRANSACTION FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note')"
      ]
    },
    {
      "queryNo": 108,
      "pathList": [
        "SELECT OWNER FROM TABSALES INVOICE WHERE NOT (NAME = '_T-Sales Invoice-00001')",
        "SELECT OWNER FROM TABSALES INVOICE WHERE (NAME = '_T-Sales Invoice-00001')"
      ]
    },
    {
      "queryNo": 109,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBOM WHERE NOT (NAME = 'BOM-_Test FG Item 2-001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBOM WHERE (NAME = 'BOM-_Test FG Item 2-001')"
      ]
    },
    {
      "queryNo": 110,
      "pathList": [
        "SELECT NAME FROM TABPACKED ITEM WHERE (PARENT = 'SO-00027') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE NOT (PARENT = 'SO-00027') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE NOT (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00027') AND (PARENTFIELD = 'packed_items') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SO-00027') AND (PARENTFIELD = 'packed_items') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE NOT (PARENTFIELD = 'packed_items') AND (PARENT = 'SO-00027') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'SO-00027') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('7db742e2e8', '7265ab15ca'))",
        "SELECT NAME FROM TABPACKED ITEM WHERE (NAME IN ('7db742e2e8', '7265ab15ca')) AND (PARENT = 'SO-00027') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items')"
      ]
    },
    {
      "queryNo": 111,
      "pathList": [
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'material_requests')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE NOT (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'material_requests')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'material_requests')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE NOT (PARENT = 'Production Planning Tool') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'material_requests')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'material_requests')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE NOT (PARENTFIELD = 'material_requests') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')",
        "SELECT * FROM TABPRODUCTION PLAN MATERIAL REQUEST WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')"
      ]
    },
    {
      "queryNo": 112,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE NOT (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (ASSET IS NULL)"
      ]
    },
    {
      "queryNo": 113,
      "pathList": [
        "SELECT WEBSITE_IMAGE FROM TABITEM WHERE NOT (NAME = '_Test PPT Item Sub B')",
        "SELECT WEBSITE_IMAGE FROM TABITEM WHERE (NAME = '_Test PPT Item Sub B')"
      ]
    },
    {
      "queryNo": 114,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABC-FORM INVOICE DETAIL WHERE NOT (INVOICE_NO = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABC-FORM INVOICE DETAIL WHERE (INVOICE_NO = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABC-FORM INVOICE DETAIL WHERE (INVOICE_NO IS NULL)"
      ]
    },
    {
      "queryNo": 115,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT GATEWAY WHERE NOT (NAME = '_Test Gateway')",
        "SELECT NAME FROM TABPAYMENT GATEWAY WHERE (NAME = '_Test Gateway')"
      ]
    },
    {
      "queryNo": 116,
      "pathList": [
        "SELECT NAME FROM TABDESKTOP ICON WHERE (OWNER = 'test@example.com') AND (MODULE_NAME = 'BOM') AND (STANDARD = 0)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (OWNER = 'test@example.com') AND (MODULE_NAME = 'BOM') AND (STANDARD = 0)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (OWNER IS NULL) AND (MODULE_NAME = 'BOM') AND (STANDARD = 0)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (MODULE_NAME = 'BOM') AND (OWNER = 'test@example.com') AND (STANDARD = 0)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (MODULE_NAME IS NULL) AND (OWNER = 'test@example.com') AND (STANDARD = 0)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 1) AND (OWNER = 'test@example.com') AND (MODULE_NAME = 'BOM')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 0) AND (OWNER = 'test@example.com') AND (MODULE_NAME = 'BOM')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = -1) AND (OWNER = 'test@example.com') AND (MODULE_NAME = 'BOM')"
      ]
    },
    {
      "queryNo": 117,
      "pathList": [
        "SELECT * FROM TABDOCTYPE WHERE NOT (NAME = 'SMS Center')",
        "SELECT * FROM TABDOCTYPE WHERE (NAME = 'SMS Center')"
      ]
    },
    {
      "queryNo": 118,
      "pathList": [
        "SELECT DOCSTATUS FROM TABJOURNAL ENTRY WHERE NOT (NAME = '_T-Journal Entry-00004')",
        "SELECT DOCSTATUS FROM TABJOURNAL ENTRY WHERE (NAME = '_T-Journal Entry-00004')"
      ]
    },
    {
      "queryNo": 119,
      "pathList": [
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'STE-00011') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'STE-00011') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (VOUCHER_NO = 'STE-00011') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'STE-00011') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'STE-00011')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'STE-00011')"
      ]
    },
    {
      "queryNo": 120,
      "pathList": [
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_DATE IS NULL) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_TIME IS NULL) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE NOT IN ('_Test Item')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE NOT IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (ITEM_CODE IN ('_Test Item'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:34.138998')) AND (ITEM_CODE IN ('_Test Item'))"
      ]
    },
    {
      "queryNo": 122,
      "pathList": [
        "SELECT ACCOUNT, POSTING_DATE, PARTY_TYPE, PARTY, COST_CENTER, FISCAL_YEAR, VOUCHER_TYPE, VOUCHER_NO, AGAINST_VOUCHER_TYPE, AGAINST_VOUCHER, COST_CENTER, COMPANY FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00001')",
        "SELECT ACCOUNT, POSTING_DATE, PARTY_TYPE, PARTY, COST_CENTER, FISCAL_YEAR, VOUCHER_TYPE, VOUCHER_NO, AGAINST_VOUCHER_TYPE, AGAINST_VOUCHER, COST_CENTER, COMPANY FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00001')",
        "SELECT ACCOUNT, POSTING_DATE, PARTY_TYPE, PARTY, COST_CENTER, FISCAL_YEAR, VOUCHER_TYPE, VOUCHER_NO, AGAINST_VOUCHER_TYPE, AGAINST_VOUCHER, COST_CENTER, COMPANY FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SR/00001')",
        "SELECT ACCOUNT, POSTING_DATE, PARTY_TYPE, PARTY, COST_CENTER, FISCAL_YEAR, VOUCHER_TYPE, VOUCHER_NO, AGAINST_VOUCHER_TYPE, AGAINST_VOUCHER, COST_CENTER, COMPANY FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'SR/00001') AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT ACCOUNT, POSTING_DATE, PARTY_TYPE, PARTY, COST_CENTER, FISCAL_YEAR, VOUCHER_TYPE, VOUCHER_NO, AGAINST_VOUCHER_TYPE, AGAINST_VOUCHER, COST_CENTER, COMPANY FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Reconciliation')"
      ]
    },
    {
      "queryNo": 123,
      "pathList": [
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY TYPE WHERE NOT (ACTIVITY_TYPE = '_Test Activity Type')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY TYPE WHERE (ACTIVITY_TYPE = '_Test Activity Type')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY TYPE WHERE (ACTIVITY_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 124,
      "pathList": [
        "SELECT MAX_DAYS_ALLOWED FROM TABLEAVE TYPE WHERE NOT (NAME = '_Test Leave Type')",
        "SELECT MAX_DAYS_ALLOWED FROM TABLEAVE TYPE WHERE (NAME = '_Test Leave Type')"
      ]
    },
    {
      "queryNo": 125,
      "pathList": [
        "SELECT * FROM TABVEHICLE LOG WHERE NOT (NAME = 'VLOG00001')",
        "SELECT * FROM TABVEHICLE LOG WHERE (NAME = 'VLOG00001')"
      ]
    },
    {
      "queryNo": 126,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer')",
        "SELECT MODIFIED, DOCSTATUS FROM TABCUSTOMER WHERE (NAME = '_Test Customer')"
      ]
    },
    {
      "queryNo": 127,
      "pathList": [
        "SELECT * FROM TABTODO WHERE NOT (NAME = '258546aad7')",
        "SELECT * FROM TABTODO WHERE (NAME = '258546aad7')"
      ]
    },
    {
      "queryNo": 128,
      "pathList": [
        "SELECT COMPANY FROM TABEMPLOYEE WHERE NOT (NAME = '_T-Employee-0001')",
        "SELECT COMPANY FROM TABEMPLOYEE WHERE (NAME = '_T-Employee-0001')"
      ]
    },
    {
      "queryNo": 129,
      "pathList": [
        "SELECT MAX(char_length(ASSIGNED_BY)) FROM TABTODO HAVING COUNT(char_length(ASSIGNED_BY)) > COUNT(DISTINCT char_length(ASSIGNED_BY)) AND COUNT(DISTINCT char_length(ASSIGNED_BY)) > 1"
      ]
    },
    {
      "queryNo": 130,
      "pathList": [
        "SELECT * FROM TABPARTY ACCOUNT WHERE (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE NOT (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Party Status Test') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE NOT (PARENT = 'Party Status Test') AND (PARENTTYPE = 'Customer') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Customer') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test')",
        "SELECT * FROM TABPARTY ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test')"
      ]
    },
    {
      "queryNo": 131,
      "pathList": [
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'earnings') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'earnings') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'earnings') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'earnings') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'earnings') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTFIELD = 'earnings') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (NAME IN ('034a7da75e', '8cc22132c5', '6f74fa19d5', '50467f0ee9')) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'earnings')"
      ]
    },
    {
      "queryNo": 132,
      "pathList": [
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (NAME = 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE (NAME = 'ITEM-PRICE-00005')"
      ]
    },
    {
      "queryNo": 133,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE NOT (RETURN_AGAINST = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (RETURN_AGAINST = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (RETURN_AGAINST IS NULL)"
      ]
    },
    {
      "queryNo": 134,
      "pathList": [
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Website Settings') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Website Settings') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND (SHARE_DOCTYPE = 'Website Settings') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Website Settings') AND ((USER = 'Guest')) AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND ((USER = 'Guest')) AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 2) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Website Settings')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 1) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Website Settings')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 0) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Website Settings')"
      ]
    },
    {
      "queryNo": 135,
      "pathList": [
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE IS NULL) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.EMAIL IS NULL) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME IS NULL) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '5b6fee6b2a')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (((TABEMAIL UNSUBSCRIBE.NAME IS NOT NULL))) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event' AND TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com' AND TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE ((TABEMAIL UNSUBSCRIBE.NAME IS NULL)) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event' AND TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com' AND TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00016')"
      ]
    },
    {
      "queryNo": 136,
      "pathList": [
        "SELECT DISTINCT SHARE_DOCTYPE, PARENTTYPE FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Role')",
        "SELECT DISTINCT SHARE_DOCTYPE, PARENTTYPE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Role')",
        "SELECT DISTINCT SHARE_DOCTYPE, PARENTTYPE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 137,
      "pathList": [
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTFIELD = 'exploded_items') AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (NAME IN ('4b60b0190a', '8dc9f0b3f7', 'c52dc866f3')) AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')"
      ]
    },
    {
      "queryNo": 138,
      "pathList": [
        "SELECT DISTINCT AGAINST_VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT AGAINST_VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT AGAINST_VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 139,
      "pathList": [
        "SELECT GRADE_CODE, THRESHOLD FROM TABGRADING SCALE INTERVAL WHERE NOT (TABGRADING SCALE INTERVAL.PARENT = '_Test Grading Scale')",
        "SELECT GRADE_CODE, THRESHOLD FROM TABGRADING SCALE INTERVAL WHERE (TABGRADING SCALE INTERVAL.PARENT = '_Test Grading Scale')",
        "SELECT GRADE_CODE, THRESHOLD FROM TABGRADING SCALE INTERVAL WHERE (TABGRADING SCALE INTERVAL.PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 140,
      "pathList": [
        "SELECT * FROM TABLEAVE APPLICATION WHERE NOT (NAME = 'LAP/00003')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (NAME = 'LAP/00003')"
      ]
    },
    {
      "queryNo": 141,
      "pathList": [
        "SELECT * FROM TABPROJECT USER WHERE (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'users')",
        "SELECT * FROM TABPROJECT USER WHERE NOT (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'users')",
        "SELECT * FROM TABPROJECT USER WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'users')",
        "SELECT * FROM TABPROJECT USER WHERE NOT (PARENT = '_Test Project 1') AND (PARENTTYPE = 'Project') AND (PARENTFIELD = 'users')",
        "SELECT * FROM TABPROJECT USER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Project') AND (PARENTFIELD = 'users')",
        "SELECT * FROM TABPROJECT USER WHERE NOT (PARENTFIELD = 'users') AND (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1')",
        "SELECT * FROM TABPROJECT USER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1')"
      ]
    },
    {
      "queryNo": 142,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('System Manager', 'Academics User', 'Accounts Manager', 'Accounts User', 'Analytics', 'Auditor', 'Blogger', 'Expense Approver', 'Fleet Manager', 'HR Manager', 'HR User', 'Instructor', 'Item Manager', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Leave Approver', 'Maintenance Manager', 'Maintenance User', 'Manufacturing Manager', 'Manufacturing User', 'Newsletter Manager', 'Projects Manager', 'Projects User', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Quality Manager', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Stock Manager', 'Stock User', 'Student', 'Support Team', 'System Manager', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('System Manager', 'Academics User', 'Accounts Manager', 'Accounts User', 'Analytics', 'Auditor', 'Blogger', 'Expense Approver', 'Fleet Manager', 'HR Manager', 'HR User', 'Instructor', 'Item Manager', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Leave Approver', 'Maintenance Manager', 'Maintenance User', 'Manufacturing Manager', 'Manufacturing User', 'Newsletter Manager', 'Projects Manager', 'Projects User', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Quality Manager', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Stock Manager', 'Stock User', 'Student', 'Support Team', 'System Manager', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('System Manager', 'Academics User', 'Accounts Manager', 'Accounts User', 'Analytics', 'Auditor', 'Blogger', 'Expense Approver', 'Fleet Manager', 'HR Manager', 'HR User', 'Instructor', 'Item Manager', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Leave Approver', 'Maintenance Manager', 'Maintenance User', 'Manufacturing Manager', 'Manufacturing User', 'Newsletter Manager', 'Projects Manager', 'Projects User', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Quality Manager', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Stock Manager', 'Stock User', 'Student', 'Support Team', 'System Manager', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('System Manager', 'Academics User', 'Accounts Manager', 'Accounts User', 'Analytics', 'Auditor', 'Blogger', 'Expense Approver', 'Fleet Manager', 'HR Manager', 'HR User', 'Instructor', 'Item Manager', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Leave Approver', 'Maintenance Manager', 'Maintenance User', 'Manufacturing Manager', 'Manufacturing User', 'Newsletter Manager', 'Projects Manager', 'Projects User', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Quality Manager', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Stock Manager', 'Stock User', 'Student', 'Support Team', 'System Manager', 'Website Manager')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('System Manager', 'Academics User', 'Accounts Manager', 'Accounts User', 'Analytics', 'Auditor', 'Blogger', 'Expense Approver', 'Fleet Manager', 'HR Manager', 'HR User', 'Instructor', 'Item Manager', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Leave Approver', 'Maintenance Manager', 'Maintenance User', 'Manufacturing Manager', 'Manufacturing User', 'Newsletter Manager', 'Projects Manager', 'Projects User', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Quality Manager', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Stock Manager', 'Stock User', 'Student', 'Support Team', 'System Manager', 'Website Manager')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 143,
      "pathList": [
        "SELECT TABROLE.NAME FROM TABROLE WHERE (TABROLE.DISABLED = 1.0 + 1)",
        "SELECT TABROLE.NAME FROM TABROLE WHERE (TABROLE.DISABLED = 1.0)",
        "SELECT TABROLE.NAME FROM TABROLE WHERE (TABROLE.DISABLED = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 144,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABNOTE WHERE NOT (NAME = 'test note')",
        "SELECT MODIFIED, DOCSTATUS FROM TABNOTE WHERE (NAME = 'test note')"
      ]
    },
    {
      "queryNo": 145,
      "pathList": [
        "SELECT NAME, IS_GROUP, COMPANY FROM TABACCOUNT WHERE NOT (NAME = 'Income - CFEC')",
        "SELECT NAME, IS_GROUP, COMPANY FROM TABACCOUNT WHERE (NAME = 'Income - CFEC')"
      ]
    },
    {
      "queryNo": 146,
      "pathList": [
        "SELECT EMAIL FROM TABUSER WHERE NOT (NAME = 'test2@example.com')",
        "SELECT EMAIL FROM TABUSER WHERE (NAME = 'test2@example.com')"
      ]
    },
    {
      "queryNo": 147,
      "pathList": [
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00014') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00014') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = 'DN-00014') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENT = 'DN-00014') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'taxes') AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00014')",
        "SELECT * FROM TABSALES TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00014')"
      ]
    },
    {
      "queryNo": 148,
      "pathList": [
        "SELECT NAME FROM TABTERRITORY WHERE (LFT = 2) AND (RGT >= 6)",
        "SELECT NAME FROM TABTERRITORY WHERE (LFT = 1) AND (RGT >= 6)",
        "SELECT NAME FROM TABTERRITORY WHERE (LFT = 0) AND (RGT >= 6)",
        "SELECT NAME FROM TABTERRITORY WHERE (RGT = 7) AND (LFT <= 1)",
        "SELECT NAME FROM TABTERRITORY WHERE (RGT = 6) AND (LFT <= 1)",
        "SELECT NAME FROM TABTERRITORY WHERE (RGT = 5) AND (LFT <= 1)"
      ]
    },
    {
      "queryNo": 149,
      "pathList": [
        "SELECT NAME FROM TABLEAD WHERE NOT (TABLEAD.STATUS = 'Open')",
        "SELECT NAME FROM TABLEAD WHERE (TABLEAD.STATUS = 'Open')",
        "SELECT NAME FROM TABLEAD WHERE (TABLEAD.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 150,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENT = 'QTN-00002') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENT = 'QTN-00002') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENTTYPE = 'Quotation') AND (PARENT = 'QTN-00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'QTN-00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'QTN-00002') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'QTN-00002') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('QUOD/00003'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (NAME IN ('QUOD/00003')) AND (PARENT = 'QTN-00002') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 151,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE NOT (NAME = 'Postal Expenses - _TC1')",
        "SELECT NAME FROM TABACCOUNT WHERE (NAME = 'Postal Expenses - _TC1')"
      ]
    },
    {
      "queryNo": 152,
      "pathList": [
      ]
    },
    {
      "queryNo": 153,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE NOT (DELIVERY_NOTE = 'DN-00022')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (DELIVERY_NOTE = 'DN-00022')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (DELIVERY_NOTE IS NULL)"
      ]
    },
    {
      "queryNo": 154,
      "pathList": [
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 2) AND (ENABLE_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 1) AND (ENABLE_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 0) AND (ENABLE_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 2) AND (DEFAULT_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 1) AND (DEFAULT_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 0) AND (DEFAULT_OUTGOING = 1)"
      ]
    },
    {
      "queryNo": 155,
      "pathList": [
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTFIELD = 'deductions') AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('546db97b86'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (NAME IN ('546db97b86')) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions')"
      ]
    },
    {
      "queryNo": 156,
      "pathList": [
        "SELECT MAX(char_length(BACKGROUND_STYLE)) FROM TABUSER HAVING COUNT(char_length(BACKGROUND_STYLE)) > COUNT(DISTINCT char_length(BACKGROUND_STYLE)) AND COUNT(DISTINCT char_length(BACKGROUND_STYLE)) > 1"
      ]
    },
    {
      "queryNo": 157,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE NOT (RETURN_AGAINST = 'DN-00030')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE (RETURN_AGAINST = 'DN-00030')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE (RETURN_AGAINST IS NULL)"
      ]
    },
    {
      "queryNo": 158,
      "pathList": [
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = '_T-Supplier Quotation-00002')",
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABSUPPLIER QUOTATION WHERE (NAME = '_T-Supplier Quotation-00002')"
      ]
    },
    {
      "queryNo": 159,
      "pathList": [
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD IN ('stock_frozen_upto_days')) AND (DOCTYPE = 'Stock Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD NOT IN ('stock_frozen_upto_days')) AND (DOCTYPE = 'Stock Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD IS NULL) AND (DOCTYPE = 'Stock Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE NOT (DOCTYPE = 'Stock Settings') AND (FIELD IN ('stock_frozen_upto_days'))",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (DOCTYPE IS NULL) AND (FIELD IN ('stock_frozen_upto_days'))"
      ]
    },
    {
      "queryNo": 160,
      "pathList": [
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (SALES_ORDER = 'SO-00027') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE NOT (SALES_ORDER = 'SO-00027') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (SALES_ORDER IS NULL) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 2) AND (SALES_ORDER = 'SO-00027')",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 1) AND (SALES_ORDER = 'SO-00027')",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 0) AND (SALES_ORDER = 'SO-00027')"
      ]
    },
    {
      "queryNo": 161,
      "pathList": [
        "SELECT * FROM TABITEM WHERE NOT (NAME = '_Test PPT Item Sub B')",
        "SELECT * FROM TABITEM WHERE (NAME = '_Test PPT Item Sub B')"
      ]
    },
    {
      "queryNo": 162,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'PCE/001') AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001')",
        "SELECT * FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001')",
        "SELECT SUM(DEBIT - CREDIT) AS AMOUNT, SUM(DEBIT_IN_ACCOUNT_CURRENCY - CREDIT_IN_ACCOUNT_CURRENCY) AS AMOUNT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Period Closing Voucher' AND VOUCHER_NO = 'PCE/001' AND ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(DEBIT - CREDIT) > COUNT(DISTINCT DEBIT - CREDIT) AND COUNT(DISTINCT DEBIT - CREDIT) > 1",
        "SELECT SUM(DEBIT - CREDIT) AS AMOUNT, SUM(DEBIT_IN_ACCOUNT_CURRENCY - CREDIT_IN_ACCOUNT_CURRENCY) AS AMOUNT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Period Closing Voucher' AND VOUCHER_NO = 'PCE/001' AND ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY - CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY - CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY - CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 163,
      "pathList": [
        "SELECT * FROM TABBOM OPERATION WHERE (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABBOM OPERATION WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABBOM OPERATION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABBOM OPERATION WHERE NOT (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABBOM OPERATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABBOM OPERATION WHERE NOT (PARENTFIELD = 'operations') AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub B-001')",
        "SELECT * FROM TABBOM OPERATION WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub B-001')"
      ]
    },
    {
      "queryNo": 165,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PRO-00001') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENTFIELD = 'operations') AND (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00001')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00001')"
      ]
    },
    {
      "queryNo": 166,
      "pathList": [
        "SELECT IS_DEFAULT FROM TABADDRESS TEMPLATE WHERE NOT (NAME = 'India')",
        "SELECT IS_DEFAULT FROM TABADDRESS TEMPLATE WHERE (NAME = 'India')"
      ]
    },
    {
      "queryNo": 167,
      "pathList": [
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (SERIAL_NO LIKE '%ABCD00007%') AND (ITEM_CODE = '_Test Serialized Item With Series') AND (IFNULL(IS_CANCELLED, 'No') = 'No')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (SERIAL_NO NOT LIKE '%ABCD00007%') AND (ITEM_CODE = '_Test Serialized Item With Series') AND (IFNULL(IS_CANCELLED, 'No') = 'No')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (SERIAL_NO IS NULL) AND (ITEM_CODE = '_Test Serialized Item With Series') AND (IFNULL(IS_CANCELLED, 'No') = 'No')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Serialized Item With Series') AND (SERIAL_NO LIKE '%ABCD00007%') AND (IFNULL(IS_CANCELLED, 'No') = 'No')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (SERIAL_NO LIKE '%ABCD00007%') AND (IFNULL(IS_CANCELLED, 'No') = 'No')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (IFNULL(IS_CANCELLED, 'No') = 'No') AND (SERIAL_NO LIKE '%ABCD00007%') AND (ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (((IS_CANCELLED IS NOT NULL))) AND (SERIAL_NO LIKE '%ABCD00007%' AND ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE ((IS_CANCELLED IS NULL)) AND (SERIAL_NO LIKE '%ABCD00007%' AND ITEM_CODE = '_Test Serialized Item With Series')"
      ]
    },
    {
      "queryNo": 168,
      "pathList": [
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00007') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00007') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'DN-00007') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENT = 'DN-00007') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00007')",
        "SELECT * FROM TABDELIVERY NOTE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00007')"
      ]
    },
    {
      "queryNo": 169,
      "pathList": [
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE (PARENTTYPE = 'Email Alert') AND (PARENT = '_Test Email Alert 2') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE NOT (PARENTTYPE = 'Email Alert') AND (PARENT = '_Test Email Alert 2') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Email Alert 2') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE NOT (PARENT = '_Test Email Alert 2') AND (PARENTTYPE = 'Email Alert') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Email Alert') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE NOT (PARENTFIELD = 'recipients') AND (PARENTTYPE = 'Email Alert') AND (PARENT = '_Test Email Alert 2')",
        "SELECT * FROM TABEMAIL ALERT RECIPIENT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Email Alert') AND (PARENT = '_Test Email Alert 2')"
      ]
    },
    {
      "queryNo": 170,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 2) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 0) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 2) AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 1) AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 0) AND (IS_DEFAULT = 1) AND (IS_ACTIVE = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 2) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 1) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_ACTIVE = 0) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (ITEM = '_Test FG Item') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE NOT (ITEM = '_Test FG Item') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM IS NULL) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)"
      ]
    },
    {
      "queryNo": 171,
      "pathList": [
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT ENTRY REFERENCE WHERE (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT ENTRY REFERENCE WHERE (REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 172,
      "pathList": [
        "SELECT * FROM TABDOCPERM WHERE (DOCSTATUS = 1) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (DOCSTATUS = -1) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (IFNULL(PERMLEVEL, 0) = 1) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (IFNULL(PERMLEVEL, 0) = 0) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (IFNULL(PERMLEVEL, 0) = -1) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABDOCPERM WHERE (ROLE NOT IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABDOCPERM WHERE (ROLE IS NULL) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABDOCPERM WHERE (((PERMLEVEL IS NOT NULL))) AND (DOCSTATUS = 0 AND ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABDOCPERM WHERE ((PERMLEVEL IS NULL)) AND (DOCSTATUS = 0 AND ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))"
      ]
    },
    {
      "queryNo": 173,
      "pathList": [
        "SELECT * FROM TABITEM PRICE WHERE NOT (NAME = 'ITEM-PRICE-00005')",
        "SELECT * FROM TABITEM PRICE WHERE (NAME = 'ITEM-PRICE-00005')"
      ]
    },
    {
      "queryNo": 174,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT = 'STE-00047') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = 'STE-00047') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = 'STE-00047') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'STE-00047') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'STE-00047') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'STE-00047') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('dcf63a3e55', '8393591a6f'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (NAME IN ('dcf63a3e55', '8393591a6f')) AND (PARENT = 'STE-00047') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 175,
      "pathList": [
        "SELECT LAST_ODOMETER FROM TABVEHICLE WHERE NOT (NAME = 'Z29BOJUG0R')",
        "SELECT LAST_ODOMETER FROM TABVEHICLE WHERE (NAME = 'Z29BOJUG0R')"
      ]
    },
    {
      "queryNo": 176,
      "pathList": [
        "SELECT NAME FROM TABDOCTYPE WHERE NOT (NAME = 'Lead')",
        "SELECT NAME FROM TABDOCTYPE WHERE (NAME = 'Lead')"
      ]
    },
    {
      "queryNo": 177,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSERIAL NO WHERE NOT (NAME = 'SN005')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSERIAL NO WHERE (NAME = 'SN005')"
      ]
    },
    {
      "queryNo": 178,
      "pathList": [
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE = 'Table') AND (OPTIONS IN (SELECT NAME FROM TABDOCTYPE WHERE ISTABLE = 1 AND NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole')))",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Table') AND (OPTIONS IN (SELECT NAME FROM TABDOCTYPE WHERE ISTABLE = 1 AND NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole')))",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS IN (SELECT NAME FROM TABDOCTYPE WHERE ISTABLE = 1 AND NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole')))",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE (OPTIONS NOT IN (SELECT NAME FROM TABDOCTYPE WHERE ISTABLE = 1 AND NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole'))) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE EXISTS (SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 2) AND (NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole'))) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE EXISTS (SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 1) AND (NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole'))) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE EXISTS (SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 0) AND (NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole'))) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE EXISTS (SELECT NAME FROM TABDOCTYPE WHERE (NAME IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole')) AND (ISTABLE = 1)) AND (FIELDTYPE = 'Table')",
        "SELECT PARENT, OPTIONS FROM TABDOCFIELD WHERE EXISTS (SELECT NAME FROM TABDOCTYPE WHERE (NAME NOT IN ('Portal Settings', 'Workflow Transition', 'Page Role', 'Stock Settings', 'Event Role', 'Authorization Rule', 'Email Alert Recipient', 'DocPerm', 'Portal Menu Item', 'Accounts Settings', 'Custom DocPerm', 'ToDo', 'Workflow Document State', 'UserRole')) AND (ISTABLE = 1)) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 179,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (ROOM IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (ROOM = 'RM0001') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (SCHEDULE_DATE IS NULL) AND (ROOM = 'RM0001') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND NOT (('2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME < '2:00:00') AND (FROM_TIME > '1:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND NOT (('1:00:00' = FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME < '2:00:00') AND (TO_TIME > '1:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('1:00:00' < TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' < TO_TIME) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('2:00:00' = TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('2:00:00' = TO_TIME) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (NAME <> 'SH00001') AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 180,
      "pathList": [
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE NOT (NAME = 'Test Variant PRT')",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (NAME = 'Test Variant PRT')"
      ]
    },
    {
      "queryNo": 181,
      "pathList": [
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00006')",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00006')",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE IS NULL) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00006')",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME = 'EV00006') AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event')",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.REFERENCE_NAME IS NULL) AND (TABEMAIL UNSUBSCRIBE.REFERENCE_DOCTYPE = 'Event')"
      ]
    },
    {
      "queryNo": 182,
      "pathList": [
        "SELECT * FROM TABSALES TEAM WHERE (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00001') AND (PARENTFIELD = 'sales_team')",
        "SELECT * FROM TABSALES TEAM WHERE NOT (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00001') AND (PARENTFIELD = 'sales_team')",
        "SELECT * FROM TABSALES TEAM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'DN-00001') AND (PARENTFIELD = 'sales_team')",
        "SELECT * FROM TABSALES TEAM WHERE NOT (PARENT = 'DN-00001') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'sales_team')",
        "SELECT * FROM TABSALES TEAM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'sales_team')",
        "SELECT * FROM TABSALES TEAM WHERE NOT (PARENTFIELD = 'sales_team') AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00001')",
        "SELECT * FROM TABSALES TEAM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00001')"
      ]
    },
    {
      "queryNo": 183,
      "pathList": [
        "SELECT CREDIT_LIMIT FROM TABCUSTOMER GROUP WHERE NOT (NAME = '_Test Customer Group')",
        "SELECT CREDIT_LIMIT FROM TABCUSTOMER GROUP WHERE (NAME = '_Test Customer Group')"
      ]
    },
    {
      "queryNo": 184,
      "pathList": [
        "SELECT * FROM TABEMAIL DIGEST WHERE NOT (NAME = 'Default Weekly Digest - Wind Power LLC')",
        "SELECT * FROM TABEMAIL DIGEST WHERE (NAME = 'Default Weekly Digest - Wind Power LLC')"
      ]
    },
    {
      "queryNo": 185,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Cash - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Cash - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL)",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Cash - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Cash - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 186,
      "pathList": [
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE NOT (EMAIL = 'test@example.com')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE (EMAIL = 'test@example.com')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE (EMAIL IS NULL)"
      ]
    },
    {
      "queryNo": 187,
      "pathList": [
        "SELECT NAME FROM TABTIMESHEET WHERE NOT (TABTIMESHEET.STATUS = 'Draft')",
        "SELECT NAME FROM TABTIMESHEET WHERE (TABTIMESHEET.STATUS = 'Draft')",
        "SELECT NAME FROM TABTIMESHEET WHERE (TABTIMESHEET.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 188,
      "pathList": [
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Quotation') AND (PARENT = '_T-Quotation-00004') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Quotation-00004') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'taxes') AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('INVTD000044', 'INVTD000045'))",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES WHERE (NAME IN ('INVTD000044', 'INVTD000045')) AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'taxes')"
      ]
    },
    {
      "queryNo": 189,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE NOT (AMENDED_FROM = '_T-Purchase Receipt-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (AMENDED_FROM = '_T-Purchase Receipt-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 190,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (TABSTOCK ENTRY.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (TABSTOCK ENTRY.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (TABSTOCK ENTRY.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 191,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTFIELD = 'timesheets') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTFIELD = 'timesheets') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENTFIELD = 'timesheets') AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('4a79ec1b35'))",
        "SELECT NAME FROM TABSALARY SLIP TIMESHEET WHERE (NAME IN ('4a79ec1b35')) AND (PARENT = 'Sal Slip/_T-Employee-0001/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets')"
      ]
    },
    {
      "queryNo": 193,
      "pathList": [
        "SELECT COURSE FROM TABSTUDENT GROUP WHERE NOT (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')",
        "SELECT COURSE FROM TABSTUDENT GROUP WHERE (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')"
      ]
    },
    {
      "queryNo": 194,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (LFT = 3) AND (RGT >= 3)",
        "SELECT NAME FROM TABFILE WHERE (LFT = 2) AND (RGT >= 3)",
        "SELECT NAME FROM TABFILE WHERE (LFT = 1) AND (RGT >= 3)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 4) AND (LFT <= 2)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 3) AND (LFT <= 2)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 2) AND (LFT <= 2)"
      ]
    },
    {
      "queryNo": 195,
      "pathList": [
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0002/00001') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0002/00001') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Sal Slip/EMP-0002/00001') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENT = 'Sal Slip/EMP-0002/00001') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE NOT (PARENTFIELD = 'timesheets') AND (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0002/00001')",
        "SELECT * FROM TABSALARY SLIP TIMESHEET WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0002/00001')"
      ]
    },
    {
      "queryNo": 196,
      "pathList": [
      ]
    },
    {
      "queryNo": 197,
      "pathList": [
        "SELECT * FROM TABEMAIL ACCOUNT WHERE NOT (NAME = '_Test Email Account 1')",
        "SELECT * FROM TABEMAIL ACCOUNT WHERE (NAME = '_Test Email Account 1')"
      ]
    },
    {
      "queryNo": 198,
      "pathList": [
        "SELECT NAME FROM TABATTENDANCE WHERE (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (EMPLOYEE IS NULL) AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE ((ATTENDANCE_DATE NOT BETWEEN '2013-01-01' AND '2013-01-05')) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS = 'Present') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (ATTENDANCE_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS = 'Present') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE NOT (STATUS = 'Present') AND (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present')",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present')",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0002') AND ((ATTENDANCE_DATE BETWEEN '2013-01-01' AND '2013-01-05')) AND (STATUS = 'Present')"
      ]
    },
    {
      "queryNo": 199,
      "pathList": [
        "SELECT SUBJECT FROM TABEVENT WHERE NOT (NAME = 'EV00018')",
        "SELECT SUBJECT FROM TABEVENT WHERE (NAME = 'EV00018')"
      ]
    },
    {
      "queryNo": 200,
      "pathList": [
        "SELECT * FROM TABTERRITORY WHERE NOT (NAME = 'Rest Of The World')",
        "SELECT * FROM TABTERRITORY WHERE (NAME = 'Rest Of The World')"
      ]
    },
    {
      "queryNo": 201,
      "pathList": [
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00001')",
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00001')"
      ]
    },
    {
      "queryNo": 202,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG CATEGORY WHERE NOT (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG CATEGORY WHERE (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG CATEGORY WHERE (ROUTE IS NULL)"
      ]
    },
    {
      "queryNo": 203,
      "pathList": [
        "SELECT * FROM TABPOS PROFILE WHERE NOT (NAME = '6125d62f89')",
        "SELECT * FROM TABPOS PROFILE WHERE (NAME = '6125d62f89')"
      ]
    },
    {
      "queryNo": 204,
      "pathList": [
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP INNER JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE NOT (MD.FISCAL_YEAR = '_Test Fiscal Year 2013')",
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP INNER JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE (MD.FISCAL_YEAR = '_Test Fiscal Year 2013')",
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP INNER JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE (MD.FISCAL_YEAR IS NULL)",
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP LEFT JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE (MD.NAME IS NULL) AND (MDP.PARENT IS NOT NULL)",
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP LEFT JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE (MD.NAME IS NULL) AND (MDP.PARENT IS NULL)",
        "SELECT MDP.MONTH, MDP.PERCENTAGE_ALLOCATION FROM TABMONTHLY DISTRIBUTION PERCENTAGE MDP RIGHT JOIN TABMONTHLY DISTRIBUTION MD ON MDP.PARENT = MD.NAME WHERE ((MDP.PARENT IS NULL) AND (MD.NAME IS NOT NULL)) AND (MD.FISCAL_YEAR = '_Test Fiscal Year 2013')"
      ]
    },
    {
      "queryNo": 205,
      "pathList": [
        "SELECT NAME FROM TABUOM WHERE NOT (NAME = 'Nos')",
        "SELECT NAME FROM TABUOM WHERE (NAME = 'Nos')"
      ]
    },
    {
      "queryNo": 206,
      "pathList": [
        "SELECT PARENT_ITEM_GROUP FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group B - 3')",
        "SELECT PARENT_ITEM_GROUP FROM TABITEM GROUP WHERE (NAME = '_Test Item Group B - 3')"
      ]
    },
    {
      "queryNo": 207,
      "pathList": [
        "SELECT NAME FROM TABISSUE WHERE NOT (TABISSUE.STATUS = 'Open')",
        "SELECT NAME FROM TABISSUE WHERE (TABISSUE.STATUS = 'Open')",
        "SELECT NAME FROM TABISSUE WHERE (TABISSUE.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 208,
      "pathList": [
        "SELECT NAME FROM TABSTUDENT GROUP WHERE NOT (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')",
        "SELECT NAME FROM TABSTUDENT GROUP WHERE (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')"
      ]
    },
    {
      "queryNo": 209,
      "pathList": [
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (USER = 'test@example.com') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER = 'test@example.com') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 2) AND NOT (USER = 'test@example.com') AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 1) AND NOT (USER = 'test@example.com') AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 0) AND NOT (USER = 'test@example.com') AND (SHARE_DOCTYPE = 'Event') AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Event') AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Event') AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE = 2) AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Event')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE = 1) AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Event')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE = 0) AND ((USER = 'test@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Event')"
      ]
    },
    {
      "queryNo": 210,
      "pathList": [
        "SELECT END_OF_LIFE, DISABLED FROM TABITEM WHERE NOT (NAME = '_Test FG Item 2')",
        "SELECT END_OF_LIFE, DISABLED FROM TABITEM WHERE (NAME = '_Test FG Item 2')"
      ]
    },
    {
      "queryNo": 211,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE (LFT = 2) AND (RGT >= 2)",
        "SELECT NAME FROM TABWAREHOUSE WHERE (LFT = 1) AND (RGT >= 2)",
        "SELECT NAME FROM TABWAREHOUSE WHERE (LFT = 0) AND (RGT >= 2)",
        "SELECT NAME FROM TABWAREHOUSE WHERE (RGT = 3) AND (LFT <= 1)",
        "SELECT NAME FROM TABWAREHOUSE WHERE (RGT = 2) AND (LFT <= 1)",
        "SELECT NAME FROM TABWAREHOUSE WHERE (RGT = 1) AND (LFT <= 1)"
      ]
    },
    {
      "queryNo": 212,
      "pathList": [
        "SELECT ROUND_OFF_ACCOUNT, ROUND_OFF_COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT ROUND_OFF_ACCOUNT, ROUND_OFF_COST_CENTER FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 213,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (TABSUPPLIER QUOTATION.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (TABSUPPLIER QUOTATION.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (TABSUPPLIER QUOTATION.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 214,
      "pathList": [
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (ITEM_CODE = '_Test Item 2') AND (PARENT = NULL)",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE NOT (ITEM_CODE = '_Test Item 2') AND (PARENT = NULL)",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (ITEM_CODE IS NULL) AND (PARENT = NULL)",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = NULL) AND (ITEM_CODE = '_Test Item 2')",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (ITEM_CODE = '_Test Item 2')"
      ]
    },
    {
      "queryNo": 215,
      "pathList": [
        "SELECT * FROM TABISSUE WHERE NOT (NAME = '_T-Issue-00001')",
        "SELECT * FROM TABISSUE WHERE (NAME = '_T-Issue-00001')"
      ]
    },
    {
      "queryNo": 217,
      "pathList": [
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'STE-00009') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'STE-00009') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00009')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00009')"
      ]
    },
    {
      "queryNo": 218,
      "pathList": [
        "SELECT MAX(char_length(STATUS)) FROM TABTODO HAVING COUNT(char_length(STATUS)) > COUNT(DISTINCT char_length(STATUS)) AND COUNT(DISTINCT char_length(STATUS)) > 1"
      ]
    },
    {
      "queryNo": 219,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMAINTENANCE SCHEDULE ITEM WHERE NOT (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMAINTENANCE SCHEDULE ITEM WHERE (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMAINTENANCE SCHEDULE ITEM WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 221,
      "pathList": [
        "SELECT NAME FROM TABBLOGGER WHERE NOT (NAME = '_Test Blogger 1')",
        "SELECT NAME FROM TABBLOGGER WHERE (NAME = '_Test Blogger 1')"
      ]
    },
    {
      "queryNo": 222,
      "pathList": [
        "SELECT MAX(char_length(FRAPPE_USERID)) FROM TABUSER HAVING COUNT(char_length(FRAPPE_USERID)) > COUNT(DISTINCT char_length(FRAPPE_USERID)) AND COUNT(DISTINCT char_length(FRAPPE_USERID)) > 1"
      ]
    },
    {
      "queryNo": 223,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABDOCTYPE WHERE NOT (NAME = 'ToDo')",
        "SELECT MODIFIED, DOCSTATUS FROM TABDOCTYPE WHERE (NAME = 'ToDo')"
      ]
    },
    {
      "queryNo": 224,
      "pathList": [
        "SELECT * FROM TABEMAIL UNSUBSCRIBE WHERE NOT (NAME = '624d3b0343')",
        "SELECT * FROM TABEMAIL UNSUBSCRIBE WHERE (NAME = '624d3b0343')"
      ]
    },
    {
      "queryNo": 225,
      "pathList": [
        "SELECT * FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00015')",
        "SELECT * FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00015')"
      ]
    },
    {
      "queryNo": 226,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE NOT (NAME = 'SLE/00000170')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE (NAME = 'SLE/00000170')"
      ]
    },
    {
      "queryNo": 227,
      "pathList": [
        "SELECT * FROM TABBLOG CATEGORY WHERE NOT (NAME = '_Test Blog Category')",
        "SELECT * FROM TABBLOG CATEGORY WHERE (NAME = '_Test Blog Category')"
      ]
    },
    {
      "queryNo": 228,
      "pathList": [
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.ISTABLE = 0.0 + 1)",
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.ISTABLE = 0.0)",
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.ISTABLE = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 229,
      "pathList": [
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE (FIRST_NAME = '_Test') AND (EMAIL = 'test@example.com')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE NOT (FIRST_NAME = '_Test') AND (EMAIL = 'test@example.com')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE (FIRST_NAME IS NULL) AND (EMAIL = 'test@example.com')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE NOT (EMAIL = 'test@example.com') AND (FIRST_NAME = '_Test')",
        "SELECT FIRST_NAME, EMAIL FROM TABUSER WHERE (EMAIL IS NULL) AND (FIRST_NAME = '_Test')"
      ]
    },
    {
      "queryNo": 230,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT = 'STE-00034') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = 'STE-00034') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = 'STE-00034') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'STE-00034') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'STE-00034') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'STE-00034') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (NAME IN ('2eab941bc2', '3d47f969d4', '20da1cea39', 'faaf85ebff')) AND (PARENT = 'STE-00034') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 231,
      "pathList": [
        "SELECT HAS_SERIAL_NO, IS_STOCK_ITEM, VALUATION_METHOD, HAS_BATCH_NO, IS_FIXED_ASSET FROM TABITEM WHERE NOT (NAME = '_Test FG Item')",
        "SELECT HAS_SERIAL_NO, IS_STOCK_ITEM, VALUATION_METHOD, HAS_BATCH_NO, IS_FIXED_ASSET FROM TABITEM WHERE (NAME = '_Test FG Item')"
      ]
    },
    {
      "queryNo": 232,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABMODE OF PAYMENT WHERE NOT (NAME = 'Cash')",
        "SELECT MODIFIED, DOCSTATUS FROM TABMODE OF PAYMENT WHERE (NAME = 'Cash')"
      ]
    },
    {
      "queryNo": 233,
      "pathList": [
        "SELECT TITLE, ROUTE FROM TABBLOG CATEGORY WHERE NOT (NAME = '_Test Blog Category 1')",
        "SELECT TITLE, ROUTE FROM TABBLOG CATEGORY WHERE (NAME = '_Test Blog Category 1')"
      ]
    },
    {
      "queryNo": 234,
      "pathList": [
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE (PARENTFIELD = 'website_item_groups') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Sub C')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENTFIELD = 'website_item_groups') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Sub C')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Sub C')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENTTYPE = 'Item') AND (PARENTFIELD = 'website_item_groups') AND (PARENT = '_Test PPT Item Sub C')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE (PARENTTYPE IS NULL) AND (PARENTFIELD = 'website_item_groups') AND (PARENT = '_Test PPT Item Sub C')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENT = '_Test PPT Item Sub C') AND (PARENTFIELD = 'website_item_groups') AND (PARENTTYPE = 'Item')",
        "SELECT ITEM_GROUP FROM TABWEBSITE ITEM GROUP WHERE (PARENT IS NULL) AND (PARENTFIELD = 'website_item_groups') AND (PARENTTYPE = 'Item')"
      ]
    },
    {
      "queryNo": 235,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABTODO WHERE NOT (NAME = 'a7cafe70e0')",
        "SELECT MODIFIED, DOCSTATUS FROM TABTODO WHERE (NAME = 'a7cafe70e0')"
      ]
    },
    {
      "queryNo": 236,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00001')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00001')"
      ]
    },
    {
      "queryNo": 238,
      "pathList": [
      ]
    },
    {
      "queryNo": 239,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00005')",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00005')"
      ]
    },
    {
      "queryNo": 240,
      "pathList": [
        "SELECT * FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00023')",
        "SELECT * FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00023')"
      ]
    },
    {
      "queryNo": 241,
      "pathList": [
        "SELECT * FROM TABBOM OPERATION WHERE NOT (NAME = '44752a0688')",
        "SELECT * FROM TABBOM OPERATION WHERE (NAME = '44752a0688')"
      ]
    },
    {
      "queryNo": 242,
      "pathList": [
        "SELECT STATUS FROM TABTODO WHERE NOT (NAME = 'd915c02fde')",
        "SELECT STATUS FROM TABTODO WHERE (NAME = 'd915c02fde')"
      ]
    },
    {
      "queryNo": 243,
      "pathList": [
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAID_FROM IS NULL) AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PAYMENT_TYPE = 'Receive') AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAYMENT_TYPE IS NULL) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PARTY_TYPE = 'Customer') AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PARTY_TYPE IS NULL) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PARTY = '_Test Customer') AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PARTY IS NULL) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_DOCTYPE = 'Sales Order') AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_DOCTYPE IS NULL) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_NAME NOT IN ('SO-00004')) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order')",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_NAME IS NULL) AND (T1.PAID_FROM = 'Debtors - _TC') AND (T1.PAYMENT_TYPE = 'Receive') AND (T1.PARTY_TYPE = 'Customer') AND (T1.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Sales Order')",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 LEFT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.PAID_FROM = 'Debtors - _TC' AND T1.PAYMENT_TYPE = 'Receive' AND T1.PARTY_TYPE = 'Customer' AND T1.PARTY = '_Test Customer' AND T1.DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 RIGHT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.REFERENCE_DOCTYPE = 'Sales Order' AND T2.REFERENCE_NAME IN ('SO-00004'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 RIGHT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.REFERENCE_DOCTYPE = 'Sales Order' AND T2.REFERENCE_NAME IN ('SO-00004'))"
      ]
    },
    {
      "queryNo": 244,
      "pathList": [
        "SELECT NAME FROM TABITEM PRICE WHERE (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE (PRICE_LIST IS NULL) AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (ITEM_CODE = '_Test Item for Auto Price List') AND (PRICE_LIST = '_Test Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE (ITEM_CODE IS NULL) AND (PRICE_LIST = '_Test Price List')"
      ]
    },
    {
      "queryNo": 245,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL = '04f74702ca') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PR_DETAIL = '04f74702ca') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL IS NULL) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (PR_DETAIL = '04f74702ca')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (PR_DETAIL = '04f74702ca')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (PR_DETAIL = '04f74702ca')",
        "SELECT SUM(AMOUNT) FROM TABPURCHASE INVOICE ITEM WHERE PR_DETAIL = '04f74702ca' AND DOCSTATUS = 1 HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 246,
      "pathList": [
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (QTY = DELIVERED_QTY + 1) AND (NAME = 'b8c3e2bc27') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (QTY = DELIVERED_QTY) AND (NAME = 'b8c3e2bc27') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (QTY = DELIVERED_QTY - 1) AND (NAME = 'b8c3e2bc27') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (NAME = 'b8c3e2bc27') AND (QTY < DELIVERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE NOT (NAME = 'b8c3e2bc27') AND (QTY < DELIVERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 2) AND (QTY < DELIVERED_QTY) AND (NAME = 'b8c3e2bc27')",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 1) AND (QTY < DELIVERED_QTY) AND (NAME = 'b8c3e2bc27')",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 0) AND (QTY < DELIVERED_QTY) AND (NAME = 'b8c3e2bc27')"
      ]
    },
    {
      "queryNo": 247,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE IS NULL) AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER = 'PINV-00001') AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (ACCOUNT = 'Creditors - _TC') AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY_TYPE = 'Supplier') AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY_TYPE IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY = '_Test Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY = '_Test Supplier') AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Purchase Invoice') AND (AGAINST_VOUCHER = 'PINV-00001') AND (ACCOUNT = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE AGAINST_VOUCHER_TYPE = 'Purchase Invoice' AND AGAINST_VOUCHER = 'PINV-00001' AND ACCOUNT = 'Creditors - _TC' AND PARTY_TYPE = 'Supplier' AND PARTY = '_Test Supplier' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE AGAINST_VOUCHER_TYPE = 'Purchase Invoice' AND AGAINST_VOUCHER = 'PINV-00001' AND ACCOUNT = 'Creditors - _TC' AND PARTY_TYPE = 'Supplier' AND PARTY = '_Test Supplier' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 248,
      "pathList": [
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (IFNULL(TABBLOG POST.ROUTE, '') <> '') AND (TABBLOG POST.PUBLISHED = 1.0)",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE NOT (IFNULL(TABBLOG POST.ROUTE, '') <> '') AND (TABBLOG POST.PUBLISHED = 1.0)",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 1.0 + 1) AND (IFNULL(TABBLOG POST.ROUTE, '') <> '')",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 1.0) AND (IFNULL(TABBLOG POST.ROUTE, '') <> '')",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 1.0 - 1) AND (IFNULL(TABBLOG POST.ROUTE, '') <> '')",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (((TABBLOG POST.ROUTE IS NOT NULL))) AND (TABBLOG POST.PUBLISHED = 1.0)",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE ((TABBLOG POST.ROUTE IS NULL)) AND (TABBLOG POST.PUBLISHED = 1.0)"
      ]
    },
    {
      "queryNo": 249,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.FISCAL_YEAR IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.COMPANY = '_Test Company') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.COMPANY IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 2) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 1) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 0) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (NOT EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 11) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 10) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 9) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 12) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 11) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 10) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (NAME = GLE.COST_CENTER) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = GLE.COST_CENTER) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (GLE.COST_CENTER IS NULL) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER) HAVING COUNT(GLE.DEBIT) > COUNT(DISTINCT GLE.DEBIT) AND COUNT(DISTINCT GLE.DEBIT) > 1",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER) HAVING COUNT(GLE.CREDIT) > COUNT(DISTINCT GLE.CREDIT) AND COUNT(DISTINCT GLE.CREDIT) > 1"
      ]
    },
    {
      "queryNo": 250,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE >= '2017-02-09') AND (VOUCHER_NO IN ('PREC-00007'))",
        "SELECT * FROM TABGL ENTRY WHERE NOT (POSTING_DATE >= '2017-02-09') AND (VOUCHER_NO IN ('PREC-00007'))",
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE IS NULL) AND (VOUCHER_NO IN ('PREC-00007'))",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO NOT IN ('PREC-00007')) AND (POSTING_DATE >= '2017-02-09')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (POSTING_DATE >= '2017-02-09')"
      ]
    },
    {
      "queryNo": 251,
      "pathList": [
        "SELECT * FROM TABDOCSHARE WHERE NOT (NAME = 'c706681d76')",
        "SELECT * FROM TABDOCSHARE WHERE (NAME = 'c706681d76')"
      ]
    },
    {
      "queryNo": 252,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 2) AND (NAME IN ('_Test Serialized Item'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 1) AND (NAME IN ('_Test Serialized Item'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 0) AND (NAME IN ('_Test Serialized Item'))",
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Serialized Item')) AND (HAS_SERIAL_NO = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Serialized Item')) AND (HAS_SERIAL_NO = 1)"
      ]
    },
    {
      "queryNo": 253,
      "pathList": [
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER INNER JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE NOT (TABUSERROLE.ROLE = 'System Manager')",
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER INNER JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSERROLE.ROLE = 'System Manager')",
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER INNER JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSERROLE.ROLE IS NULL)",
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER LEFT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSERROLE.PARENT IS NULL) AND (TABUSER.NAME IS NOT NULL)",
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER RIGHT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE ((TABUSER.NAME IS NULL) AND (TABUSERROLE.PARENT IS NOT NULL)) AND (TABUSERROLE.ROLE = 'System Manager')",
        "SELECT TABUSER.LOCATION, TABUSER.USER_TYPE, TABUSER.NAME, TABUSER.MODIFIED, TABUSER.DOCSTATUS FROM TABUSER RIGHT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE ((TABUSER.NAME IS NULL) AND (TABUSERROLE.PARENT IS NULL)) AND (TABUSERROLE.ROLE = 'System Manager')"
      ]
    },
    {
      "queryNo": 254,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT ENTRY WHERE (TABPAYMENT ENTRY.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABPAYMENT ENTRY WHERE (TABPAYMENT ENTRY.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABPAYMENT ENTRY WHERE (TABPAYMENT ENTRY.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 255,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00011')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00011')"
      ]
    },
    {
      "queryNo": 256,
      "pathList": [
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT IS NULL) AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY_TYPE = 'Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY_TYPE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY = '_Test Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.IS_ADVANCE = 'Yes') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.IS_ADVANCE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = -1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND NOT ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') = '') AND NOT ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE = 'Sales Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_TYPE = 'Sales Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE IS NULL) AND (IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') NOT IN ('_T-Quotation-00002')) AND (T2.REFERENCE_TYPE = 'Sales Order') AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 LEFT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('_T-Quotation-00002'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (((T2.REFERENCE_NAME IS NOT NULL))) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND ((T2.REFERENCE_TYPE = 'Sales Order')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.REFERENCE_NAME IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND ((T2.REFERENCE_TYPE = 'Sales Order')))"
      ]
    },
    {
      "queryNo": 257,
      "pathList": [
      ]
    },
    {
      "queryNo": 258,
      "pathList": [
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00003')",
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABSALES ORDER WHERE (NAME = 'SO-00003')"
      ]
    },
    {
      "queryNo": 259,
      "pathList": [
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS, SUPPLIER_TYPE FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier USD')",
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS, SUPPLIER_TYPE FROM TABSUPPLIER WHERE (NAME = '_Test Supplier USD')"
      ]
    },
    {
      "queryNo": 260,
      "pathList": [
        "SELECT PARENTTYPE, PARENT FROM TABROLE WHERE NOT (NAME = 'System Manager')",
        "SELECT PARENTTYPE, PARENT FROM TABROLE WHERE (NAME = 'System Manager')"
      ]
    },
    {
      "queryNo": 261,
      "pathList": [
        "SELECT LEAD, ORDER_TYPE, CUSTOMER FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00002')",
        "SELECT LEAD, ORDER_TYPE, CUSTOMER FROM TABQUOTATION WHERE (NAME = 'QTN-00002')"
      ]
    },
    {
      "queryNo": 262,
      "pathList": [
        "SELECT NAME FROM TABTASK AS PARENT WHERE ('TASK00013' NOT IN (SELECT TASK FROM TABTASK DEPENDS ON AS CHILD WHERE PARENT.NAME = CHILD.PARENT))",
        "SELECT NAME FROM TABTASK AS PARENT WHERE ('TASK00013' IN (SELECT TASK FROM TABTASK DEPENDS ON AS CHILD WHERE PARENT.NAME = CHILD.PARENT))",
        "SELECT NAME FROM TABTASK AS PARENT WHERE EXISTS (SELECT TASK FROM TABTASK DEPENDS ON AS CHILD WHERE NOT (PARENT.NAME = CHILD.PARENT))",
        "SELECT NAME FROM TABTASK AS PARENT WHERE EXISTS (SELECT TASK FROM TABTASK DEPENDS ON AS CHILD WHERE (PARENT.NAME = CHILD.PARENT))",
        "SELECT NAME FROM TABTASK AS PARENT WHERE EXISTS (SELECT TASK FROM TABTASK DEPENDS ON AS CHILD WHERE (CHILD.PARENT IS NULL))"
      ]
    },
    {
      "queryNo": 263,
      "pathList": [
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (NAME = 'a762693219')",
        "SELECT NAME FROM TABDOCSHARE WHERE (NAME = 'a762693219')"
      ]
    },
    {
      "queryNo": 264,
      "pathList": [
        "SELECT MAX(char_length(LOCATION)) FROM TABUSER HAVING COUNT(char_length(LOCATION)) > COUNT(DISTINCT char_length(LOCATION)) AND COUNT(DISTINCT char_length(LOCATION)) > 1"
      ]
    },
    {
      "queryNo": 265,
      "pathList": [
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.LFT = 48) AND (WH.RGT < 52)",
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.LFT = 47) AND (WH.RGT < 52)",
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.LFT = 46) AND (WH.RGT < 52)",
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.RGT = 53) AND (WH.LFT > 47)",
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.RGT = 52) AND (WH.LFT > 47)",
        "SELECT NAME, IS_GROUP, PARENT_WAREHOUSE FROM TABWAREHOUSE WH WHERE (WH.RGT = 51) AND (WH.LFT > 47)"
      ]
    },
    {
      "queryNo": 266,
      "pathList": [
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE (SRC.COUNTRY = 'India') AND (SR.DISABLED <> 1)",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE NOT (SRC.COUNTRY = 'India') AND (SR.DISABLED <> 1)",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE (SRC.COUNTRY IS NULL) AND (SR.DISABLED <> 1)",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE (SR.DISABLED = 2) AND (SRC.COUNTRY = 'India')",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE (SR.DISABLED = 1) AND (SRC.COUNTRY = 'India')",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC INNER JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE (SR.DISABLED = 0) AND (SRC.COUNTRY = 'India')",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC LEFT JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE ((SR.NAME IS NULL) AND (SRC.PARENT IS NOT NULL)) AND (SRC.COUNTRY = 'India')",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC LEFT JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE ((SR.NAME IS NULL) AND (SRC.PARENT IS NULL)) AND (SRC.COUNTRY = 'India')",
        "SELECT DISTINCT SR.NAME FROM TABSHIPPING RULE COUNTRY SRC RIGHT JOIN TABSHIPPING RULE SR ON SR.NAME = SRC.PARENT WHERE ((SRC.PARENT IS NULL) AND (SR.NAME IS NOT NULL)) AND (SR.DISABLED <> 1)"
      ]
    },
    {
      "queryNo": 267,
      "pathList": [
        "SELECT R.RECIPIENT, Q.MESSAGE, Q.MESSAGE_ID FROM TABEMAIL QUEUE AS Q INNER JOIN TABEMAIL QUEUE RECIPIENT AS R ON Q.NAME = R.PARENT",
        "SELECT R.RECIPIENT, Q.MESSAGE, Q.MESSAGE_ID FROM TABEMAIL QUEUE AS Q LEFT JOIN TABEMAIL QUEUE RECIPIENT AS R ON Q.NAME = R.PARENT WHERE (R.PARENT IS NULL) AND (Q.NAME IS NOT NULL)",
        "SELECT R.RECIPIENT, Q.MESSAGE, Q.MESSAGE_ID FROM TABEMAIL QUEUE AS Q RIGHT JOIN TABEMAIL QUEUE RECIPIENT AS R ON Q.NAME = R.PARENT WHERE (Q.NAME IS NULL) AND (R.PARENT IS NOT NULL)",
        "SELECT R.RECIPIENT, Q.MESSAGE, Q.MESSAGE_ID FROM TABEMAIL QUEUE AS Q RIGHT JOIN TABEMAIL QUEUE RECIPIENT AS R ON Q.NAME = R.PARENT WHERE (Q.NAME IS NULL) AND (R.PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 268,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.CUSTOMER = '_Test Customer') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0) AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (TABQUOTATION.CUSTOMER = '_Test Customer') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0) AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.CUSTOMER IS NULL) AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0) AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0 + 1) AND (TABQUOTATION.CUSTOMER = '_Test Customer') AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0) AND (TABQUOTATION.CUSTOMER = '_Test Customer') AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0 - 1) AND (TABQUOTATION.CUSTOMER = '_Test Customer') AND (TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (TABQUOTATION.ORDER_TYPE = 'Shopping Cart') AND (TABQUOTATION.CUSTOMER = '_Test Customer') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.ORDER_TYPE IS NULL) AND (TABQUOTATION.CUSTOMER = '_Test Customer') AND (IFNULL(TABQUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE (((TABQUOTATION.DOCSTATUS IS NOT NULL))) AND (TABQUOTATION.CUSTOMER = '_Test Customer' AND TABQUOTATION.ORDER_TYPE = 'Shopping Cart')",
        "SELECT NAME FROM TABQUOTATION WHERE ((TABQUOTATION.DOCSTATUS IS NULL)) AND (TABQUOTATION.CUSTOMER = '_Test Customer' AND TABQUOTATION.ORDER_TYPE = 'Shopping Cart')"
      ]
    },
    {
      "queryNo": 269,
      "pathList": [
        "SELECT NAME, DEPARTMENT, DESIGNATION, BRANCH FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0001')",
        "SELECT NAME, DEPARTMENT, DESIGNATION, BRANCH FROM TABEMPLOYEE WHERE (NAME = 'EMP-0001')"
      ]
    },
    {
      "queryNo": 270,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test2@example.com') AND (ROLE = 'Leave Approver')",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test2@example.com') AND (ROLE = 'Leave Approver')",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (ROLE = 'Leave Approver')",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (ROLE = 'Leave Approver') AND (PARENT = 'test2@example.com')",
        "SELECT NAME FROM TABUSERROLE WHERE (ROLE IS NULL) AND (PARENT = 'test2@example.com')"
      ]
    },
    {
      "queryNo": 271,
      "pathList": [
        "SELECT NAME FROM TABTRANSLATION WHERE NOT (NAME = 'ac684348bb')",
        "SELECT NAME FROM TABTRANSLATION WHERE (NAME = 'ac684348bb')"
      ]
    },
    {
      "queryNo": 272,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABEXPENSE CLAIM WHERE NOT (AMENDED_FROM = 'EXP00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABEXPENSE CLAIM WHERE (AMENDED_FROM = 'EXP00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABEXPENSE CLAIM WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 273,
      "pathList": [
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENT = 'Salary Slip Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENT = 'Salary Slip Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENTTYPE = 'Holiday List') AND (PARENT = 'Salary Slip Test Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Salary Slip Test Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENTFIELD = 'holidays') AND (PARENT = 'Salary Slip Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Salary Slip Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (NAME NOT IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (NAME IN ('50c90a4f3f', '6a9d98be8a', '37c5899908', 'e6229da952', 'f70cc0fda6', 'ff49461a9d', 'fa7c2e0015', 'a7375f3866', 'c7b4ad0976', '5ab722a765', '4c0d729cae', 'b433fb2701', 'dbbfafeff9', '8aad95b76d', '6090c8c93e', '1f7e0bbc22', 'bca140aeda', '8197e61d0e', 'fe9c836f36', '2a4a03797f', 'a4b05da848', 'de3c55a46c', 'd96579b2c3', 'be10fa5031', '6d4c10480b', '80f920431e', '6a8ee938c2', 'bc3c018087', 'a98cae97da', 'e7ca451bd4', '3732a62e83', '22d6a6d068', 'b8498d39e7', 'f2d4099f13', 'c03250791d', '50ce1f3597', 'e2ee11ac33', '1fe7a8e296', '762f2853ee', 'e8e1857d7f', 'de91ac4a81', '262f9906f5', '7bbc55c975', '5866cd132b', 'cbbe8500cf', 'a5ab320637', '24e7e56d55', '85901ad42e', '48b90283c7', '0f91a5018a', 'e0b61324f5', 'f62398f370', 'b517fcdaa7')) AND (PARENT = 'Salary Slip Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays')"
      ]
    },
    {
      "queryNo": 274,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE NOT (SALES_ORDER = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE (SALES_ORDER = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 275,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (EMPLOYEE_NAME = 'test_employee@salary.com')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE_NAME = 'test_employee@salary.com')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 276,
      "pathList": [
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00005') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005')",
        "SELECT SUM(STOCK_VALUE_DIFFERENCE) FROM TABSTOCK LEDGER ENTRY WHERE VOUCHER_TYPE = 'Delivery Note' AND VOUCHER_NO = 'DN-00005' AND WAREHOUSE = '_Test Warehouse - _TC' HAVING COUNT(STOCK_VALUE_DIFFERENCE) > COUNT(DISTINCT STOCK_VALUE_DIFFERENCE) AND COUNT(DISTINCT STOCK_VALUE_DIFFERENCE) > 1"
      ]
    },
    {
      "queryNo": 277,
      "pathList": [
        "SELECT PRICE_LIST_RATE FROM TABITEM PRICE WHERE (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT PRICE_LIST_RATE FROM TABITEM PRICE WHERE NOT (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT PRICE_LIST_RATE FROM TABITEM PRICE WHERE (PRICE_LIST IS NULL) AND (ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT PRICE_LIST_RATE FROM TABITEM PRICE WHERE NOT (ITEM_CODE = '_Test Serialized Item With Series') AND (PRICE_LIST = '_Test Price List')",
        "SELECT PRICE_LIST_RATE FROM TABITEM PRICE WHERE (ITEM_CODE IS NULL) AND (PRICE_LIST = '_Test Price List')"
      ]
    },
    {
      "queryNo": 278,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABEXPENSE CLAIM WHERE NOT (NAME = 'EXP00002')",
        "SELECT MODIFIED, DOCSTATUS FROM TABEXPENSE CLAIM WHERE (NAME = 'EXP00002')"
      ]
    },
    {
      "queryNo": 279,
      "pathList": [
        "SELECT * FROM TABEXPENSE CLAIM WHERE (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE NOT (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (PROJECT IS NULL) AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE NOT (APPROVAL_STATUS = 'Approved') AND (PROJECT = '_Test Project 1') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (APPROVAL_STATUS IS NULL) AND (PROJECT = '_Test Project 1') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 0) AND (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT SUM(TOTAL_SANCTIONED_AMOUNT) AS TOTAL_SANCTIONED_AMOUNT FROM TABEXPENSE CLAIM WHERE PROJECT = '_Test Project 1' AND APPROVAL_STATUS = 'Approved' AND DOCSTATUS = 1 HAVING COUNT(TOTAL_SANCTIONED_AMOUNT) > COUNT(DISTINCT TOTAL_SANCTIONED_AMOUNT) AND COUNT(DISTINCT TOTAL_SANCTIONED_AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 280,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '43ffd8b84e')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 281,
      "pathList": [
      ]
    },
    {
      "queryNo": 282,
      "pathList": [
        "SELECT HAS_SERIAL_NO FROM TABITEM WHERE NOT (ITEM_CODE = '_Test Item')",
        "SELECT HAS_SERIAL_NO FROM TABITEM WHERE (ITEM_CODE = '_Test Item')",
        "SELECT HAS_SERIAL_NO FROM TABITEM WHERE (ITEM_CODE IS NULL)"
      ]
    },
    {
      "queryNo": 283,
      "pathList": [
        "SELECT NAME FROM TABSALES PERSON WHERE NOT (NAME = '_Test Sales Person 1')",
        "SELECT NAME FROM TABSALES PERSON WHERE (NAME = '_Test Sales Person 1')"
      ]
    },
    {
      "queryNo": 284,
      "pathList": [
        "SELECT FULL_NAME FROM TABUSER WHERE NOT (NAME = 'Administrator')",
        "SELECT FULL_NAME FROM TABUSER WHERE (NAME = 'Administrator')"
      ]
    },
    {
      "queryNo": 285,
      "pathList": [
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item SC B') AND (PARENTFIELD = 'attributes')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item SC B') AND (PARENTFIELD = 'attributes')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item SC B') AND (PARENTFIELD = 'attributes')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENTFIELD = 'attributes') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item SC B')",
        "SELECT * FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item SC B')"
      ]
    },
    {
      "queryNo": 286,
      "pathList": [
        "SELECT ENABLED FROM TABPRICE LIST WHERE NOT (NAME = '_Test Price List 2')",
        "SELECT ENABLED FROM TABPRICE LIST WHERE (NAME = '_Test Price List 2')"
      ]
    },
    {
      "queryNo": 287,
      "pathList": [
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')"
      ]
    },
    {
      "queryNo": 288,
      "pathList": [
        "SELECT NAME, ITEM_NAME, DOCSTATUS, DESCRIPTION, IMAGE, IS_SUB_CONTRACTED_ITEM, STOCK_UOM, DEFAULT_BOM, LAST_PURCHASE_RATE FROM TABITEM WHERE NOT (NAME = '_Test PPT Item SC B')",
        "SELECT NAME, ITEM_NAME, DOCSTATUS, DESCRIPTION, IMAGE, IS_SUB_CONTRACTED_ITEM, STOCK_UOM, DEFAULT_BOM, LAST_PURCHASE_RATE FROM TABITEM WHERE (NAME = '_Test PPT Item SC B')"
      ]
    },
    {
      "queryNo": 289,
      "pathList": [
        "SELECT MAX(char_length(ROLE)) FROM TABTODO HAVING COUNT(char_length(ROLE)) > COUNT(DISTINCT char_length(ROLE)) AND COUNT(DISTINCT char_length(ROLE)) > 1"
      ]
    },
    {
      "queryNo": 290,
      "pathList": [
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE (ENABLED = 2) AND (USER_TYPE <> 'Website User')",
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE (ENABLED = 1) AND (USER_TYPE <> 'Website User')",
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE (ENABLED = 0) AND (USER_TYPE <> 'Website User')",
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE (USER_TYPE <> 'Website User') AND (ENABLED = 1)",
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE NOT (USER_TYPE <> 'Website User') AND (ENABLED = 1)",
        "SELECT NAME, FULL_NAME AS FULLNAME, USER_IMAGE AS IMAGE, GENDER, EMAIL, USERNAME FROM TABUSER WHERE (USER_TYPE IS NULL) AND (ENABLED = 1)"
      ]
    },
    {
      "queryNo": 291,
      "pathList": [
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (POSTING_DATE <= '2017-02-09') AND (EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE WH.NAME = SLE.WAREHOUSE AND WH.LFT >= 0 AND WH.RGT <= 0))",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (POSTING_DATE <= '2017-02-09') AND (EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE WH.NAME = SLE.WAREHOUSE AND WH.LFT >= 0 AND WH.RGT <= 0))",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (POSTING_DATE IS NULL) AND (EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE WH.NAME = SLE.WAREHOUSE AND WH.LFT >= 0 AND WH.RGT <= 0))",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (NOT EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE WH.NAME = SLE.WAREHOUSE AND WH.LFT >= 0 AND WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.NAME = SLE.WAREHOUSE) AND (WH.LFT >= 0) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE NOT (WH.NAME = SLE.WAREHOUSE) AND (WH.LFT >= 0) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (SLE.WAREHOUSE IS NULL) AND (WH.LFT >= 0) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.LFT = 1) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.LFT = 0) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.LFT = -1) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.RGT <= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.RGT = 1) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.LFT >= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.RGT = 0) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.LFT >= 0)) AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE EXISTS (SELECT NAME FROM TABWAREHOUSE WH WHERE (WH.RGT = -1) AND (WH.NAME = SLE.WAREHOUSE) AND (WH.LFT >= 0)) AND (POSTING_DATE <= '2017-02-09')"
      ]
    },
    {
      "queryNo": 292,
      "pathList": [
        "SELECT ITEM FROM TABBOM WHERE NOT (NAME = 'BOM-_Test PPT Item Sub A-001')",
        "SELECT ITEM FROM TABBOM WHERE (NAME = 'BOM-_Test PPT Item Sub A-001')"
      ]
    },
    {
      "queryNo": 293,
      "pathList": [
        "SELECT DISTINCT INVOICE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION INVOICE WHERE NOT (INVOICE_TYPE = 'Role')",
        "SELECT DISTINCT INVOICE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION INVOICE WHERE (INVOICE_TYPE = 'Role')",
        "SELECT DISTINCT INVOICE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION INVOICE WHERE (INVOICE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 294,
      "pathList": [
      ]
    },
    {
      "queryNo": 295,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 2) AND (NAME <> '_Test Gateway - INR')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 1) AND (NAME <> '_Test Gateway - INR')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 0) AND (NAME <> '_Test Gateway - INR')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (NAME <> '_Test Gateway - INR') AND (IS_DEFAULT = 1)",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE NOT (NAME <> '_Test Gateway - INR') AND (IS_DEFAULT = 1)"
      ]
    },
    {
      "queryNo": 296,
      "pathList": [
        "SELECT * FROM TABNOTE WHERE NOT (NAME = 'test note')",
        "SELECT * FROM TABNOTE WHERE (NAME = 'test note')"
      ]
    },
    {
      "queryNo": 297,
      "pathList": [
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE (PARENT IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'customer_groups') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE (PARENTTYPE IS NULL) AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'customer_groups') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE NOT (PARENTFIELD = 'customer_groups') AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE (PARENTFIELD IS NULL) AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (NAME NOT IN ('dae1310fc9'))",
        "SELECT NAME FROM TABPOS CUSTOMER GROUP WHERE (NAME IN ('dae1310fc9')) AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'customer_groups')"
      ]
    },
    {
      "queryNo": 299,
      "pathList": [
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_DETAIL_NO = 'ff6bdc40b8')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_DETAIL_NO = 'ff6bdc40b8')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_DETAIL_NO = 'ff6bdc40b8')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_DETAIL_NO = 'ff6bdc40b8')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_DETAIL_NO = 'ff6bdc40b8')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_DETAIL_NO = 'ff6bdc40b8') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_DETAIL_NO IS NULL) AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 300,
      "pathList": [
        "SELECT NAME FROM TABEMAIL DIGEST WHERE NOT (NAME = 'Default Weekly Digest - Wind Power LLC')",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (NAME = 'Default Weekly Digest - Wind Power LLC')"
      ]
    },
    {
      "queryNo": 301,
      "pathList": [
        "SELECT IS_LWP FROM TABLEAVE TYPE WHERE NOT (NAME = '_Test Leave Type')",
        "SELECT IS_LWP FROM TABLEAVE TYPE WHERE (NAME = '_Test Leave Type')"
      ]
    },
    {
      "queryNo": 302,
      "pathList": [
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE IS NULL)"
      ]
    },
    {
      "queryNo": 303,
      "pathList": [
        "SELECT NAME FROM TABSERIAL NO WHERE NOT (NAME = 'ABCD00002')",
        "SELECT NAME FROM TABSERIAL NO WHERE (NAME = 'ABCD00002')"
      ]
    },
    {
      "queryNo": 304,
      "pathList": [
        "SELECT NAME FROM TABLANGUAGE WHERE NOT (LANGUAGE_NAME = 'english')",
        "SELECT NAME FROM TABLANGUAGE WHERE (LANGUAGE_NAME = 'english')",
        "SELECT NAME FROM TABLANGUAGE WHERE (LANGUAGE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 305,
      "pathList": [
        "SELECT * FROM TABSALES PERSON WHERE NOT (NAME = 'Sales Team')",
        "SELECT * FROM TABSALES PERSON WHERE (NAME = 'Sales Team')"
      ]
    },
    {
      "queryNo": 306,
      "pathList": [
      ]
    },
    {
      "queryNo": 307,
      "pathList": [
        "SELECT NAME FROM TABSALES PERSON WHERE NOT (EMPLOYEE = '_T-Employee-0003')",
        "SELECT NAME FROM TABSALES PERSON WHERE (EMPLOYEE = '_T-Employee-0003')",
        "SELECT NAME FROM TABSALES PERSON WHERE (EMPLOYEE IS NULL)"
      ]
    },
    {
      "queryNo": 308,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00001')"
      ]
    },
    {
      "queryNo": 309,
      "pathList": [
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENT = 'Website Settings') AND (PARENTFIELD = 'top_bar_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE NOT (PARENT = 'Website Settings') AND (PARENTFIELD = 'top_bar_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENT IS NULL) AND (PARENTFIELD = 'top_bar_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE NOT (PARENTFIELD = 'top_bar_items') AND (PARENT = 'Website Settings')",
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Website Settings')"
      ]
    },
    {
      "queryNo": 310,
      "pathList": [
        "SELECT MAX(char_length(REF_TYPE)) FROM TABEVENT HAVING COUNT(char_length(REF_TYPE)) > COUNT(DISTINCT char_length(REF_TYPE)) AND COUNT(DISTINCT char_length(REF_TYPE)) > 1"
      ]
    },
    {
      "queryNo": 311,
      "pathList": [
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE NOT (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.REPORT_TYPE IS NULL) AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 3) AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 2) AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 1) AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE NOT (T2.COMPANY = '_Test Company') AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.COMPANY IS NULL) AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T1.POSTING_DATE NOT BETWEEN '2017-01-01' AND '2017-02-09') AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T1.POSTING_DATE IS NULL) AND (T2.REPORT_TYPE = 'Profit and Loss') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY T1 LEFT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T2.NAME IS NULL) AND (T1.ACCOUNT IS NOT NULL)) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 LEFT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T2.NAME IS NULL) AND (T1.ACCOUNT IS NULL)) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09')",
        "SELECT * FROM TABGL ENTRY T1 RIGHT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T1.ACCOUNT IS NULL) AND (T2.NAME IS NOT NULL)) AND (T2.REPORT_TYPE = 'Profit and Loss' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company')",
        "SELECT SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.REPORT_TYPE = 'Profit and Loss' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' HAVING COUNT(T1.DEBIT) > COUNT(DISTINCT T1.DEBIT) AND COUNT(DISTINCT T1.DEBIT) > 1",
        "SELECT SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.REPORT_TYPE = 'Profit and Loss' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' HAVING COUNT(T1.CREDIT) > COUNT(DISTINCT T1.CREDIT) AND COUNT(DISTINCT T1.CREDIT) > 1"
      ]
    },
    {
      "queryNo": 312,
      "pathList": [
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAID_TO IS NULL) AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PAYMENT_TYPE = 'Pay') AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PAYMENT_TYPE IS NULL) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PARTY_TYPE = 'Supplier') AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PARTY_TYPE IS NULL) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T1.PARTY = '_Test Supplier') AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.PARTY IS NULL) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_DOCTYPE = 'Purchase Order') AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_DOCTYPE IS NULL) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_NAME NOT IN ('PO-00006')) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order')",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 INNER JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_NAME IS NULL) AND (T1.PAID_TO = 'Creditors - _TC') AND (T1.PAYMENT_TYPE = 'Pay') AND (T1.PARTY_TYPE = 'Supplier') AND (T1.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order')",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 LEFT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.PAID_TO = 'Creditors - _TC' AND T1.PAYMENT_TYPE = 'Pay' AND T1.PARTY_TYPE = 'Supplier' AND T1.PARTY = '_Test Supplier' AND T1.DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 RIGHT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order' AND T2.REFERENCE_NAME IN ('PO-00006'))",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARKS, T2.ALLOCATED_AMOUNT AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER, T1.POSTING_DATE FROM TABPAYMENT ENTRY T1 RIGHT JOIN TABPAYMENT ENTRY REFERENCE T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.REFERENCE_DOCTYPE = 'Purchase Order' AND T2.REFERENCE_NAME IN ('PO-00006'))"
      ]
    },
    {
      "queryNo": 313,
      "pathList": [
        "SELECT NAME FROM TABCONTACT WHERE NOT (EMAIL_ID = 'test_max_users@example.com')",
        "SELECT NAME FROM TABCONTACT WHERE (EMAIL_ID = 'test_max_users@example.com')",
        "SELECT NAME FROM TABCONTACT WHERE (EMAIL_ID IS NULL)"
      ]
    },
    {
      "queryNo": 314,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 2) AND (RGT >= 10)",
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 1) AND (RGT >= 10)",
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 0) AND (RGT >= 10)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 11) AND (LFT <= 1)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 10) AND (LFT <= 1)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 9) AND (LFT <= 1)"
      ]
    },
    {
      "queryNo": 315,
      "pathList": [
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (NAME = '9f45c70d23')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (NAME = '9f45c70d23')"
      ]
    },
    {
      "queryNo": 316,
      "pathList": [
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (NAME = 'SLE/00000048')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (NAME = 'SLE/00000048')"
      ]
    },
    {
      "queryNo": 318,
      "pathList": [
        "SELECT * FROM TABFILE WHERE NOT (FOLDER = 'Home')",
        "SELECT * FROM TABFILE WHERE (FOLDER = 'Home')",
        "SELECT * FROM TABFILE WHERE (FOLDER IS NULL)",
        "SELECT SUM(IFNULL(FILE_SIZE, 0)) FROM TABFILE WHERE FOLDER = 'Home' HAVING COUNT(IFNULL(FILE_SIZE, 0)) > COUNT(DISTINCT IFNULL(FILE_SIZE, 0)) AND COUNT(DISTINCT IFNULL(FILE_SIZE, 0)) > 1"
      ]
    },
    {
      "queryNo": 319,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE (STATUS <> 'Lost') AND (DOCSTATUS = 1) AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (STATUS <> 'Lost') AND (DOCSTATUS = 1) AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE (STATUS IS NULL) AND (DOCSTATUS = 1) AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE (DOCSTATUS = 2) AND (STATUS <> 'Lost') AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE (DOCSTATUS = 1) AND (STATUS <> 'Lost') AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE (DOCSTATUS = 0) AND (STATUS <> 'Lost') AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (LEAD = '_T-Lead-00001') AND (STATUS <> 'Lost') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABQUOTATION WHERE (LEAD IS NULL) AND (STATUS <> 'Lost') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 320,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer 1 Renamed')",
        "SELECT NAME FROM TABCUSTOMER WHERE (NAME = '_Test Customer 1 Renamed')"
      ]
    },
    {
      "queryNo": 321,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test1@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test1@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test1@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test1@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test1@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test1@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('714c7cb0fa', '428fc73a24'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('714c7cb0fa', '428fc73a24')) AND (PARENT = 'test1@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 322,
      "pathList": [
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABCOST CENTER WHERE NOT (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY IS NULL) AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABCOST CENTER WHERE (IS_GROUP = 1) AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABCOST CENTER WHERE (IS_GROUP = 0) AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABCOST CENTER WHERE (IS_GROUP = -1) AND (COMPANY = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 323,
      "pathList": [
        "SELECT * FROM TABACADEMIC YEAR WHERE NOT (NAME = '2014-2015')",
        "SELECT * FROM TABACADEMIC YEAR WHERE (NAME = '2014-2015')"
      ]
    },
    {
      "queryNo": 324,
      "pathList": [
        "SELECT FREEZE_ACCOUNT FROM TABACCOUNT WHERE NOT (NAME = 'Capital Equipments - _TC')",
        "SELECT FREEZE_ACCOUNT FROM TABACCOUNT WHERE (NAME = 'Capital Equipments - _TC')"
      ]
    },
    {
      "queryNo": 325,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE TIMESHEET WHERE NOT (TIME_SHEET = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE TIMESHEET WHERE (TIME_SHEET = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE TIMESHEET WHERE (TIME_SHEET IS NULL)"
      ]
    },
    {
      "queryNo": 326,
      "pathList": [
        "SELECT MAX(char_length(FB_USERNAME)) FROM TABUSER HAVING COUNT(char_length(FB_USERNAME)) > COUNT(DISTINCT char_length(FB_USERNAME)) AND COUNT(DISTINCT char_length(FB_USERNAME)) > 1"
      ]
    },
    {
      "queryNo": 327,
      "pathList": [
        "SELECT DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (PARENT = '__global')",
        "SELECT DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT = '__global')",
        "SELECT DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 328,
      "pathList": [
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE NOT (NAME = 'PCE/001')",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (NAME = 'PCE/001')"
      ]
    },
    {
      "queryNo": 329,
      "pathList": [
        "SELECT * FROM TABITEM TAX WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABITEM TAX WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABITEM TAX WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABITEM TAX WHERE NOT (PARENT = '_Test PPT Item Raw C') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABITEM TAX WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABITEM TAX WHERE NOT (PARENTFIELD = 'taxes') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C')",
        "SELECT * FROM TABITEM TAX WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C')"
      ]
    },
    {
      "queryNo": 330,
      "pathList": [
        "SELECT QUANTITY FROM TABBOM WHERE NOT (NAME = 'BOM-_Test FG Item-001')",
        "SELECT QUANTITY FROM TABBOM WHERE (NAME = 'BOM-_Test FG Item-001')"
      ]
    },
    {
      "queryNo": 331,
      "pathList": [
        "SELECT STATUS FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00025')",
        "SELECT STATUS FROM TABSALES ORDER WHERE (NAME = 'SO-00025')"
      ]
    },
    {
      "queryNo": 332,
      "pathList": [
        "SELECT LFT, RGT FROM TABSALES PERSON WHERE NOT (NAME = 'Sales Team')",
        "SELECT LFT, RGT FROM TABSALES PERSON WHERE (NAME = 'Sales Team')"
      ]
    },
    {
      "queryNo": 333,
      "pathList": [
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 2) AND (PR_ITEM.ITEM_CODE = '_Test Item') AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 1) AND (PR_ITEM.ITEM_CODE = '_Test Item') AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 0) AND (PR_ITEM.ITEM_CODE = '_Test Item') AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE (PR_ITEM.ITEM_CODE = '_Test Item') AND (PR.DOCSTATUS = 1) AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE NOT (PR_ITEM.ITEM_CODE = '_Test Item') AND (PR.DOCSTATUS = 1) AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE (PR_ITEM.ITEM_CODE IS NULL) AND (PR.DOCSTATUS = 1) AND (PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR INNER JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE NOT (PR.NAME <> 'PREC-00002') AND (PR.DOCSTATUS = 1) AND (PR_ITEM.ITEM_CODE = '_Test Item')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR LEFT JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE ((PR_ITEM.PARENT IS NULL) AND (PR.NAME IS NOT NULL)) AND (PR.DOCSTATUS = 1 AND PR.NAME <> 'PREC-00002')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR RIGHT JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE ((PR.NAME IS NULL) AND (PR_ITEM.PARENT IS NOT NULL)) AND (PR_ITEM.ITEM_CODE = '_Test Item')",
        "SELECT PR.NAME, PR.POSTING_DATE, PR.POSTING_TIME, PR.CONVERSION_RATE, PR_ITEM.CONVERSION_FACTOR, PR_ITEM.BASE_PRICE_LIST_RATE, PR_ITEM.DISCOUNT_PERCENTAGE, PR_ITEM.BASE_RATE FROM TABPURCHASE RECEIPT PR RIGHT JOIN TABPURCHASE RECEIPT ITEM PR_ITEM ON PR.NAME = PR_ITEM.PARENT WHERE ((PR.NAME IS NULL) AND (PR_ITEM.PARENT IS NULL)) AND (PR_ITEM.ITEM_CODE = '_Test Item')"
      ]
    },
    {
      "queryNo": 334,
      "pathList": [
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00001') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00001') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PO-00001') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENTFIELD = 'supplied_items') AND (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00001')",
        "SELECT * FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00001')"
      ]
    },
    {
      "queryNo": 335,
      "pathList": [
        "SELECT * FROM TABUSER WHERE NOT (EMAIL = 'test@example.com')",
        "SELECT * FROM TABUSER WHERE (EMAIL = 'test@example.com')",
        "SELECT * FROM TABUSER WHERE (EMAIL IS NULL)"
      ]
    },
    {
      "queryNo": 336,
      "pathList": [
        "SELECT * FROM TABTODO WHERE (TABTODO.STATUS = 'Open') AND ((TABTODO.OWNER = 'Administrator' OR TABTODO.ASSIGNED_BY = 'Administrator'))",
        "SELECT * FROM TABTODO WHERE NOT (TABTODO.STATUS = 'Open') AND ((TABTODO.OWNER = 'Administrator' OR TABTODO.ASSIGNED_BY = 'Administrator'))",
        "SELECT * FROM TABTODO WHERE (TABTODO.STATUS IS NULL) AND ((TABTODO.OWNER = 'Administrator' OR TABTODO.ASSIGNED_BY = 'Administrator'))",
        "SELECT * FROM TABTODO WHERE NOT (TABTODO.OWNER = 'Administrator') AND NOT (TABTODO.ASSIGNED_BY = 'Administrator') AND (TABTODO.STATUS = 'Open')",
        "SELECT * FROM TABTODO WHERE (TABTODO.OWNER = 'Administrator') AND NOT (TABTODO.ASSIGNED_BY = 'Administrator') AND (TABTODO.STATUS = 'Open')",
        "SELECT * FROM TABTODO WHERE (TABTODO.OWNER IS NULL) AND NOT (TABTODO.ASSIGNED_BY = 'Administrator') AND (TABTODO.STATUS = 'Open')",
        "SELECT * FROM TABTODO WHERE (TABTODO.ASSIGNED_BY = 'Administrator') AND NOT (TABTODO.OWNER = 'Administrator') AND (TABTODO.STATUS = 'Open')",
        "SELECT * FROM TABTODO WHERE (TABTODO.ASSIGNED_BY IS NULL) AND NOT (TABTODO.OWNER = 'Administrator') AND (TABTODO.STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 337,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (LFT = 326) AND (RGT >= 330)",
        "SELECT NAME FROM TABACCOUNT WHERE (LFT = 325) AND (RGT >= 330)",
        "SELECT NAME FROM TABACCOUNT WHERE (LFT = 324) AND (RGT >= 330)",
        "SELECT NAME FROM TABACCOUNT WHERE (RGT = 331) AND (LFT <= 325)",
        "SELECT NAME FROM TABACCOUNT WHERE (RGT = 330) AND (LFT <= 325)",
        "SELECT NAME FROM TABACCOUNT WHERE (RGT = 329) AND (LFT <= 325)"
      ]
    },
    {
      "queryNo": 338,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTFIELD = 'taxes') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'taxes') AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('9e749ad710', '69bb25c5fa', '5591096788'))",
        "SELECT NAME FROM TABPURCHASE TAXES AND CHARGES WHERE (NAME IN ('9e749ad710', '69bb25c5fa', '5591096788')) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes')"
      ]
    },
    {
      "queryNo": 339,
      "pathList": [
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 0.0 + 1)",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 0.0)",
        "SELECT NAME, ROUTE FROM TABBLOG POST WHERE (TABBLOG POST.PUBLISHED = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 340,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABTASK WHERE NOT (NAME = 'TASK00011')",
        "SELECT MODIFIED, DOCSTATUS FROM TABTASK WHERE (NAME = 'TASK00011')"
      ]
    },
    {
      "queryNo": 341,
      "pathList": [
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE NOT (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE NOT (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00013') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SINV-00013') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (NAME NOT IN ('0e89fd8c03'))",
        "SELECT NAME FROM TABSALES INVOICE ITEM WHERE (NAME IN ('0e89fd8c03')) AND (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 342,
      "pathList": [
        "SELECT * FROM TABTASK WHERE NOT (NAME = 'TASK00010')",
        "SELECT * FROM TABTASK WHERE (NAME = 'TASK00010')"
      ]
    },
    {
      "queryNo": 343,
      "pathList": [
        "SELECT * FROM TABTARGET DETAIL WHERE (PARENTTYPE = 'Territory') AND (PARENT = 'All Territories') AND (PARENTFIELD = 'targets')",
        "SELECT * FROM TABTARGET DETAIL WHERE NOT (PARENTTYPE = 'Territory') AND (PARENT = 'All Territories') AND (PARENTFIELD = 'targets')",
        "SELECT * FROM TABTARGET DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'All Territories') AND (PARENTFIELD = 'targets')",
        "SELECT * FROM TABTARGET DETAIL WHERE NOT (PARENT = 'All Territories') AND (PARENTTYPE = 'Territory') AND (PARENTFIELD = 'targets')",
        "SELECT * FROM TABTARGET DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Territory') AND (PARENTFIELD = 'targets')",
        "SELECT * FROM TABTARGET DETAIL WHERE NOT (PARENTFIELD = 'targets') AND (PARENTTYPE = 'Territory') AND (PARENT = 'All Territories')",
        "SELECT * FROM TABTARGET DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Territory') AND (PARENT = 'All Territories')"
      ]
    },
    {
      "queryNo": 344,
      "pathList": [
        "SELECT * FROM TABWEB PAGE WHERE NOT (NAME = 'test-web-page-4')",
        "SELECT * FROM TABWEB PAGE WHERE (NAME = 'test-web-page-4')"
      ]
    },
    {
      "queryNo": 345,
      "pathList": [
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (DOCSTATUS = 2) AND (COMPANY = '_Test Company') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (DOCSTATUS = 1) AND (COMPANY = '_Test Company') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (DOCSTATUS = 0) AND (COMPANY = '_Test Company') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (COMPANY = '_Test Company') AND (DOCSTATUS = 1) AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE NOT (COMPANY = '_Test Company') AND (DOCSTATUS = 1) AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (COMPANY IS NULL) AND (DOCSTATUS = 1) AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE NOT (PARTY_TYPE = 'Supplier') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (PARTY_TYPE IS NULL) AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company') AND (PARTY = '_Test Supplier 1')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE NOT (PARTY = '_Test Supplier 1') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company') AND (PARTY_TYPE = 'Supplier')",
        "SELECT ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (PARTY IS NULL) AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company') AND (PARTY_TYPE = 'Supplier')"
      ]
    },
    {
      "queryNo": 346,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE = 'Asset') AND (AGAINST_VOUCHER = 'Macbook Pro 1') AND (ACCOUNT = '_Test Accumulated Depreciations - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER_TYPE = 'Asset') AND (AGAINST_VOUCHER = 'Macbook Pro 1') AND (ACCOUNT = '_Test Accumulated Depreciations - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE IS NULL) AND (AGAINST_VOUCHER = 'Macbook Pro 1') AND (ACCOUNT = '_Test Accumulated Depreciations - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER = 'Macbook Pro 1') AND (AGAINST_VOUCHER_TYPE = 'Asset') AND (ACCOUNT = '_Test Accumulated Depreciations - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Asset') AND (ACCOUNT = '_Test Accumulated Depreciations - _TC')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (ACCOUNT = '_Test Accumulated Depreciations - _TC') AND (AGAINST_VOUCHER_TYPE = 'Asset') AND (AGAINST_VOUCHER = 'Macbook Pro 1')",
        "SELECT * FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Asset') AND (AGAINST_VOUCHER = 'Macbook Pro 1')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE AGAINST_VOUCHER_TYPE = 'Asset' AND AGAINST_VOUCHER = 'Macbook Pro 1' AND ACCOUNT = '_Test Accumulated Depreciations - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE AGAINST_VOUCHER_TYPE = 'Asset' AND AGAINST_VOUCHER = 'Macbook Pro 1' AND ACCOUNT = '_Test Accumulated Depreciations - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 347,
      "pathList": [
      ]
    },
    {
      "queryNo": 348,
      "pathList": [
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_NO = 'JV-00016') AND (VOUCHER_TYPE = 'Journal Entry')",
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'JV-00016') AND (VOUCHER_TYPE = 'Journal Entry')",
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Journal Entry')",
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = 'JV-00016')",
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'JV-00016')"
      ]
    },
    {
      "queryNo": 349,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABCOMMUNICATION WHERE NOT (NAME = 'd5c37abf81')",
        "SELECT MODIFIED, DOCSTATUS FROM TABCOMMUNICATION WHERE (NAME = 'd5c37abf81')"
      ]
    },
    {
      "queryNo": 350,
      "pathList": [
        "SELECT MAX(char_length(FB_USERID)) FROM TABUSER HAVING COUNT(char_length(FB_USERID)) > COUNT(DISTINCT char_length(FB_USERID)) AND COUNT(DISTINCT char_length(FB_USERID)) > 1"
      ]
    },
    {
      "queryNo": 351,
      "pathList": [
        "SELECT NAME FROM TABWORKFLOW WHERE (DOCUMENT_TYPE = 'Event') AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABWORKFLOW WHERE NOT (DOCUMENT_TYPE = 'Event') AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABWORKFLOW WHERE (DOCUMENT_TYPE IS NULL) AND (IS_ACTIVE = 1)",
        "SELECT NAME FROM TABWORKFLOW WHERE (IS_ACTIVE = 2) AND (DOCUMENT_TYPE = 'Event')",
        "SELECT NAME FROM TABWORKFLOW WHERE (IS_ACTIVE = 1) AND (DOCUMENT_TYPE = 'Event')",
        "SELECT NAME FROM TABWORKFLOW WHERE (IS_ACTIVE = 0) AND (DOCUMENT_TYPE = 'Event')"
      ]
    },
    {
      "queryNo": 353,
      "pathList": [
      ]
    },
    {
      "queryNo": 355,
      "pathList": [
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENT = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENTFIELD = 'companies') AND (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (NAME NOT IN ('de97df60ee'))",
        "SELECT NAME FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (NAME IN ('de97df60ee')) AND (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')"
      ]
    },
    {
      "queryNo": 356,
      "pathList": [
        "SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 2)",
        "SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 1)",
        "SELECT NAME FROM TABDOCTYPE WHERE (ISTABLE = 0)"
      ]
    },
    {
      "queryNo": 357,
      "pathList": [
        "SELECT * FROM TABSERIAL NO WHERE NOT (NAME = 'ABCD')",
        "SELECT * FROM TABSERIAL NO WHERE (NAME = 'ABCD')"
      ]
    },
    {
      "queryNo": 358,
      "pathList": [
        "SELECT REPORT_TYPE, ROOT_TYPE FROM TABACCOUNT WHERE NOT (NAME = 'Tax Assets - WP')",
        "SELECT REPORT_TYPE, ROOT_TYPE FROM TABACCOUNT WHERE (NAME = 'Tax Assets - WP')"
      ]
    },
    {
      "queryNo": 359,
      "pathList": [
        "SELECT STATUS FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00005')",
        "SELECT STATUS FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00005')"
      ]
    },
    {
      "queryNo": 360,
      "pathList": [
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash')",
        "SELECT * FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash')"
      ]
    },
    {
      "queryNo": 361,
      "pathList": [
        "SELECT FIELD_NAME FROM TABKANBAN BOARD WHERE NOT (TABKANBAN BOARD.REFERENCE_DOCTYPE = 'User')",
        "SELECT FIELD_NAME FROM TABKANBAN BOARD WHERE (TABKANBAN BOARD.REFERENCE_DOCTYPE = 'User')",
        "SELECT FIELD_NAME FROM TABKANBAN BOARD WHERE (TABKANBAN BOARD.REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 362,
      "pathList": [
      ]
    },
    {
      "queryNo": 363,
      "pathList": [
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'employees') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'employees') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENTFIELD = 'employees') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('500b837327', '9c7c22b312'))",
        "SELECT NAME FROM TABSALARY STRUCTURE EMPLOYEE WHERE (NAME IN ('500b837327', '9c7c22b312')) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees')"
      ]
    },
    {
      "queryNo": 364,
      "pathList": [
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test PPT Item SC A') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test PPT Item SC A') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test PPT Item SC A')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test PPT Item SC A')"
      ]
    },
    {
      "queryNo": 365,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE NOT (ITEM_CODE = '_Test Variant Item-S')",
        "SELECT NAME FROM TABITEM WHERE (ITEM_CODE = '_Test Variant Item-S')",
        "SELECT NAME FROM TABITEM WHERE (ITEM_CODE IS NULL)"
      ]
    },
    {
      "queryNo": 366,
      "pathList": [
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00024') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00024') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'JV-00024') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_NAME = 'JV-00024') AND (REFERENCE_TYPE = 'Journal Entry') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Journal Entry') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 3) AND (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00024')",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 2) AND (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00024')",
        "SELECT PARENT FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 1) AND (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00024')"
      ]
    },
    {
      "queryNo": 367,
      "pathList": [
        "SELECT NAME FROM TABWORKSTATION WHERE NOT (NAME = '_Test Workstation 1')",
        "SELECT NAME FROM TABWORKSTATION WHERE (NAME = '_Test Workstation 1')"
      ]
    },
    {
      "queryNo": 368,
      "pathList": [
        "SELECT DISTINCT PAYMENT_DOCUMENT, PARENTTYPE FROM TABBANK RECONCILIATION DETAIL WHERE NOT (PAYMENT_DOCUMENT = 'Role')",
        "SELECT DISTINCT PAYMENT_DOCUMENT, PARENTTYPE FROM TABBANK RECONCILIATION DETAIL WHERE (PAYMENT_DOCUMENT = 'Role')",
        "SELECT DISTINCT PAYMENT_DOCUMENT, PARENTTYPE FROM TABBANK RECONCILIATION DETAIL WHERE (PAYMENT_DOCUMENT IS NULL)"
      ]
    },
    {
      "queryNo": 369,
      "pathList": [
        "SELECT NAME FROM TABSTUDENT WHERE NOT (STUDENT_EMAIL_ID = 'test@erpnext.com')",
        "SELECT NAME FROM TABSTUDENT WHERE (STUDENT_EMAIL_ID = 'test@erpnext.com')",
        "SELECT NAME FROM TABSTUDENT WHERE (STUDENT_EMAIL_ID IS NULL)"
      ]
    },
    {
      "queryNo": 370,
      "pathList": [
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE NOT (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER_ROLE.ROLE IS NULL) AND (USER.DOCSTATUS < 2) AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.DOCSTATUS = 3) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.DOCSTATUS = 2) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.DOCSTATUS = 1) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.ENABLED = 1) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.ENABLED = 2) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.ENABLED = 1) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER.ENABLED = 0) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER_ROLE.PARENT IN ('Administrator', 'test_max_users@example.com')) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER.ENABLED = 1)",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE INNER JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE (USER_ROLE.PARENT IS NULL) AND (USER_ROLE.ROLE = 'System Manager') AND (USER.DOCSTATUS < 2) AND (USER.ENABLED = 1)",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE LEFT JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE ((USER.NAME IS NULL) AND (USER_ROLE.PARENT IS NOT NULL)) AND (USER_ROLE.ROLE = 'System Manager' AND USER_ROLE.PARENT NOT IN ('Administrator', 'test_max_users@example.com'))",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE LEFT JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE ((USER.NAME IS NULL) AND (USER_ROLE.PARENT IS NULL)) AND (USER_ROLE.ROLE = 'System Manager')",
        "SELECT DISTINCT USER.NAME FROM TABUSERROLE USER_ROLE RIGHT JOIN TABUSER USER ON USER_ROLE.PARENT = USER.NAME WHERE ((USER_ROLE.PARENT IS NULL) AND (USER.NAME IS NOT NULL)) AND (USER.DOCSTATUS < 2 AND USER.ENABLED = 1)"
      ]
    },
    {
      "queryNo": 371,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION PAYMENT WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 372,
      "pathList": [
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE NOT (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.ROOT_TYPE IS NULL) AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 3) AND (T2.ROOT_TYPE = 'Expense') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 2) AND (T2.ROOT_TYPE = 'Expense') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.DOCSTATUS = 1) AND (T2.ROOT_TYPE = 'Expense') AND (T2.COMPANY = '_Test Company') AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE NOT (T2.COMPANY = '_Test Company') AND (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T2.COMPANY IS NULL) AND (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T1.POSTING_DATE NOT BETWEEN '2017-01-01' AND '2017-02-09') AND (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE (T1.POSTING_DATE IS NULL) AND (T2.ROOT_TYPE = 'Expense') AND (T2.DOCSTATUS < 2) AND (T2.COMPANY = '_Test Company') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (SUM(T1.DEBIT) = SUM(T1.CREDIT) + 1)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (SUM(T1.DEBIT) = SUM(T1.CREDIT))",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (SUM(T1.DEBIT) = SUM(T1.CREDIT) - 1)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 LEFT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T2.NAME IS NULL) AND (T1.ACCOUNT IS NOT NULL)) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 LEFT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T2.NAME IS NULL) AND (T1.ACCOUNT IS NULL)) AND (T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09') GROUP BY T1.ACCOUNT HAVING SUM(T1.DEBIT) > SUM(T1.CREDIT)",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 RIGHT JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE ((T1.ACCOUNT IS NULL) AND (T2.NAME IS NOT NULL)) AND (T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company') GROUP BY T1.ACCOUNT",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (count(*) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))",
        "SELECT COUNT(*) FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' HAVING (count(DISTINCT T1.ACCOUNT) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (COUNT(T1.DEBIT) > COUNT(DISTINCT T1.DEBIT) AND COUNT(DISTINCT T1.DEBIT) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (COUNT(T1.CREDIT) > COUNT(DISTINCT T1.CREDIT) AND COUNT(DISTINCT T1.CREDIT) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (COUNT(T1.DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT T1.DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT T1.DEBIT_IN_ACCOUNT_CURRENCY) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))",
        "SELECT T1.ACCOUNT, SUM(T1.DEBIT) - SUM(T1.CREDIT) AS BALANCE, SUM(T1.DEBIT_IN_ACCOUNT_CURRENCY) - SUM(T1.CREDIT_IN_ACCOUNT_CURRENCY) AS BALANCE_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY T1 INNER JOIN TABACCOUNT T2 ON T1.ACCOUNT = T2.NAME WHERE T2.ROOT_TYPE = 'Expense' AND T2.DOCSTATUS < 2 AND T2.COMPANY = '_Test Company' AND T1.POSTING_DATE BETWEEN '2017-01-01' AND '2017-02-09' GROUP BY T1.ACCOUNT HAVING (COUNT(T1.CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT T1.CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT T1.CREDIT_IN_ACCOUNT_CURRENCY) > 1) AND (SUM(T1.DEBIT) > SUM(T1.CREDIT))"
      ]
    },
    {
      "queryNo": 373,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', '_Test Role 3', '_Test Role 2', '_Test Role', 'Stock User', '_Test Role 4'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', '_Test Role 3', '_Test Role 2', '_Test Role', 'Stock User', '_Test Role 4'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', '_Test Role 3', '_Test Role 2', '_Test Role', 'Stock User', '_Test Role 4'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', '_Test Role 3', '_Test Role 2', '_Test Role', 'Stock User', '_Test Role 4')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', '_Test Role 3', '_Test Role 2', '_Test Role', 'Stock User', '_Test Role 4')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 374,
      "pathList": [
        "SELECT NAME, USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.STATUS = 'Active') AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT NAME, USER_ID FROM TABEMPLOYEE WHERE NOT (TABEMPLOYEE.STATUS = 'Active') AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT NAME, USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.STATUS IS NULL) AND (TABEMPLOYEE.COMPANY = '_Test Company')",
        "SELECT NAME, USER_ID FROM TABEMPLOYEE WHERE NOT (TABEMPLOYEE.COMPANY = '_Test Company') AND (TABEMPLOYEE.STATUS = 'Active')",
        "SELECT NAME, USER_ID FROM TABEMPLOYEE WHERE (TABEMPLOYEE.COMPANY IS NULL) AND (TABEMPLOYEE.STATUS = 'Active')"
      ]
    },
    {
      "queryNo": 375,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOG CATEGORY WHERE NOT (NAME = '_Test Blog Category 1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOG CATEGORY WHERE (NAME = '_Test Blog Category 1')"
      ]
    },
    {
      "queryNo": 376,
      "pathList": [
        "SELECT NAME FROM TABEMAIL QUEUE WHERE NOT (REFERENCE_NAME = 'EV00006')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (REFERENCE_NAME = 'EV00006')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (REFERENCE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 377,
      "pathList": [
        "SELECT DISTINCT * FROM TABEVENT WHERE NOT (TABEVENT.OWNER = 'Administrator')",
        "SELECT DISTINCT * FROM TABEVENT WHERE (TABEVENT.OWNER = 'Administrator')",
        "SELECT DISTINCT * FROM TABEVENT WHERE (TABEVENT.OWNER IS NULL)"
      ]
    },
    {
      "queryNo": 378,
      "pathList": [
        "SELECT OWNER FROM TABEVENT WHERE NOT (NAME = 'EV00006')",
        "SELECT OWNER FROM TABEVENT WHERE (NAME = 'EV00006')"
      ]
    },
    {
      "queryNo": 379,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (NAME = 'b2008c66cd')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (NAME = 'b2008c66cd')"
      ]
    },
    {
      "queryNo": 381,
      "pathList": [
        "SELECT OWNER FROM TABTODO WHERE NOT (NAME = '2969f8e4ec')",
        "SELECT OWNER FROM TABTODO WHERE (NAME = '2969f8e4ec')"
      ]
    },
    {
      "queryNo": 382,
      "pathList": [
        "SELECT LEAD_NAME, COMPANY_NAME FROM TABLEAD WHERE NOT (NAME = '_T-Lead-00001')",
        "SELECT LEAD_NAME, COMPANY_NAME FROM TABLEAD WHERE (NAME = '_T-Lead-00001')"
      ]
    },
    {
      "queryNo": 383,
      "pathList": [
        "SELECT TABQUOTATION.NAME FROM TABQUOTATION WHERE NOT (TABQUOTATION.LEAD = '_T-Lead-00001')",
        "SELECT TABQUOTATION.NAME FROM TABQUOTATION WHERE (TABQUOTATION.LEAD = '_T-Lead-00001')",
        "SELECT TABQUOTATION.NAME FROM TABQUOTATION WHERE (TABQUOTATION.LEAD IS NULL)"
      ]
    },
    {
      "queryNo": 384,
      "pathList": [
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE ((WAREHOUSE IS NOT NULL)) AND (WAREHOUSE <> '') AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (WAREHOUSE IS NULL) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE NOT (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (IS_GROUP = -1) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (NAME IN ('_Test Account Stock In Hand - _TC'))",
        "SELECT NAME, WAREHOUSE FROM TABACCOUNT WHERE (NAME NOT IN ('_Test Account Stock In Hand - _TC')) AND (ACCOUNT_TYPE = 'Stock') AND (((WAREHOUSE IS NOT NULL) AND WAREHOUSE <> '')) AND (IS_GROUP = 0)"
      ]
    },
    {
      "queryNo": 385,
      "pathList": [
        "SELECT * FROM TABPRINT FORMAT WHERE (DOC_TYPE = 'Workflow') AND (DOCSTATUS < 2) AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE NOT (DOC_TYPE = 'Workflow') AND (DOCSTATUS < 2) AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DOC_TYPE IS NULL) AND (DOCSTATUS < 2) AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DOCSTATUS = 3) AND (DOC_TYPE = 'Workflow') AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DOCSTATUS = 2) AND (DOC_TYPE = 'Workflow') AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DOCSTATUS = 1) AND (DOC_TYPE = 'Workflow') AND (DISABLED = 0)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DISABLED = 1) AND (DOC_TYPE = 'Workflow') AND (DOCSTATUS < 2)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DISABLED = 0) AND (DOC_TYPE = 'Workflow') AND (DOCSTATUS < 2)",
        "SELECT * FROM TABPRINT FORMAT WHERE (DISABLED = -1) AND (DOC_TYPE = 'Workflow') AND (DOCSTATUS < 2)"
      ]
    },
    {
      "queryNo": 386,
      "pathList": [
      ]
    },
    {
      "queryNo": 387,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 1) AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 1) AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (IS_GROUP = 1) AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 2) AND (COMPANY = 'Wind Power LLC') AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (COMPANY = 'Wind Power LLC') AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (COMPANY = 'Wind Power LLC') AND (ACCOUNT_NAME = 'Duties and Taxes')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_NAME = 'Duties and Taxes') AND (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 1)",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_NAME IS NULL) AND (COMPANY = 'Wind Power LLC') AND (IS_GROUP = 1)"
      ]
    },
    {
      "queryNo": 388,
      "pathList": [
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00008')",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00008')"
      ]
    },
    {
      "queryNo": 389,
      "pathList": [
        "SELECT SOURCE_NAME, TARGET_NAME FROM TABTRANSLATION WHERE NOT (TABTRANSLATION.LANGUAGE = 'es-MX')",
        "SELECT SOURCE_NAME, TARGET_NAME FROM TABTRANSLATION WHERE (TABTRANSLATION.LANGUAGE = 'es-MX')",
        "SELECT SOURCE_NAME, TARGET_NAME FROM TABTRANSLATION WHERE (TABTRANSLATION.LANGUAGE IS NULL)"
      ]
    },
    {
      "queryNo": 390,
      "pathList": [
        "SELECT NAME, SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE NOT (NAME = '_Test Allowance')",
        "SELECT NAME, SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE (NAME = '_Test Allowance')"
      ]
    },
    {
      "queryNo": 391,
      "pathList": [
        "SELECT * FROM TABCOMPANY WHERE NOT (NAME = 'Wind Power LLC')",
        "SELECT * FROM TABCOMPANY WHERE (NAME = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 392,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABLEAVE ALLOCATION WHERE NOT (NAME = 'LAL/00007')",
        "SELECT MODIFIED, DOCSTATUS FROM TABLEAVE ALLOCATION WHERE (NAME = 'LAL/00007')"
      ]
    },
    {
      "queryNo": 393,
      "pathList": [
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_NO = 'PREC-00009') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_NO = 'PREC-00009') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (VOUCHER_NO = 'PREC-00009') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'PREC-00009') AND (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_NO = 'PREC-00009')",
        "SELECT ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (WAREHOUSE = '_Test Rejected Warehouse - _TC') AND (VOUCHER_NO = 'PREC-00009')"
      ]
    },
    {
      "queryNo": 394,
      "pathList": [
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE (PARENTTYPE = 'Customer') AND (COMPANY = 'Wind Power LLC') AND (PARENT = 'Party Status Test - 1')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE NOT (PARENTTYPE = 'Customer') AND (COMPANY = 'Wind Power LLC') AND (PARENT = 'Party Status Test - 1')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE (PARENTTYPE IS NULL) AND (COMPANY = 'Wind Power LLC') AND (PARENT = 'Party Status Test - 1')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE NOT (COMPANY = 'Wind Power LLC') AND (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test - 1')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE (COMPANY IS NULL) AND (PARENTTYPE = 'Customer') AND (PARENT = 'Party Status Test - 1')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE NOT (PARENT = 'Party Status Test - 1') AND (PARENTTYPE = 'Customer') AND (COMPANY = 'Wind Power LLC')",
        "SELECT ACCOUNT FROM TABPARTY ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Customer') AND (COMPANY = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 395,
      "pathList": [
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE (TABEMAIL ALERT.DOCUMENT_TYPE = 'Opportunity Item') AND (TABEMAIL ALERT.ENABLED = 1.0)",
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE NOT (TABEMAIL ALERT.DOCUMENT_TYPE = 'Opportunity Item') AND (TABEMAIL ALERT.ENABLED = 1.0)",
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE (TABEMAIL ALERT.DOCUMENT_TYPE IS NULL) AND (TABEMAIL ALERT.ENABLED = 1.0)",
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE (TABEMAIL ALERT.ENABLED = 1.0 + 1) AND (TABEMAIL ALERT.DOCUMENT_TYPE = 'Opportunity Item')",
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE (TABEMAIL ALERT.ENABLED = 1.0) AND (TABEMAIL ALERT.DOCUMENT_TYPE = 'Opportunity Item')",
        "SELECT NAME, EVENT, METHOD FROM TABEMAIL ALERT WHERE (TABEMAIL ALERT.ENABLED = 1.0 - 1) AND (TABEMAIL ALERT.DOCUMENT_TYPE = 'Opportunity Item')"
      ]
    },
    {
      "queryNo": 396,
      "pathList": [
        "SELECT PARENT FROM TABDOCFIELD WHERE (FIELDTYPE = 'Table') AND (OPTIONS = 'Role')",
        "SELECT PARENT FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Table') AND (OPTIONS = 'Role')",
        "SELECT PARENT FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'Role')",
        "SELECT PARENT FROM TABDOCFIELD WHERE NOT (OPTIONS = 'Role') AND (FIELDTYPE = 'Table')",
        "SELECT PARENT FROM TABDOCFIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 397,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier 1')",
        "SELECT NAME FROM TABSUPPLIER WHERE (NAME = '_Test Supplier 1')"
      ]
    },
    {
      "queryNo": 398,
      "pathList": [
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE NOT (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE NOT (PARENTTYPE = 'Budget') AND (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTTYPE = 'Budget') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTTYPE = 'Budget') AND (NAME NOT IN ('401e36b4e1'))",
        "SELECT NAME FROM TABBUDGET ACCOUNT WHERE (NAME IN ('401e36b4e1')) AND (PARENT = '_Test Project/_Test Fiscal Year 2013/003') AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 399,
      "pathList": [
        "SELECT NAME FROM TABCOST CENTER WHERE NOT (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 400,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 2) AND (ITEM = '_Test Variant Item') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 1) AND (ITEM = '_Test Variant Item') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 0) AND (ITEM = '_Test Variant Item') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM = '_Test Variant Item') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE NOT (ITEM = '_Test Variant Item') AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM IS NULL) AND (IS_DEFAULT = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 2) AND (IS_DEFAULT = 1) AND (ITEM = '_Test Variant Item')",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 1) AND (IS_DEFAULT = 1) AND (ITEM = '_Test Variant Item')",
        "SELECT NAME FROM TABBOM WHERE (DOCSTATUS = 0) AND (IS_DEFAULT = 1) AND (ITEM = '_Test Variant Item')"
      ]
    },
    {
      "queryNo": 401,
      "pathList": [
        "SELECT OUTSTANDING_AMOUNT FROM TABSALES INVOICE WHERE NOT (NAME = 'PINV-00006')",
        "SELECT OUTSTANDING_AMOUNT FROM TABSALES INVOICE WHERE (NAME = 'PINV-00006')"
      ]
    },
    {
      "queryNo": 402,
      "pathList": [
        "SELECT SUPPLIER_TYPE FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier USD')",
        "SELECT SUPPLIER_TYPE FROM TABSUPPLIER WHERE (NAME = '_Test Supplier USD')"
      ]
    },
    {
      "queryNo": 403,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE >= '2017-01-01') AND (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (VOUCHER_TYPE <> 'Period Closing Voucher') AND (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (VOUCHER_TYPE IS NULL) AND (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (POSTING_DATE <= '2017-02-09 12:27:02.311040') AND (POSTING_DATE >= '2017-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09 12:27:02.311040' AND POSTING_DATE >= '2017-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09 12:27:02.311040' AND POSTING_DATE >= '2017-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 404,
      "pathList": [
        "SELECT NAME FROM TABITEM ITEM WHERE (VARIANT_OF = '_Test Numeric Template Item') AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND PARENT <> '_Test Numeric Variant-L-1.1'))",
        "SELECT NAME FROM TABITEM ITEM WHERE NOT (VARIANT_OF = '_Test Numeric Template Item') AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND PARENT <> '_Test Numeric Variant-L-1.1'))",
        "SELECT NAME FROM TABITEM ITEM WHERE (VARIANT_OF IS NULL) AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND PARENT <> '_Test Numeric Variant-L-1.1'))",
        "SELECT NAME FROM TABITEM ITEM WHERE (NOT EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large'))) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large'))) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.PARENT IS NULL) AND (((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')))) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE_VALUE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large') AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE_VALUE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND NOT ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length')) AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Numeric Variant-L-1.1')) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (PARENT <> '_Test Numeric Variant-L-1.1') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')))) AND (VARIANT_OF = '_Test Numeric Template Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (PARENT IS NULL) AND (((IV_ATTRIBUTE.ATTRIBUTE = 'Test Item Length' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = '1.1') OR (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Large')))) AND (VARIANT_OF = '_Test Numeric Template Item')"
      ]
    },
    {
      "queryNo": 405,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE NOT (ITEM = '_Test PPT Item SC B')",
        "SELECT NAME FROM TABBOM WHERE (ITEM = '_Test PPT Item SC B')",
        "SELECT NAME FROM TABBOM WHERE (ITEM IS NULL)"
      ]
    },
    {
      "queryNo": 406,
      "pathList": [
        "SELECT * FROM TABSALES PERSON WHERE (LFT = 7) AND NOT (RGT = 7)",
        "SELECT * FROM TABSALES PERSON WHERE (LFT = 6) AND NOT (RGT = 7)",
        "SELECT * FROM TABSALES PERSON WHERE (LFT = 5) AND NOT (RGT = 7)",
        "SELECT * FROM TABSALES PERSON WHERE (RGT = 8) AND NOT (LFT = 6)",
        "SELECT * FROM TABSALES PERSON WHERE (RGT = 7) AND NOT (LFT = 6)",
        "SELECT * FROM TABSALES PERSON WHERE (RGT = 6) AND NOT (LFT = 6)"
      ]
    },
    {
      "queryNo": 407,
      "pathList": [
        "SELECT EMPLOYEE_NAME FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0003')",
        "SELECT EMPLOYEE_NAME FROM TABEMPLOYEE WHERE (NAME = 'EMP-0003')"
      ]
    },
    {
      "queryNo": 408,
      "pathList": [
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00007') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00007') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PREC-00007') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENT = 'PREC-00007') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'taxes')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'taxes') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00007')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00007')"
      ]
    },
    {
      "queryNo": 409,
      "pathList": [
        "SELECT SUPPLIER FROM TABSERIAL NO WHERE NOT (NAME = 'ABCD00011')",
        "SELECT SUPPLIER FROM TABSERIAL NO WHERE (NAME = 'ABCD00011')"
      ]
    },
    {
      "queryNo": 410,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABEMPLOYEE WHERE NOT (NAME = '_T-Employee-0002')",
        "SELECT MODIFIED, DOCSTATUS FROM TABEMPLOYEE WHERE (NAME = '_T-Employee-0002')"
      ]
    },
    {
      "queryNo": 411,
      "pathList": [
        "SELECT STATUS FROM TABASSET WHERE NOT (NAME = 'Macbook Pro 1')",
        "SELECT STATUS FROM TABASSET WHERE (NAME = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 412,
      "pathList": [
        "SELECT RATE FROM TABPURCHASE ORDER ITEM WHERE NOT (NAME = 'cac0a55433')",
        "SELECT RATE FROM TABPURCHASE ORDER ITEM WHERE (NAME = 'cac0a55433')"
      ]
    },
    {
      "queryNo": 413,
      "pathList": [
        "SELECT ACCOUNT_CURRENCY FROM TABACCOUNT WHERE NOT (NAME = 'Commission on Sales - WP')",
        "SELECT ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (NAME = 'Commission on Sales - WP')"
      ]
    },
    {
      "queryNo": 414,
      "pathList": [
        "SELECT SYMBOL FROM TABCURRENCY WHERE NOT (NAME = 'INR')",
        "SELECT SYMBOL FROM TABCURRENCY WHERE (NAME = 'INR')"
      ]
    },
    {
      "queryNo": 415,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP TIMESHEET WHERE NOT (TIME_SHEET = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP TIMESHEET WHERE (TIME_SHEET = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP TIMESHEET WHERE (TIME_SHEET IS NULL)"
      ]
    },
    {
      "queryNo": 417,
      "pathList": [
        "SELECT DEFAULT_INCOME_ACCOUNT FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group')",
        "SELECT DEFAULT_INCOME_ACCOUNT FROM TABITEM GROUP WHERE (NAME = '_Test Item Group')"
      ]
    },
    {
      "queryNo": 418,
      "pathList": [
        "SELECT COMPANY, CURRENCY FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00002')",
        "SELECT COMPANY, CURRENCY FROM TABQUOTATION WHERE (NAME = 'QTN-00002')"
      ]
    },
    {
      "queryNo": 420,
      "pathList": [
        "SELECT * FROM TABFILE WHERE (LFT = 10) AND NOT (RGT = 10)",
        "SELECT * FROM TABFILE WHERE (LFT = 9) AND NOT (RGT = 10)",
        "SELECT * FROM TABFILE WHERE (LFT = 8) AND NOT (RGT = 10)",
        "SELECT * FROM TABFILE WHERE (RGT = 11) AND NOT (LFT = 9)",
        "SELECT * FROM TABFILE WHERE (RGT = 10) AND NOT (LFT = 9)",
        "SELECT * FROM TABFILE WHERE (RGT = 9) AND NOT (LFT = 9)"
      ]
    },
    {
      "queryNo": 421,
      "pathList": [
        "SELECT NAME FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT NAME FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT NAME FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT NAME FROM TABBIN WHERE NOT (ITEM_CODE = '_Test PPT Item Sub B') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 422,
      "pathList": [
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (NEW_ITEM_CODE = '_Test Mix Product Bundle') AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE NOT (NEW_ITEM_CODE = '_Test Mix Product Bundle') AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (NEW_ITEM_CODE IS NULL) AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (DOCSTATUS = 3) AND (NEW_ITEM_CODE = '_Test Mix Product Bundle')",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (DOCSTATUS = 2) AND (NEW_ITEM_CODE = '_Test Mix Product Bundle')",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (DOCSTATUS = 1) AND (NEW_ITEM_CODE = '_Test Mix Product Bundle')"
      ]
    },
    {
      "queryNo": 423,
      "pathList": [
        "SELECT NAME FROM TABFISCAL YEAR WHERE (('2021-01-01' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND (('2021-12-31' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND ((YEAR_START_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND ((YEAR_END_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (('2021-01-01' BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND (('2021-12-31' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND ((YEAR_START_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND ((YEAR_END_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (YEAR_START_DATE IS NULL) AND ((YEAR_END_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (YEAR_END_DATE IS NULL) AND ((YEAR_START_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (('2021-12-31' BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND (('2021-01-01' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND ((YEAR_START_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND ((YEAR_END_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE ((YEAR_START_DATE BETWEEN '2021-01-01' AND '2021-12-31')) AND (('2021-01-01' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND (('2021-12-31' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND ((YEAR_END_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE ((YEAR_END_DATE BETWEEN '2021-01-01' AND '2021-12-31')) AND (('2021-01-01' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND (('2021-12-31' NOT BETWEEN YEAR_START_DATE AND YEAR_END_DATE)) AND ((YEAR_START_DATE NOT BETWEEN '2021-01-01' AND '2021-12-31')) AND (NAME <> '_Test Fiscal Year 2021')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (NAME <> '_Test Fiscal Year 2021') AND ((('2021-01-01' BETWEEN YEAR_START_DATE AND YEAR_END_DATE) OR ('2021-12-31' BETWEEN YEAR_START_DATE AND YEAR_END_DATE) OR (YEAR_START_DATE BETWEEN '2021-01-01' AND '2021-12-31') OR (YEAR_END_DATE BETWEEN '2021-01-01' AND '2021-12-31')))",
        "SELECT NAME FROM TABFISCAL YEAR WHERE NOT (NAME <> '_Test Fiscal Year 2021') AND ((('2021-01-01' BETWEEN YEAR_START_DATE AND YEAR_END_DATE) OR ('2021-12-31' BETWEEN YEAR_START_DATE AND YEAR_END_DATE) OR (YEAR_START_DATE BETWEEN '2021-01-01' AND '2021-12-31') OR (YEAR_END_DATE BETWEEN '2021-01-01' AND '2021-12-31')))"
      ]
    },
    {
      "queryNo": 424,
      "pathList": [
        "SELECT DOCSTATUS FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00008')",
        "SELECT DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00008')"
      ]
    },
    {
      "queryNo": 425,
      "pathList": [
        "SELECT * FROM TABUSER WHERE (USER_TYPE = 'System User') AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE NOT (USER_TYPE = 'System User') AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (USER_TYPE IS NULL) AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (NAME IN ('Guest', 'Administrator')) AND (USER_TYPE = 'System User')",
        "SELECT MAX(IFNULL(LAST_ACTIVE, '2000-01-01 00:00:00')) FROM TABUSER WHERE USER_TYPE = 'System User' AND NAME NOT IN ('Guest', 'Administrator') HAVING COUNT(IFNULL(LAST_ACTIVE, '2000-01-01 00:00:00')) > COUNT(DISTINCT IFNULL(LAST_ACTIVE, '2000-01-01 00:00:00')) AND COUNT(DISTINCT IFNULL(LAST_ACTIVE, '2000-01-01 00:00:00')) > 1"
      ]
    },
    {
      "queryNo": 426,
      "pathList": [
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 427,
      "pathList": [
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00003')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00003')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SR/00003')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'SR/00003') AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT * FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Reconciliation')"
      ]
    },
    {
      "queryNo": 428,
      "pathList": [
        "SELECT * FROM TABCOST CENTER WHERE NOT (NAME = '_Test Cost Center - _TC')",
        "SELECT * FROM TABCOST CENTER WHERE (NAME = '_Test Cost Center - _TC')"
      ]
    },
    {
      "queryNo": 429,
      "pathList": [
        "SELECT NAME FROM TABCURRENCY WHERE NOT (NAME = 'EUR')",
        "SELECT NAME FROM TABCURRENCY WHERE (NAME = 'EUR')"
      ]
    },
    {
      "queryNo": 431,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME = 'test_import_userrole@example.com')",
        "SELECT NAME FROM TABUSER WHERE (NAME = 'test_import_userrole@example.com')"
      ]
    },
    {
      "queryNo": 432,
      "pathList": [
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE IS NULL) AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (LEAVE_TYPE = '_Test Leave Type') AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (LEAVE_TYPE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS = 1) AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND ('2013-01-01' BETWEEN FROM_DATE AND TO_DATE)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE ('2013-01-01' NOT BETWEEN FROM_DATE AND TO_DATE) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (TO_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 433,
      "pathList": [
        "SELECT DATE_OF_JOINING FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0003')",
        "SELECT DATE_OF_JOINING FROM TABEMPLOYEE WHERE (NAME = 'EMP-0003')"
      ]
    },
    {
      "queryNo": 434,
      "pathList": [
        "SELECT INCOMING_RATE, STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'DN-00018') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT INCOMING_RATE, STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'DN-00018') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT INCOMING_RATE, STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT INCOMING_RATE, STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00018')",
        "SELECT INCOMING_RATE, STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00018')"
      ]
    },
    {
      "queryNo": 435,
      "pathList": [
        "SELECT ISSINGLE FROM TABDOCTYPE WHERE NOT (NAME = 'User')",
        "SELECT ISSINGLE FROM TABDOCTYPE WHERE (NAME = 'User')"
      ]
    },
    {
      "queryNo": 436,
      "pathList": [
        "SELECT ORDERED_QTY, RESERVED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT ORDERED_QTY, RESERVED_QTY FROM TABBIN WHERE NOT (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT ORDERED_QTY, RESERVED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE IS NULL) AND (TABBIN.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT ORDERED_QTY, RESERVED_QTY FROM TABBIN WHERE NOT (TABBIN.ITEM_CODE = '_Test Item for Drop Shipping') AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ORDERED_QTY, RESERVED_QTY FROM TABBIN WHERE (TABBIN.ITEM_CODE IS NULL) AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 437,
      "pathList": [
        "SELECT PROJECT, ITEM_CODE, UOM FROM TABPURCHASE RECEIPT ITEM WHERE NOT (NAME = 'dca5ce203a')",
        "SELECT PROJECT, ITEM_CODE, UOM FROM TABPURCHASE RECEIPT ITEM WHERE (NAME = 'dca5ce203a')"
      ]
    },
    {
      "queryNo": 438,
      "pathList": [
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (IFNULL(TABAUTO EMAIL REPORT.FREQUENCY, '') IN ('Daily', 'Weekly')) AND (TABAUTO EMAIL REPORT.ENABLED = 1.0)",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (IFNULL(TABAUTO EMAIL REPORT.FREQUENCY, '') NOT IN ('Daily', 'Weekly')) AND (TABAUTO EMAIL REPORT.ENABLED = 1.0)",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (TABAUTO EMAIL REPORT.ENABLED = 1.0 + 1) AND (IFNULL(TABAUTO EMAIL REPORT.FREQUENCY, '') IN ('Daily', 'Weekly'))",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (TABAUTO EMAIL REPORT.ENABLED = 1.0) AND (IFNULL(TABAUTO EMAIL REPORT.FREQUENCY, '') IN ('Daily', 'Weekly'))",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (TABAUTO EMAIL REPORT.ENABLED = 1.0 - 1) AND (IFNULL(TABAUTO EMAIL REPORT.FREQUENCY, '') IN ('Daily', 'Weekly'))",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE (((TABAUTO EMAIL REPORT.FREQUENCY IS NOT NULL))) AND (TABAUTO EMAIL REPORT.ENABLED = 1.0)",
        "SELECT TABAUTO EMAIL REPORT.NAME FROM TABAUTO EMAIL REPORT WHERE ((TABAUTO EMAIL REPORT.FREQUENCY IS NULL)) AND (TABAUTO EMAIL REPORT.ENABLED = 1.0)"
      ]
    },
    {
      "queryNo": 440,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = 'COA from Existing Company')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = 'COA from Existing Company')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 441,
      "pathList": [
        "SELECT MAX(char_length(NAME)) FROM TABUSER HAVING COUNT(char_length(NAME)) > COUNT(DISTINCT char_length(NAME)) AND COUNT(DISTINCT char_length(NAME)) > 1"
      ]
    },
    {
      "queryNo": 442,
      "pathList": [
        "SELECT * FROM TABCUSTOM FIELD WHERE NOT (NAME = 'User-test_custom_field')",
        "SELECT * FROM TABCUSTOM FIELD WHERE (NAME = 'User-test_custom_field')"
      ]
    },
    {
      "queryNo": 443,
      "pathList": [
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Role')",
        "SELECT DISTINCT VOUCHER_TYPE, PARENTTYPE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 444,
      "pathList": [
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I INNER JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE (I.NAME = 'Test Size') AND (V.ATTRIBUTE_VALUE = 'Small')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I INNER JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE NOT (I.NAME = 'Test Size') AND (V.ATTRIBUTE_VALUE = 'Small')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I INNER JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE NOT (V.ATTRIBUTE_VALUE = 'Small') AND (I.NAME = 'Test Size')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I INNER JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE (V.ATTRIBUTE_VALUE IS NULL) AND (I.NAME = 'Test Size')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I LEFT JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE ((V.PARENT IS NULL) AND (I.NAME IS NOT NULL)) AND (I.NAME = 'Test Size')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I RIGHT JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE ((I.NAME IS NULL) AND (V.PARENT IS NOT NULL)) AND (V.ATTRIBUTE_VALUE = 'Small')",
        "SELECT I.NUMERIC_VALUES, V.ABBR FROM TABITEM ATTRIBUTE I RIGHT JOIN TABITEM ATTRIBUTE VALUE V ON (I.NAME = V.PARENT) WHERE ((I.NAME IS NULL) AND (V.PARENT IS NULL)) AND (V.ATTRIBUTE_VALUE = 'Small')"
      ]
    },
    {
      "queryNo": 445,
      "pathList": [
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00009')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00009')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00009')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'STE-00009') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 446,
      "pathList": [
        "SELECT LFT, RGT FROM TABACCOUNT WHERE NOT (NAME = 'Current Assets - _TC2')",
        "SELECT LFT, RGT FROM TABACCOUNT WHERE (NAME = 'Current Assets - _TC2')"
      ]
    },
    {
      "queryNo": 447,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABACTIVITY TYPE WHERE NOT (NAME = '_Test Activity Type')",
        "SELECT MODIFIED, DOCSTATUS FROM TABACTIVITY TYPE WHERE (NAME = '_Test Activity Type')"
      ]
    },
    {
      "queryNo": 448,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE (PARENT = 'PINV-00001') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENT = 'PINV-00001') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PINV-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'PINV-00001') AND (PARENTTYPE = 'Purchase Invoice') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PINV-00001') AND (PARENTTYPE = 'Purchase Invoice') AND (NAME NOT IN ('1295c79e1f'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM WHERE (NAME IN ('1295c79e1f')) AND (PARENT = 'PINV-00001') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 449,
      "pathList": [
        "SELECT MODIFIED FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00022')",
        "SELECT MODIFIED FROM TABSALES ORDER WHERE (NAME = 'SO-00022')"
      ]
    },
    {
      "queryNo": 450,
      "pathList": [
        "SELECT MAX(char_length(PARENT)) FROM TABTODO HAVING COUNT(char_length(PARENT)) > COUNT(DISTINCT char_length(PARENT)) AND COUNT(DISTINCT char_length(PARENT)) > 1"
      ]
    },
    {
      "queryNo": 451,
      "pathList": [
        "SELECT NAME FROM TABCUSTOM FIELD WHERE NOT (NAME = 'User-test_custom_field')",
        "SELECT NAME FROM TABCUSTOM FIELD WHERE (NAME = 'User-test_custom_field')"
      ]
    },
    {
      "queryNo": 452,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test_import_userrole@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test_import_userrole@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test_import_userrole@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test_import_userrole@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test_import_userrole@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test_import_userrole@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('49ea7133f9'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('49ea7133f9')) AND (PARENT = 'test_import_userrole@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 453,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = 'Wind Power LLC') AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = 'Wind Power LLC') AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 3) AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 2) AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 1) AND (COMPANY = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 454,
      "pathList": [
        "SELECT * FROM TABBOM ITEM WHERE NOT (NAME = 'a33c2aae0c')",
        "SELECT * FROM TABBOM ITEM WHERE (NAME = 'a33c2aae0c')"
      ]
    },
    {
      "queryNo": 455,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Sales Manager', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Sales Manager', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Sales Manager', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Sales Manager', 'Stock User')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Sales Manager', 'Stock User')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 457,
      "pathList": [
        "SELECT * FROM TABADDRESS TEMPLATE WHERE NOT (NAME = 'India')",
        "SELECT * FROM TABADDRESS TEMPLATE WHERE (NAME = 'India')"
      ]
    },
    {
      "queryNo": 458,
      "pathList": [
        "SELECT MAX(char_length(GITHUB_USERID)) FROM TABUSER HAVING COUNT(char_length(GITHUB_USERID)) > COUNT(DISTINCT char_length(GITHUB_USERID)) AND COUNT(DISTINCT char_length(GITHUB_USERID)) > 1"
      ]
    },
    {
      "queryNo": 459,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (EMPLOYEE = 'EMP-0004')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE = 'EMP-0004')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE IS NULL)"
      ]
    },
    {
      "queryNo": 460,
      "pathList": [
        "SELECT * FROM TABCUSTOM FIELD WHERE (DT = 'Some DocType') AND (DOCSTATUS < 2)",
        "SELECT * FROM TABCUSTOM FIELD WHERE NOT (DT = 'Some DocType') AND (DOCSTATUS < 2)",
        "SELECT * FROM TABCUSTOM FIELD WHERE (DT IS NULL) AND (DOCSTATUS < 2)",
        "SELECT * FROM TABCUSTOM FIELD WHERE (DOCSTATUS = 3) AND (DT = 'Some DocType')",
        "SELECT * FROM TABCUSTOM FIELD WHERE (DOCSTATUS = 2) AND (DT = 'Some DocType')",
        "SELECT * FROM TABCUSTOM FIELD WHERE (DOCSTATUS = 1) AND (DT = 'Some DocType')"
      ]
    },
    {
      "queryNo": 461,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABTODO WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABTODO WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 462,
      "pathList": [
        "SELECT STATUS FROM TABISSUE WHERE NOT (NAME = '_T-Issue-00001')",
        "SELECT STATUS FROM TABISSUE WHERE (NAME = '_T-Issue-00001')"
      ]
    },
    {
      "queryNo": 463,
      "pathList": [
        "SELECT * FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00003')",
        "SELECT * FROM TABQUOTATION WHERE (NAME = 'QTN-00003')"
      ]
    },
    {
      "queryNo": 464,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 2) AND (NAME = 'sukh@yyy.com') AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 1) AND (NAME = 'sukh@yyy.com') AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 0) AND (NAME = 'sukh@yyy.com') AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE (NAME = 'sukh@yyy.com') AND (ENABLED = 1) AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE NOT (NAME = 'sukh@yyy.com') AND (ENABLED = 1) AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE NOT (USER_TYPE = 'System User') AND (ENABLED = 1) AND (NAME = 'sukh@yyy.com')",
        "SELECT NAME FROM TABUSER WHERE (USER_TYPE IS NULL) AND (ENABLED = 1) AND (NAME = 'sukh@yyy.com')"
      ]
    },
    {
      "queryNo": 465,
      "pathList": [
        "SELECT ACCOUNT_CURRENCY, COMPANY FROM TABACCOUNT WHERE NOT (NAME = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT ACCOUNT_CURRENCY, COMPANY FROM TABACCOUNT WHERE (NAME = '_Test Account Cost for Goods Sold - _TC')"
      ]
    },
    {
      "queryNo": 466,
      "pathList": [
        "SELECT NAME, FROM_RANGE, TO_RANGE, INCREMENT FROM TABITEM ATTRIBUTE WHERE (TABITEM ATTRIBUTE.NUMERIC_VALUES = 1.0 + 1)",
        "SELECT NAME, FROM_RANGE, TO_RANGE, INCREMENT FROM TABITEM ATTRIBUTE WHERE (TABITEM ATTRIBUTE.NUMERIC_VALUES = 1.0)",
        "SELECT NAME, FROM_RANGE, TO_RANGE, INCREMENT FROM TABITEM ATTRIBUTE WHERE (TABITEM ATTRIBUTE.NUMERIC_VALUES = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 467,
      "pathList": [
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PO-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00008')",
        "SELECT * FROM TABPURCHASE ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00008')"
      ]
    },
    {
      "queryNo": 468,
      "pathList": [
        "SELECT * FROM TABFILE WHERE NOT (NAME = 'ac145fc50e')",
        "SELECT * FROM TABFILE WHERE (NAME = 'ac145fc50e')"
      ]
    },
    {
      "queryNo": 469,
      "pathList": [
      ]
    },
    {
      "queryNo": 470,
      "pathList": [
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM INNER JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE NOT (TABPORTAL MENU ITEM.ROLE = 'System Manager')",
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM INNER JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE (TABPORTAL MENU ITEM.ROLE = 'System Manager')",
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM INNER JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE (TABPORTAL MENU ITEM.ROLE IS NULL)",
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM LEFT JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE (TABPORTAL MENU ITEM.PARENT IS NULL) AND (TABWEB FORM.NAME IS NOT NULL)",
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM RIGHT JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE ((TABWEB FORM.NAME IS NULL) AND (TABPORTAL MENU ITEM.PARENT IS NOT NULL)) AND (TABPORTAL MENU ITEM.ROLE = 'System Manager')",
        "SELECT TABWEB FORM.DOC_TYPE, TABWEB FORM.NAME, TABWEB FORM.MODIFIED, TABWEB FORM.DOCSTATUS FROM TABWEB FORM RIGHT JOIN TABPORTAL MENU ITEM ON (TABPORTAL MENU ITEM.PARENT = TABWEB FORM.NAME) WHERE ((TABWEB FORM.NAME IS NULL) AND (TABPORTAL MENU ITEM.PARENT IS NULL)) AND (TABPORTAL MENU ITEM.ROLE = 'System Manager')"
      ]
    },
    {
      "queryNo": 471,
      "pathList": [
        "SELECT ADVANCE_PAID FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00033')",
        "SELECT ADVANCE_PAID FROM TABSALES ORDER WHERE (NAME = 'SO-00033')"
      ]
    },
    {
      "queryNo": 472,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (NAME NOT LIKE 'Admin%')",
        "SELECT NAME FROM TABUSER WHERE (NAME LIKE 'Admin%')"
      ]
    },
    {
      "queryNo": 473,
      "pathList": [
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Variant Item-S')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Variant Item-S')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Variant Item-S')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Variant Item-S') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 474,
      "pathList": [
        "SELECT DEFAULT_PAYABLE_ACCOUNT FROM TABCOMPANY WHERE NOT (NAME = '_Test Company 1')",
        "SELECT DEFAULT_PAYABLE_ACCOUNT FROM TABCOMPANY WHERE (NAME = '_Test Company 1')"
      ]
    },
    {
      "queryNo": 475,
      "pathList": [
        "SELECT ISSINGLE FROM TABDOCTYPE WHERE NOT (NAME = 'Quality Inspection')",
        "SELECT ISSINGLE FROM TABDOCTYPE WHERE (NAME = 'Quality Inspection')"
      ]
    },
    {
      "queryNo": 476,
      "pathList": [
        "SELECT INDENTED_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test FG Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test FG Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test FG Item')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test FG Item')"
      ]
    },
    {
      "queryNo": 477,
      "pathList": [
        "SELECT LFT, RGT FROM TABWAREHOUSE WHERE NOT (NAME = '_Test Warehouse Group - _TC')",
        "SELECT LFT, RGT FROM TABWAREHOUSE WHERE (NAME = '_Test Warehouse Group - _TC')"
      ]
    },
    {
      "queryNo": 478,
      "pathList": [
        "SELECT DISTINCT CUSTOMER_OR_ITEM, PARENTTYPE FROM TABAUTHORIZATION RULE WHERE NOT (CUSTOMER_OR_ITEM = 'Role')",
        "SELECT DISTINCT CUSTOMER_OR_ITEM, PARENTTYPE FROM TABAUTHORIZATION RULE WHERE (CUSTOMER_OR_ITEM = 'Role')",
        "SELECT DISTINCT CUSTOMER_OR_ITEM, PARENTTYPE FROM TABAUTHORIZATION RULE WHERE (CUSTOMER_OR_ITEM IS NULL)"
      ]
    },
    {
      "queryNo": 479,
      "pathList": [
        "SELECT SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE (NAME <> '_Test Basic Salary') AND (SALARY_COMPONENT_ABBR = '_BS')",
        "SELECT SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE NOT (NAME <> '_Test Basic Salary') AND (SALARY_COMPONENT_ABBR = '_BS')",
        "SELECT SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE NOT (SALARY_COMPONENT_ABBR = '_BS') AND (NAME <> '_Test Basic Salary')",
        "SELECT SALARY_COMPONENT_ABBR FROM TABSALARY COMPONENT WHERE (SALARY_COMPONENT_ABBR IS NULL) AND (NAME <> '_Test Basic Salary')"
      ]
    },
    {
      "queryNo": 480,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 2) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 1) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 0) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'test@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'test@example.com') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((SEND_REMINDER IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((SEND_REMINDER IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'test@example.com') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('System Manager', '_Test Role', 'Employee', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@example.com')))"
      ]
    },
    {
      "queryNo": 481,
      "pathList": [
        "SELECT DISTINCT TIMELINE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE NOT (TIMELINE_DOCTYPE = 'Role')",
        "SELECT DISTINCT TIMELINE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (TIMELINE_DOCTYPE = 'Role')",
        "SELECT DISTINCT TIMELINE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (TIMELINE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 482,
      "pathList": [
        "SELECT DEFAULT_SUPPLIER FROM TABITEM WHERE NOT (NAME = '_Test Item Home Desktop 100')",
        "SELECT DEFAULT_SUPPLIER FROM TABITEM WHERE (NAME = '_Test Item Home Desktop 100')"
      ]
    },
    {
      "queryNo": 483,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (IFNULL(TABPURCHASE RECEIPT.STATUS, '') IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) = 2.0 + 1) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) = 2.0) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) = 2.0 - 1) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE NOT (TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier') AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.SUPPLIER IS NULL) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (((TABPURCHASE RECEIPT.STATUS IS NOT NULL))) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0 AND TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE ((TABPURCHASE RECEIPT.STATUS IS NULL)) AND (IFNULL(TABPURCHASE RECEIPT.DOCSTATUS, 0) < 2.0 AND TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (((TABPURCHASE RECEIPT.DOCSTATUS IS NOT NULL))) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed') AND TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE ((TABPURCHASE RECEIPT.DOCSTATUS IS NULL)) AND (IFNULL(TABPURCHASE RECEIPT.STATUS, '') NOT IN ('Completed', 'Closed') AND TABPURCHASE RECEIPT.SUPPLIER = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 484,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER WHERE NOT (LEAD_NAME = '_T-Lead-00001')",
        "SELECT NAME FROM TABCUSTOMER WHERE (LEAD_NAME = '_T-Lead-00001')",
        "SELECT NAME FROM TABCUSTOMER WHERE (LEAD_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 485,
      "pathList": [
        "SELECT HOUR_RATE FROM TABWORKSTATION WHERE NOT (NAME = '_Test Workstation 1')",
        "SELECT HOUR_RATE FROM TABWORKSTATION WHERE (NAME = '_Test Workstation 1')"
      ]
    },
    {
      "queryNo": 486,
      "pathList": [
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (USER = 'Administrator') AND (READ = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE NOT (USER = 'Administrator') AND (READ = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (USER IS NULL) AND (READ = 1)",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (READ = 2) AND (USER = 'Administrator')",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (READ = 1) AND (USER = 'Administrator')",
        "SELECT DISTINCT SHARE_DOCTYPE FROM TABDOCSHARE WHERE (READ = 0) AND (USER = 'Administrator')"
      ]
    },
    {
      "queryNo": 487,
      "pathList": [
        "SELECT PASSWORD FROM __AUTH WHERE (DOCTYPE = 'Email Account') AND (NAME = 'Test Email Account Password') AND (FIELDNAME = 'password')",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (DOCTYPE = 'Email Account') AND (NAME = 'Test Email Account Password') AND (FIELDNAME = 'password')",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (NAME = 'Test Email Account Password') AND (DOCTYPE = 'Email Account') AND (FIELDNAME = 'password')",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (FIELDNAME = 'password') AND (DOCTYPE = 'Email Account') AND (NAME = 'Test Email Account Password')"
      ]
    },
    {
      "queryNo": 488,
      "pathList": [
        "SELECT NAME, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABCOMMUNICATION WHERE NOT (TABCOMMUNICATION.SENDER = 'test_sender@example.com')",
        "SELECT NAME, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.SENDER = 'test_sender@example.com')",
        "SELECT NAME, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.SENDER IS NULL)"
      ]
    },
    {
      "queryNo": 489,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (NAME = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (NAME = 'Sal Slip/_T-Employee-0001/00001')"
      ]
    },
    {
      "queryNo": 490,
      "pathList": [
        "SELECT DOCSTATUS FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = '_T-Supplier Quotation-00002')",
        "SELECT DOCSTATUS FROM TABSUPPLIER QUOTATION WHERE (NAME = '_T-Supplier Quotation-00002')"
      ]
    },
    {
      "queryNo": 491,
      "pathList": [
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0 + 1)",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT EMAIL FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 492,
      "pathList": [
        "SELECT MAX(char_length(SUBJECT)) FROM TABEVENT HAVING COUNT(char_length(SUBJECT)) > COUNT(DISTINCT char_length(SUBJECT)) AND COUNT(DISTINCT char_length(SUBJECT)) > 1"
      ]
    },
    {
      "queryNo": 493,
      "pathList": [
        "SELECT NAME FROM TABACADEMIC YEAR WHERE NOT (NAME = '2014-2015')",
        "SELECT NAME FROM TABACADEMIC YEAR WHERE (NAME = '2014-2015')"
      ]
    },
    {
      "queryNo": 494,
      "pathList": [
        "SELECT PURCHASE_RATE FROM TABSERIAL NO WHERE NOT (NAME = 'SN001')",
        "SELECT PURCHASE_RATE FROM TABSERIAL NO WHERE (NAME = 'SN001')"
      ]
    },
    {
      "queryNo": 495,
      "pathList": [
      ]
    },
    {
      "queryNo": 496,
      "pathList": [
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0 + 1) AND (TABEMAIL GROUP MEMBER.EMAIL_GROUP = '_Test Email Group')",
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0) AND (TABEMAIL GROUP MEMBER.EMAIL_GROUP = '_Test Email Group')",
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0 - 1) AND (TABEMAIL GROUP MEMBER.EMAIL_GROUP = '_Test Email Group')",
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE (TABEMAIL GROUP MEMBER.EMAIL_GROUP = '_Test Email Group') AND (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0)",
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE NOT (TABEMAIL GROUP MEMBER.EMAIL_GROUP = '_Test Email Group') AND (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0)",
        "SELECT EMAIL FROM TABEMAIL GROUP MEMBER WHERE (TABEMAIL GROUP MEMBER.EMAIL_GROUP IS NULL) AND (TABEMAIL GROUP MEMBER.UNSUBSCRIBED = 0.0)"
      ]
    },
    {
      "queryNo": 497,
      "pathList": [
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (DOCSTATUS = 3) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (DOCSTATUS = 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (DOCSTATUS = 1) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE = 'Yes') AND (DOCSTATUS <> 2) AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (IS_ACTIVE = 'Yes') AND (DOCSTATUS <> 2) AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE IS NULL) AND (DOCSTATUS <> 2) AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (COMPANY = 'Wind Power LLC') AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (COMPANY IS NULL) AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 1) AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0) AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = -1) AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (PAYROLL_FREQUENCY = 'Monthly') AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0)",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (PAYROLL_FREQUENCY IS NULL) AND (DOCSTATUS <> 2) AND (IS_ACTIVE = 'Yes') AND (COMPANY = 'Wind Power LLC') AND (IFNULL(SALARY_SLIP_BASED_ON_TIMESHEET, 0) = 0)",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (((SALARY_SLIP_BASED_ON_TIMESHEET IS NOT NULL))) AND (DOCSTATUS <> 2 AND IS_ACTIVE = 'Yes' AND COMPANY = 'Wind Power LLC' AND PAYROLL_FREQUENCY = 'Monthly')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE ((SALARY_SLIP_BASED_ON_TIMESHEET IS NULL)) AND (DOCSTATUS <> 2 AND IS_ACTIVE = 'Yes' AND COMPANY = 'Wind Power LLC' AND PAYROLL_FREQUENCY = 'Monthly')"
      ]
    },
    {
      "queryNo": 498,
      "pathList": [
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT = NULL) AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE NOT (PURCHASE_RECEIPT = NULL) AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT IS NULL) AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (PURCHASE_RECEIPT = NULL)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (PURCHASE_RECEIPT = NULL)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (PURCHASE_RECEIPT = NULL)"
      ]
    },
    {
      "queryNo": 499,
      "pathList": [
        "SELECT RESERVED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 501,
      "pathList": [
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 2) AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 1) AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (DEFAULT_OUTGOING = 0) AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 2) AND (DEFAULT_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 1) AND (DEFAULT_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME, SEND_UNSUBSCRIBE_MESSAGE FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 0) AND (DEFAULT_OUTGOING = 1)"
      ]
    },
    {
      "queryNo": 502,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PURCHASE_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 503,
      "pathList": [
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE NOT (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE NOT (REFERENCE_DOCTYPE = 'Blog Post') AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE NOT (REFERENCE_NAME = '-test-blog-post-1') AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (REFERENCE_NAME IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication'))) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE ((COMMENT_TYPE IS NOT NULL)) AND (COMMENT_TYPE NOT IN ('Comment', 'Communication')) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (COMMENT_TYPE IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (COMMENT_TYPE IN ('Comment', 'Communication')) AND ((COMMENT_TYPE IS NOT NULL)) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE NOT (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication')))",
        "SELECT CONTENT, SENDER_FULL_NAME, CREATION, SENDER FROM TABCOMMUNICATION WHERE (MODIFIED IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Blog Post') AND (REFERENCE_NAME = '-test-blog-post-1') AND (((COMMENT_TYPE IS NULL) OR COMMENT_TYPE IN ('Comment', 'Communication')))"
      ]
    },
    {
      "queryNo": 504,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPERIOD CLOSING VOUCHER WHERE NOT (NAME = 'PCE/001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPERIOD CLOSING VOUCHER WHERE (NAME = 'PCE/001')"
      ]
    },
    {
      "queryNo": 505,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOGGER WHERE NOT (NAME = '_Test Blogger 1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOGGER WHERE (NAME = '_Test Blogger 1')"
      ]
    },
    {
      "queryNo": 506,
      "pathList": [
        "SELECT NAME, TOTAL_COST / QUANTITY AS UNIT_COST FROM TABBOM WHERE (IS_ACTIVE = 2) AND (NAME = 'BOM-_Test PPT Item Sub C-001')",
        "SELECT NAME, TOTAL_COST / QUANTITY AS UNIT_COST FROM TABBOM WHERE (IS_ACTIVE = 1) AND (NAME = 'BOM-_Test PPT Item Sub C-001')",
        "SELECT NAME, TOTAL_COST / QUANTITY AS UNIT_COST FROM TABBOM WHERE (IS_ACTIVE = 0) AND (NAME = 'BOM-_Test PPT Item Sub C-001')",
        "SELECT NAME, TOTAL_COST / QUANTITY AS UNIT_COST FROM TABBOM WHERE (NAME = 'BOM-_Test PPT Item Sub C-001') AND (IS_ACTIVE = 1)",
        "SELECT NAME, TOTAL_COST / QUANTITY AS UNIT_COST FROM TABBOM WHERE NOT (NAME = 'BOM-_Test PPT Item Sub C-001') AND (IS_ACTIVE = 1)"
      ]
    },
    {
      "queryNo": 507,
      "pathList": [
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR IS NULL) AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (B.DOCSTATUS = 1) AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (BA.ACCOUNT IS NULL) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (B.DOCSTATUS = 1) AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 2) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 1) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 0) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (B.PROJECT = '_Test Project') AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.DOCSTATUS = 1)",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.PROJECT IS NULL) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (B.DOCSTATUS = 1)",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B LEFT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((BA.PARENT IS NULL) AND (B.NAME IS NOT NULL)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2013' AND B.DOCSTATUS = 1 AND B.PROJECT = '_Test Project')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NOT NULL)) AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT B.PROJECT, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NULL)) AND (BA.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')"
      ]
    },
    {
      "queryNo": 508,
      "pathList": [
        "SELECT DEFAULT_BOM FROM TABITEM WHERE NOT (NAME = '_Test FG Item 2')",
        "SELECT DEFAULT_BOM FROM TABITEM WHERE (NAME = '_Test FG Item 2')"
      ]
    },
    {
      "queryNo": 509,
      "pathList": [
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENTTYPE = 'Journal Entry') AND (PARENT = 'JV-00014') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENTTYPE = 'Journal Entry') AND (PARENT = 'JV-00014') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'JV-00014') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENT = 'JV-00014') AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENTTYPE = 'Journal Entry') AND (PARENT = 'JV-00014')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Journal Entry') AND (PARENT = 'JV-00014')"
      ]
    },
    {
      "queryNo": 510,
      "pathList": [
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE (PARENT = 'PRO-00009') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENT = 'PRO-00009') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00009') AND (PARENTFIELD = 'required_items') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PRO-00009') AND (PARENTFIELD = 'required_items') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENTFIELD = 'required_items') AND (PARENT = 'PRO-00009') AND (PARENTTYPE = 'Production Order') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PRO-00009') AND (PARENTTYPE = 'Production Order') AND (NAME NOT IN ('2ee8f266a0', '26b3c66662'))",
        "SELECT NAME FROM TABPRODUCTION ORDER ITEM WHERE (NAME IN ('2ee8f266a0', '26b3c66662')) AND (PARENT = 'PRO-00009') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items')"
      ]
    },
    {
      "queryNo": 511,
      "pathList": [
        "SELECT NAME FROM TABACTIVITY TYPE WHERE NOT (NAME = '_Test Activity Type 1')",
        "SELECT NAME FROM TABACTIVITY TYPE WHERE (NAME = '_Test Activity Type 1')"
      ]
    },
    {
      "queryNo": 512,
      "pathList": [
        "SELECT * FROM TABUSER WHERE (ENABLED = 2) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (ENABLED = 1) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (ENABLED = 0) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (USER_TYPE = 'System User') AND (ENABLED = 1) AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE NOT (USER_TYPE = 'System User') AND (ENABLED = 1) AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (USER_TYPE IS NULL) AND (ENABLED = 1) AND (NAME NOT IN ('Guest', 'Administrator'))",
        "SELECT * FROM TABUSER WHERE (NAME IN ('Guest', 'Administrator')) AND (ENABLED = 1) AND (USER_TYPE = 'System User')",
        "SELECT SUM(SIMULTANEOUS_SESSIONS) FROM TABUSER WHERE ENABLED = 1 AND USER_TYPE = 'System User' AND NAME NOT IN ('Guest', 'Administrator') HAVING COUNT(SIMULTANEOUS_SESSIONS) > COUNT(DISTINCT SIMULTANEOUS_SESSIONS) AND COUNT(DISTINCT SIMULTANEOUS_SESSIONS) > 1"
      ]
    },
    {
      "queryNo": 513,
      "pathList": [
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE INNER JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE NOT (TABPAGE ROLE.ROLE = 'System Manager')",
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE INNER JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE (TABPAGE ROLE.ROLE = 'System Manager')",
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE INNER JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE (TABPAGE ROLE.ROLE IS NULL)",
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE LEFT JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE (TABPAGE ROLE.PARENT IS NULL) AND (TABPAGE.NAME IS NOT NULL)",
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE RIGHT JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE ((TABPAGE.NAME IS NULL) AND (TABPAGE ROLE.PARENT IS NOT NULL)) AND (TABPAGE ROLE.ROLE = 'System Manager')",
        "SELECT TABPAGE.PAGE_NAME, TABPAGE.TITLE, TABPAGE.ICON, TABPAGE.NAME, TABPAGE.MODIFIED, TABPAGE.DOCSTATUS FROM TABPAGE RIGHT JOIN TABPAGE ROLE ON (TABPAGE ROLE.PARENT = TABPAGE.NAME) WHERE ((TABPAGE.NAME IS NULL) AND (TABPAGE ROLE.PARENT IS NULL)) AND (TABPAGE ROLE.ROLE = 'System Manager')"
      ]
    },
    {
      "queryNo": 514,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = '_Test Company') AND (NAME = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = '_Test Company') AND (NAME = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (NAME = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (NAME = '_Test Account Cost for Goods Sold - _TC') AND (COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 515,
      "pathList": [
        "SELECT DEPRECIATION_METHOD, TOTAL_NUMBER_OF_DEPRECIATIONS, FREQUENCY_OF_DEPRECIATION FROM TABASSET CATEGORY WHERE NOT (NAME = 'Computers')",
        "SELECT DEPRECIATION_METHOD, TOTAL_NUMBER_OF_DEPRECIATIONS, FREQUENCY_OF_DEPRECIATION FROM TABASSET CATEGORY WHERE (NAME = 'Computers')"
      ]
    },
    {
      "queryNo": 516,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 517,
      "pathList": [
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENT = 'PINV-00001')",
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE INVOICE ITEM WHERE (PARENT = 'PINV-00001')",
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE INVOICE ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 518,
      "pathList": [
      ]
    },
    {
      "queryNo": 519,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (ACCOUNT IS NULL) AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 2) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 1) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 0) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENT = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENT IS NULL) AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 520,
      "pathList": [
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'PREC-00006') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'PREC-00006') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_NO = 'PREC-00006') AND (ITEM_CODE = '_Test Item')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PREC-00006') AND (ITEM_CODE = '_Test Item')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (VOUCHER_NO = 'PREC-00006') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT INCOMING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (VOUCHER_NO = 'PREC-00006') AND (VOUCHER_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 521,
      "pathList": [
        "SELECT NAME FROM TABSTOCK RECONCILIATION WHERE NOT (NAME = 'SR/00015')",
        "SELECT NAME FROM TABSTOCK RECONCILIATION WHERE (NAME = 'SR/00015')"
      ]
    },
    {
      "queryNo": 522,
      "pathList": [
      ]
    },
    {
      "queryNo": 523,
      "pathList": [
        "SELECT MAX(char_length(REFERENCE_TYPE)) FROM TABTODO HAVING COUNT(char_length(REFERENCE_TYPE)) > COUNT(DISTINCT char_length(REFERENCE_TYPE)) AND COUNT(DISTINCT char_length(REFERENCE_TYPE)) > 1"
      ]
    },
    {
      "queryNo": 524,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = '_T-Supplier Quotation-00002')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSUPPLIER QUOTATION WHERE (NAME = '_T-Supplier Quotation-00002')"
      ]
    },
    {
      "queryNo": 525,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER WHERE NOT (TABSUPPLIER.STATUS = 'Open')",
        "SELECT NAME FROM TABSUPPLIER WHERE (TABSUPPLIER.STATUS = 'Open')",
        "SELECT NAME FROM TABSUPPLIER WHERE (TABSUPPLIER.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 526,
      "pathList": [
        "SELECT NAME FROM TABMODULE DEF WHERE NOT (NAME = 'core')",
        "SELECT NAME FROM TABMODULE DEF WHERE (NAME = 'core')"
      ]
    },
    {
      "queryNo": 527,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (EMPLOYEE_NAME = 'test_employee@salary.com')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (EMPLOYEE_NAME = 'test_employee@salary.com')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (EMPLOYEE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 528,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK RECONCILIATION WHERE NOT (AMENDED_FROM = 'SR/00004')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK RECONCILIATION WHERE (AMENDED_FROM = 'SR/00004')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK RECONCILIATION WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 529,
      "pathList": [
      ]
    },
    {
      "queryNo": 530,
      "pathList": [
        "SELECT LFT, RGT FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group C')",
        "SELECT LFT, RGT FROM TABITEM GROUP WHERE (NAME = '_Test Item Group C')"
      ]
    },
    {
      "queryNo": 531,
      "pathList": [
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE = '_Test Item') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = 1) AND (ITEM_CODE = '_Test Item')",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = 0) AND (ITEM_CODE = '_Test Item')",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = -1) AND (ITEM_CODE = '_Test Item')"
      ]
    },
    {
      "queryNo": 533,
      "pathList": [
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Event') AND (EVERYONE = 1) AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Event') AND (EVERYONE = 1) AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND (EVERYONE = 1) AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE (EVERYONE = 2) AND (SHARE_DOCTYPE = 'Event') AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Event') AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE (EVERYONE = 0) AND (SHARE_DOCTYPE = 'Event') AND (SHARE_NAME = 'EV00033')",
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (SHARE_NAME = 'EV00033') AND (SHARE_DOCTYPE = 'Event') AND (EVERYONE = 1)",
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_NAME IS NULL) AND (SHARE_DOCTYPE = 'Event') AND (EVERYONE = 1)"
      ]
    },
    {
      "queryNo": 534,
      "pathList": [
        "SELECT NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.STATUS = 'Open') AND (TABOPPORTUNITY.CUSTOMER = '_Test Lead')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE NOT (TABOPPORTUNITY.STATUS = 'Open') AND (TABOPPORTUNITY.CUSTOMER = '_Test Lead')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.STATUS IS NULL) AND (TABOPPORTUNITY.CUSTOMER = '_Test Lead')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE NOT (TABOPPORTUNITY.CUSTOMER = '_Test Lead') AND (TABOPPORTUNITY.STATUS = 'Open')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.CUSTOMER IS NULL) AND (TABOPPORTUNITY.STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 535,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00003')",
        "SELECT NAME FROM TABQUOTATION WHERE (NAME = 'QTN-00003')"
      ]
    },
    {
      "queryNo": 536,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 2) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 1) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 0) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@erpnext.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@erpnext.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'test@erpnext.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'test@erpnext.com') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@erpnext.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test@erpnext.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((SEND_REMINDER IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((SEND_REMINDER IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test@erpnext.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'test@erpnext.com') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Expense Approver', 'Support Team', 'Manufacturing User', 'Website Manager', 'Purchase Manager', 'Sales User', 'Sales Manager', 'Quality Manager', 'Newsletter Manager', 'Maintenance User', 'System Manager', 'Fleet Manager', 'Maintenance Manager', 'Stock Manager', 'Purchase Master Manager', 'Knowledge Base Contributor', 'Report Manager', 'Student', 'Item Manager', 'Accounts Manager', 'Projects Manager', 'Projects User', 'Accounts User', 'Knowledge Base Editor', 'Sales Master Manager', 'Manufacturing Manager', 'Stock User', 'HR Manager', 'Leave Approver', 'HR User', 'Analytics', 'Auditor', 'Purchase User', 'Blogger', 'Instructor', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test@erpnext.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test@erpnext.com')))"
      ]
    },
    {
      "queryNo": 537,
      "pathList": [
        "SELECT MAX(char_length(OWNER)) FROM TABTODO HAVING COUNT(char_length(OWNER)) > COUNT(DISTINCT char_length(OWNER)) AND COUNT(DISTINCT char_length(OWNER)) > 1"
      ]
    },
    {
      "queryNo": 538,
      "pathList": [
        "SELECT DEFAULT_HOLIDAY_LIST FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DEFAULT_HOLIDAY_LIST FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 539,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE (PUBLISHED = 2) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE (PUBLISHED = 1) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE (PUBLISHED = 0) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE NOT (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB PAGE WHERE (ROUTE IS NULL) AND (PUBLISHED = 1)"
      ]
    },
    {
      "queryNo": 540,
      "pathList": [
        "SELECT DATE_OF_JOINING, RELIEVING_DATE FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0003')",
        "SELECT DATE_OF_JOINING, RELIEVING_DATE FROM TABEMPLOYEE WHERE (NAME = 'EMP-0003')"
      ]
    },
    {
      "queryNo": 541,
      "pathList": [
        "SELECT NAME FROM TABBLOG POST WHERE NOT (NAME = '-test-blog-post-1')",
        "SELECT NAME FROM TABBLOG POST WHERE (NAME = '-test-blog-post-1')"
      ]
    },
    {
      "queryNo": 542,
      "pathList": [
        "SELECT BANK_NAME, BANK_AC_NO FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0006')",
        "SELECT BANK_NAME, BANK_AC_NO FROM TABEMPLOYEE WHERE (NAME = 'EMP-0006')"
      ]
    },
    {
      "queryNo": 543,
      "pathList": [
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAID_TO IS NULL) AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PARTY_TYPE = 'Supplier') AND (PAID_TO = 'Creditors - _TC') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PARTY_TYPE IS NULL) AND (PAID_TO = 'Creditors - _TC') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PARTY = '_Test Supplier') AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PARTY IS NULL) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PAYMENT_TYPE = 'Pay') AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAYMENT_TYPE IS NULL) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 2) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 1) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 0) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = 1) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = 0) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = -1) AND (PAID_TO = 'Creditors - _TC') AND (PARTY_TYPE = 'Supplier') AND (PARTY = '_Test Supplier') AND (PAYMENT_TYPE = 'Pay') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 544,
      "pathList": [
        "SELECT DOCSTATUS FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00010')",
        "SELECT DOCSTATUS FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00010')"
      ]
    },
    {
      "queryNo": 545,
      "pathList": [
      ]
    },
    {
      "queryNo": 546,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME >= 't')",
        "SELECT NAME FROM TABUSER WHERE (NAME >= 't')"
      ]
    },
    {
      "queryNo": 547,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.DOCSTATUS = 2.0 + 1) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.DOCSTATUS = 2.0) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.DOCSTATUS = 2.0 - 1) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0 + 1) AND (TABPURCHASE INVOICE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0) AND (TABPURCHASE INVOICE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0 - 1) AND (TABPURCHASE INVOICE.DOCSTATUS < 2.0)"
      ]
    },
    {
      "queryNo": 549,
      "pathList": [
        "SELECT * FROM TABDESKTOP ICON WHERE (STANDARD = 2)",
        "SELECT * FROM TABDESKTOP ICON WHERE (STANDARD = 1)",
        "SELECT * FROM TABDESKTOP ICON WHERE (STANDARD = 0)"
      ]
    },
    {
      "queryNo": 550,
      "pathList": [
        "SELECT ABBR FROM TABCOMPANY WHERE NOT (NAME = 'Wind Power LLC')",
        "SELECT ABBR FROM TABCOMPANY WHERE (NAME = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 551,
      "pathList": [
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (ENABLED = 2) AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (ENABLED = 1) AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (ENABLED = 0) AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (DOCSTATUS = 3) AND (ENABLED = 1)",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (DOCSTATUS = 2) AND (ENABLED = 1)",
        "SELECT NAME FROM TABEMAIL DIGEST WHERE (DOCSTATUS = 1) AND (ENABLED = 1)"
      ]
    },
    {
      "queryNo": 552,
      "pathList": [
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (POSTING_DATE > '2017-02-09') AND (FISCAL_YEAR = '_Test Fiscal Year 2017') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE NOT (POSTING_DATE > '2017-02-09') AND (FISCAL_YEAR = '_Test Fiscal Year 2017') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (POSTING_DATE IS NULL) AND (FISCAL_YEAR = '_Test Fiscal Year 2017') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE NOT (FISCAL_YEAR = '_Test Fiscal Year 2017') AND (POSTING_DATE > '2017-02-09') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (FISCAL_YEAR IS NULL) AND (POSTING_DATE > '2017-02-09') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (DOCSTATUS = 2) AND (POSTING_DATE > '2017-02-09') AND (FISCAL_YEAR = '_Test Fiscal Year 2017')",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (DOCSTATUS = 1) AND (POSTING_DATE > '2017-02-09') AND (FISCAL_YEAR = '_Test Fiscal Year 2017')",
        "SELECT NAME FROM TABPERIOD CLOSING VOUCHER WHERE (DOCSTATUS = 0) AND (POSTING_DATE > '2017-02-09') AND (FISCAL_YEAR = '_Test Fiscal Year 2017')"
      ]
    },
    {
      "queryNo": 553,
      "pathList": [
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'additional_costs')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'additional_costs')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'additional_costs')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENT = '_T-Stock Entry-00003') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'additional_costs') AND (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003')",
        "SELECT * FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003')"
      ]
    },
    {
      "queryNo": 554,
      "pathList": [
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO FROM TABPACKED ITEM WHERE NOT (PARENT = 'DN-00019')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO FROM TABPACKED ITEM WHERE (PARENT = 'DN-00019')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO FROM TABPACKED ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 555,
      "pathList": [
        "SELECT * FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE NOT (NAME = '_Test Tax 1')",
        "SELECT * FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE (NAME = '_Test Tax 1')"
      ]
    },
    {
      "queryNo": 556,
      "pathList": [
        "SELECT * FROM TABITEM GROUP WHERE NOT (IFNULL(PARENT_ITEM_GROUP, '') = '')",
        "SELECT * FROM TABITEM GROUP WHERE (IFNULL(PARENT_ITEM_GROUP, '') = '')",
        "SELECT * FROM TABITEM GROUP WHERE ((PARENT_ITEM_GROUP IS NOT NULL))",
        "SELECT * FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP IS NULL)"
      ]
    },
    {
      "queryNo": 557,
      "pathList": [
        "SELECT * FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00035')",
        "SELECT * FROM TABSALES ORDER WHERE (NAME = 'SO-00035')"
      ]
    },
    {
      "queryNo": 558,
      "pathList": [
        "SELECT NAME FROM TABFISCAL YEAR WHERE NOT (YEAR_END_DATE = date_add(current_date, INTERVAL 3 day))",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (YEAR_END_DATE = date_add(current_date, INTERVAL 3 day))",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (YEAR_END_DATE IS NULL)"
      ]
    },
    {
      "queryNo": 559,
      "pathList": [
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTFIELD = 'exploded_items') AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (NAME IN ('b8e043c427', 'a50344f3f6', 'cd7733d6d7', '9999c04e23')) AND (PARENT = 'BOM-_Test PPT Item Master-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')"
      ]
    },
    {
      "queryNo": 560,
      "pathList": [
        "SELECT MAX(char_length(SENDER)) FROM TABTODO HAVING COUNT(char_length(SENDER)) > COUNT(DISTINCT char_length(SENDER)) AND COUNT(DISTINCT char_length(SENDER)) > 1"
      ]
    },
    {
      "queryNo": 561,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier') AND (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE NOT (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier') AND (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (TABSUPPLIER QUOTATION.SUPPLIER IS NULL) AND (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0)",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0 + 1) AND (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0) AND (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (IFNULL(TABSUPPLIER QUOTATION.DOCSTATUS, 0) = 0.0 - 1) AND (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (((TABSUPPLIER QUOTATION.DOCSTATUS IS NOT NULL))) AND (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE ((TABSUPPLIER QUOTATION.DOCSTATUS IS NULL)) AND (TABSUPPLIER QUOTATION.SUPPLIER = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 562,
      "pathList": [
        "SELECT NAME FROM TABATTENDANCE WHERE (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (EMPLOYEE IS NULL) AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE NOT (ATTENDANCE_DATE = '2014-02-01') AND (EMPLOYEE = '_T-Employee-0001') AND (NAME <> '_T-Attendance-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (ATTENDANCE_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (NAME <> '_T-Attendance-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE NOT (NAME <> '_T-Attendance-00001') AND (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001')",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001')",
        "SELECT NAME FROM TABATTENDANCE WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0001') AND (ATTENDANCE_DATE = '2014-02-01') AND (NAME <> '_T-Attendance-00001')"
      ]
    },
    {
      "queryNo": 563,
      "pathList": [
        "SELECT * FROM TABACCOUNT WHERE NOT (NAME = 'Stock Received But Not Billed - _TC')",
        "SELECT * FROM TABACCOUNT WHERE (NAME = 'Stock Received But Not Billed - _TC')"
      ]
    },
    {
      "queryNo": 564,
      "pathList": [
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (RECEIPT_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST PURCHASE RECEIPT WHERE (RECEIPT_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST PURCHASE RECEIPT WHERE (RECEIPT_DOCUMENT_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 565,
      "pathList": [
        "SELECT OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE = 'Table') AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Table') AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABDOCFIELD WHERE NOT (PARENT = 'DocType') AND (FIELDTYPE = 'Table')",
        "SELECT OPTIONS FROM TABDOCFIELD WHERE (PARENT IS NULL) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 566,
      "pathList": [
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT IS NULL) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENT NOT IN ('__default', '__global')) AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (DEFKEY IS NULL) AND (PARENT NOT IN ('__default', '__global')) AND (PARENTTYPE = 'User Permission') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (PARENTTYPE = 'User Permission') AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENTTYPE IS NULL) AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (DEFKEY = 'Blog Post') AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFVALUE = '-test-blog-post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (DEFVALUE = '-test-blog-post') AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE (DEFVALUE IS NULL) AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (PARENT = 'test2@example.com')",
        "SELECT NAME, PARENT, DEFKEY, DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (PARENT = 'test2@example.com') AND (PARENT NOT IN ('__default', '__global')) AND (SUBSTR(DEFKEY, 1, 1) <> '_') AND (PARENTTYPE = 'User Permission') AND (DEFKEY = 'Blog Post') AND (DEFVALUE = '-test-blog-post')"
      ]
    },
    {
      "queryNo": 567,
      "pathList": [
        "SELECT IS_FIXED_ASSET, IS_STOCK_ITEM, DISABLED FROM TABITEM WHERE NOT (NAME = 'Macbook Pro')",
        "SELECT IS_FIXED_ASSET, IS_STOCK_ITEM, DISABLED FROM TABITEM WHERE (NAME = 'Macbook Pro')"
      ]
    },
    {
      "queryNo": 568,
      "pathList": [
        "SELECT * FROM TABDOCPERM WHERE NOT (TABDOCPERM.PARENT = 'Sales Order')",
        "SELECT * FROM TABDOCPERM WHERE (TABDOCPERM.PARENT = 'Sales Order')",
        "SELECT * FROM TABDOCPERM WHERE (TABDOCPERM.PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 569,
      "pathList": [
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('905a63e0f2', '87f5d21ce5'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (NAME IN ('905a63e0f2', '87f5d21ce5')) AND (PARENT = 'BOM-_Test PPT Item Sub C-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 570,
      "pathList": [
        "SELECT PREFERED_EMAIL FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0002')",
        "SELECT PREFERED_EMAIL FROM TABEMPLOYEE WHERE (NAME = 'EMP-0002')"
      ]
    },
    {
      "queryNo": 571,
      "pathList": [
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = 1)",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = 0)",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = -1)"
      ]
    },
    {
      "queryNo": 572,
      "pathList": [
      ]
    },
    {
      "queryNo": 573,
      "pathList": [
        "SELECT * FROM TABTRANSLATION WHERE NOT (NAME = 'ac684348bb')",
        "SELECT * FROM TABTRANSLATION WHERE (NAME = 'ac684348bb')"
      ]
    },
    {
      "queryNo": 574,
      "pathList": [
        "SELECT * FROM TABITEM REORDER WHERE (PARENTTYPE = 'Item') AND (PARENT = 'Test Variant PRT') AND (PARENTFIELD = 'reorder_levels')",
        "SELECT * FROM TABITEM REORDER WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = 'Test Variant PRT') AND (PARENTFIELD = 'reorder_levels')",
        "SELECT * FROM TABITEM REORDER WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Test Variant PRT') AND (PARENTFIELD = 'reorder_levels')",
        "SELECT * FROM TABITEM REORDER WHERE NOT (PARENT = 'Test Variant PRT') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels')",
        "SELECT * FROM TABITEM REORDER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels')",
        "SELECT * FROM TABITEM REORDER WHERE NOT (PARENTFIELD = 'reorder_levels') AND (PARENTTYPE = 'Item') AND (PARENT = 'Test Variant PRT')",
        "SELECT * FROM TABITEM REORDER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = 'Test Variant PRT')"
      ]
    },
    {
      "queryNo": 575,
      "pathList": [
        "SELECT TABCOMMUNICATION.NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.REFERENCE_DOCTYPE = 'Event') AND (TABCOMMUNICATION.REFERENCE_NAME = 'EV00017')",
        "SELECT TABCOMMUNICATION.NAME FROM TABCOMMUNICATION WHERE NOT (TABCOMMUNICATION.REFERENCE_DOCTYPE = 'Event') AND (TABCOMMUNICATION.REFERENCE_NAME = 'EV00017')",
        "SELECT TABCOMMUNICATION.NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.REFERENCE_DOCTYPE IS NULL) AND (TABCOMMUNICATION.REFERENCE_NAME = 'EV00017')",
        "SELECT TABCOMMUNICATION.NAME FROM TABCOMMUNICATION WHERE NOT (TABCOMMUNICATION.REFERENCE_NAME = 'EV00017') AND (TABCOMMUNICATION.REFERENCE_DOCTYPE = 'Event')",
        "SELECT TABCOMMUNICATION.NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.REFERENCE_NAME IS NULL) AND (TABCOMMUNICATION.REFERENCE_DOCTYPE = 'Event')"
      ]
    },
    {
      "queryNo": 576,
      "pathList": [
        "SELECT LFT, RGT, PARENT_ITEM_GROUP FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group C - 2')",
        "SELECT LFT, RGT, PARENT_ITEM_GROUP FROM TABITEM GROUP WHERE (NAME = '_Test Item Group C - 2')"
      ]
    },
    {
      "queryNo": 577,
      "pathList": [
        "SELECT * FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = 'SQTN-00003')",
        "SELECT * FROM TABSUPPLIER QUOTATION WHERE (NAME = 'SQTN-00003')"
      ]
    },
    {
      "queryNo": 578,
      "pathList": [
        "SELECT OWNER FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00006')",
        "SELECT OWNER FROM TABQUOTATION WHERE (NAME = 'QTN-00006')"
      ]
    },
    {
      "queryNo": 579,
      "pathList": [
        "SELECT TABKANBAN BOARD.NAME FROM TABKANBAN BOARD WHERE NOT (TABKANBAN BOARD.REFERENCE_DOCTYPE = 'DocType')",
        "SELECT TABKANBAN BOARD.NAME FROM TABKANBAN BOARD WHERE (TABKANBAN BOARD.REFERENCE_DOCTYPE = 'DocType')",
        "SELECT TABKANBAN BOARD.NAME FROM TABKANBAN BOARD WHERE (TABKANBAN BOARD.REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 580,
      "pathList": [
        "SELECT CURRENCY FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00005')",
        "SELECT CURRENCY FROM TABQUOTATION WHERE (NAME = 'QTN-00005')"
      ]
    },
    {
      "queryNo": 581,
      "pathList": [
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.WORKSTATION IS NULL) AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 12:25:52.554795' > TSD.FROM_TIME) AND ('2017-02-09 12:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 12:25:52.554795' > TSD.FROM_TIME) AND ('2017-02-09 12:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 12:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 12:25:52.554795' < TSD.TO_TIME) AND ('2017-02-09 12:25:52.554795' > TSD.FROM_TIME) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 12:25:52.554795' > TSD.FROM_TIME) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME) AND ('2017-02-09 13:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME) AND ('2017-02-09 13:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 13:25:52.554795' < TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:25:52.554795' < TSD.TO_TIME) AND ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME)) AND NOT (('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME) AND ('2017-02-09 13:25:52.554795' >= TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME) AND ('2017-02-09 13:25:52.554795' >= TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 13:25:52.554795' >= TSD.TO_TIME) AND NOT (('2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:25:52.554795' >= TSD.TO_TIME) AND ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME) AND NOT (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME)) AND NOT (('2017-02-09 13:25:52.554795' > TSD.FROM_TIME)) AND (TSD.WORKSTATION = '_Test Workstation 1') AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TSD.NAME <> 'No Name') AND (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TS.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TS.NAME <> 'No Name') AND (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 3) AND (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 2) AND (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 1) AND (TSD.WORKSTATION = '_Test Workstation 1') AND ((('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME))) AND (TSD.NAME <> 'No Name') AND (TS.NAME <> 'No Name')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD LEFT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NOT NULL)) AND (TSD.WORKSTATION = '_Test Workstation 1' AND (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND TSD.NAME <> 'No Name')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD LEFT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NULL)) AND (TSD.WORKSTATION = '_Test Workstation 1' AND (('2017-02-09 12:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 12:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 13:25:52.554795' > TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' < TSD.TO_TIME) OR ('2017-02-09 12:25:52.554795' <= TSD.FROM_TIME AND '2017-02-09 13:25:52.554795' >= TSD.TO_TIME)) AND TSD.NAME <> 'No Name')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD RIGHT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TSD.PARENT IS NULL) AND (TS.NAME IS NOT NULL)) AND (TS.NAME <> 'No Name' AND TS.DOCSTATUS < 2)"
      ]
    },
    {
      "queryNo": 582,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE NOT (AMENDED_FROM = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (AMENDED_FROM = 'TS-00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 583,
      "pathList": [
        "SELECT NAME FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00012')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00012')"
      ]
    },
    {
      "queryNo": 584,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 2) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 1) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 0) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'testdelete@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'testdelete@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'testdelete@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'testdelete@example.com') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'testdelete@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'testdelete@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((SEND_REMINDER IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((SEND_REMINDER IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'testdelete@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'testdelete@example.com') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('_Test Role 2', 'System Manager', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('_Test Role 2', 'System Manager', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'testdelete@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'testdelete@example.com')))"
      ]
    },
    {
      "queryNo": 585,
      "pathList": [
        "SELECT LFT, RGT FROM TABCUSTOMER GROUP WHERE NOT (NAME = '_Test Customer Group')",
        "SELECT LFT, RGT FROM TABCUSTOMER GROUP WHERE (NAME = '_Test Customer Group')"
      ]
    },
    {
      "queryNo": 586,
      "pathList": [
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 2) AND (NAME = 'Standard Buying') AND (BUYING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 1) AND (NAME = 'Standard Buying') AND (BUYING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 0) AND (NAME = 'Standard Buying') AND (BUYING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE (NAME = 'Standard Buying') AND (ENABLED = 1) AND (BUYING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE NOT (NAME = 'Standard Buying') AND (ENABLED = 1) AND (BUYING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE (BUYING = 2) AND (ENABLED = 1) AND (NAME = 'Standard Buying')",
        "SELECT NAME FROM TABPRICE LIST WHERE (BUYING = 1) AND (ENABLED = 1) AND (NAME = 'Standard Buying')",
        "SELECT NAME FROM TABPRICE LIST WHERE (BUYING = 0) AND (ENABLED = 1) AND (NAME = 'Standard Buying')"
      ]
    },
    {
      "queryNo": 587,
      "pathList": [
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (QTY = ORDERED_QTY + 1) AND (NAME = '84bc15d769') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (QTY = ORDERED_QTY) AND (NAME = '84bc15d769') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (QTY = ORDERED_QTY - 1) AND (NAME = '84bc15d769') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (NAME = '84bc15d769') AND (QTY < ORDERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE NOT (NAME = '84bc15d769') AND (QTY < ORDERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (DOCSTATUS = 2) AND (QTY < ORDERED_QTY) AND (NAME = '84bc15d769')",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (DOCSTATUS = 1) AND (QTY < ORDERED_QTY) AND (NAME = '84bc15d769')",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABMATERIAL REQUEST ITEM WHERE (DOCSTATUS = 0) AND (QTY < ORDERED_QTY) AND (NAME = '84bc15d769')"
      ]
    },
    {
      "queryNo": 588,
      "pathList": [
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse Group-C1 - _TC')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE = '_Test Warehouse Group-C1 - _TC')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL)"
      ]
    },
    {
      "queryNo": 589,
      "pathList": [
        "SELECT OWNER FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00005')",
        "SELECT OWNER FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00005')"
      ]
    },
    {
      "queryNo": 590,
      "pathList": [
        "SELECT LFT, RGT FROM TABFILE WHERE NOT (NAME = 'Home/Attachments')",
        "SELECT LFT, RGT FROM TABFILE WHERE (NAME = 'Home/Attachments')"
      ]
    },
    {
      "queryNo": 591,
      "pathList": [
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTFIELD = 'exploded_items') AND (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('d827d5eca3'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (NAME IN ('d827d5eca3')) AND (PARENT = 'BOM-_Test PPT Item SC A-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')"
      ]
    },
    {
      "queryNo": 592,
      "pathList": [
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'DN-00005') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note')"
      ]
    },
    {
      "queryNo": 593,
      "pathList": [
        "SELECT * FROM TABTASK WHERE (PROJECT = '_Test Project') AND (STATUS IN ('Closed', 'Cancelled'))",
        "SELECT * FROM TABTASK WHERE NOT (PROJECT = '_Test Project') AND (STATUS IN ('Closed', 'Cancelled'))",
        "SELECT * FROM TABTASK WHERE (PROJECT IS NULL) AND (STATUS IN ('Closed', 'Cancelled'))",
        "SELECT * FROM TABTASK WHERE (STATUS NOT IN ('Closed', 'Cancelled')) AND (PROJECT = '_Test Project')",
        "SELECT * FROM TABTASK WHERE (STATUS IS NULL) AND (PROJECT = '_Test Project')",
        "SELECT COUNT(NAME) FROM TABTASK WHERE PROJECT = '_Test Project' AND STATUS IN ('Closed', 'Cancelled') HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 594,
      "pathList": [
        "SELECT DOCSTATUS FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00006')",
        "SELECT DOCSTATUS FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00006')"
      ]
    },
    {
      "queryNo": 595,
      "pathList": [
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw A') AND (PARENTFIELD = 'quality_parameters')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw A') AND (PARENTFIELD = 'quality_parameters')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item Raw A') AND (PARENTFIELD = 'quality_parameters')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE NOT (PARENT = '_Test PPT Item Raw A') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'quality_parameters')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'quality_parameters')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE NOT (PARENTFIELD = 'quality_parameters') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw A')",
        "SELECT * FROM TABITEM QUALITY INSPECTION PARAMETER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw A')"
      ]
    },
    {
      "queryNo": 596,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group C')",
        "SELECT NAME FROM TABITEM GROUP WHERE (NAME = '_Test Item Group C')"
      ]
    },
    {
      "queryNo": 597,
      "pathList": [
        "SELECT NAME FROM TABTASK WHERE NOT (TABTASK.STATUS = 'Overdue')",
        "SELECT NAME FROM TABTASK WHERE (TABTASK.STATUS = 'Overdue')",
        "SELECT NAME FROM TABTASK WHERE (TABTASK.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 598,
      "pathList": [
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_DATE IS NULL) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_TIME IS NULL) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE NOT IN ('_Test Serialized Item', '_Test Item')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (WAREHOUSE IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE NOT IN ('_Test Warehouse - _TC', '_Test Warehouse 1 - _TC')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:24:58.257046')) AND (ITEM_CODE IN ('_Test Serialized Item', '_Test Item'))"
      ]
    },
    {
      "queryNo": 599,
      "pathList": [
        "SELECT TITLE FROM TABBLOG CATEGORY WHERE NOT (NAME = 'test-category')",
        "SELECT TITLE FROM TABBLOG CATEGORY WHERE (NAME = 'test-category')"
      ]
    },
    {
      "queryNo": 600,
      "pathList": [
        "SELECT * FROM TABPRODUCT BUNDLE WHERE NOT (NAME = '_Test Service Product Bundle')",
        "SELECT * FROM TABPRODUCT BUNDLE WHERE (NAME = '_Test Service Product Bundle')"
      ]
    },
    {
      "queryNo": 601,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = '_T-Employee-0001') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Employee-0001') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTFIELD = 'leave_approvers') AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (NAME NOT IN ('5e98e0dc43'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (NAME IN ('5e98e0dc43')) AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers')"
      ]
    },
    {
      "queryNo": 602,
      "pathList": [
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT IS NULL) AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY_TYPE = 'Supplier') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY_TYPE IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY = '_Test Supplier') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.IS_ADVANCE = 'Yes') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.IS_ADVANCE IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = 1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = 0) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = -1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND NOT ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') = '') AND NOT ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE = 'Purchase Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_TYPE = 'Purchase Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE IS NULL) AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003')) AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') NOT IN ('PO-00003')) AND (T2.REFERENCE_TYPE = 'Purchase Order') AND NOT (IFNULL(T2.REFERENCE_NAME, '') = '') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 LEFT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = '' OR (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00003'))))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (((T2.REFERENCE_NAME IS NOT NULL))) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND ((T2.REFERENCE_TYPE = 'Purchase Order')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.REFERENCE_NAME IS NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND ((T2.REFERENCE_TYPE = 'Purchase Order')))"
      ]
    },
    {
      "queryNo": 603,
      "pathList": [
      ]
    },
    {
      "queryNo": 604,
      "pathList": [
      ]
    },
    {
      "queryNo": 605,
      "pathList": [
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR IS NULL) AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (BA.ACCOUNT IS NULL) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 2) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 1) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 0) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (NOT EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017') AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC') AND (B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B LEFT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((BA.PARENT IS NULL) AND (B.NAME IS NOT NULL)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND B.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NOT NULL)) AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NULL)) AND (BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 9) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 8) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 7) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 10) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 9) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 8) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (NAME = B.COST_CENTER) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = B.COST_CENTER) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (B.COST_CENTER IS NULL) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = '_Test Fiscal Year 2017' AND BA.ACCOUNT = 'Cost of Goods Sold - _TC' AND B.DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 606,
      "pathList": [
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PROJECT = '_Test Project') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE NOT (PROJECT = '_Test Project') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PROJECT IS NULL) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 0) AND (PROJECT = '_Test Project')",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING COUNT(COSTING_AMOUNT) > COUNT(DISTINCT COSTING_AMOUNT) AND COUNT(DISTINCT COSTING_AMOUNT) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING COUNT(BILLING_AMOUNT) > COUNT(DISTINCT BILLING_AMOUNT) AND COUNT(DISTINCT BILLING_AMOUNT) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING COUNT(FROM_TIME) > COUNT(DISTINCT FROM_TIME) AND COUNT(DISTINCT FROM_TIME) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING count(*) > COUNT(FROM_TIME) AND COUNT(DISTINCT FROM_TIME) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING COUNT(TO_TIME) > COUNT(DISTINCT TO_TIME) AND COUNT(DISTINCT TO_TIME) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING count(*) > COUNT(TO_TIME) AND COUNT(DISTINCT TO_TIME) > 1",
        "SELECT SUM(COSTING_AMOUNT) AS COSTING_AMOUNT, SUM(BILLING_AMOUNT) AS BILLING_AMOUNT, MIN(FROM_TIME) AS START_DATE, MAX(TO_TIME) AS END_DATE, SUM(HOURS) AS TIME FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project' AND DOCSTATUS = 1 HAVING COUNT(HOURS) > COUNT(DISTINCT HOURS) AND COUNT(DISTINCT HOURS) > 1"
      ]
    },
    {
      "queryNo": 607,
      "pathList": [
        "SELECT FIRST_NAME, LAST_NAME, USER_IMAGE, NAME FROM TABUSER WHERE NOT (NAME = 'Guest')",
        "SELECT FIRST_NAME, LAST_NAME, USER_IMAGE, NAME FROM TABUSER WHERE (NAME = 'Guest')"
      ]
    },
    {
      "queryNo": 608,
      "pathList": [
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE (DF.OPTIONS = 'Asset') AND (DF.FIELDTYPE = 'Link')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE NOT (DF.OPTIONS = 'Asset') AND (DF.FIELDTYPE = 'Link')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE (DF.OPTIONS IS NULL) AND (DF.FIELDTYPE = 'Link')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE NOT (DF.FIELDTYPE = 'Link') AND (DF.OPTIONS = 'Asset')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE (DF.FIELDTYPE IS NULL) AND (DF.OPTIONS = 'Asset')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE NOT (DT.NAME = DF.DT)) AND (DF.OPTIONS = 'Asset' AND DF.FIELDTYPE = 'Link')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (DT.NAME = DF.DT)) AND (DF.OPTIONS = 'Asset' AND DF.FIELDTYPE = 'Link')",
        "SELECT DT AS PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.DT) AS ISSINGLE FROM TABCUSTOM FIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (DF.DT IS NULL)) AND (DF.OPTIONS = 'Asset' AND DF.FIELDTYPE = 'Link')"
      ]
    },
    {
      "queryNo": 609,
      "pathList": [
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE NOT (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE (PARENT IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE NOT (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'item_groups') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE (PARENTTYPE IS NULL) AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'item_groups') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE NOT (PARENTFIELD = 'item_groups') AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE (PARENTFIELD IS NULL) AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (NAME NOT IN ('954887165a'))",
        "SELECT NAME FROM TABPOS ITEM GROUP WHERE (NAME IN ('954887165a')) AND (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups')"
      ]
    },
    {
      "queryNo": 610,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSALARY STRUCTURE WHERE NOT (NAME = 'Monthly Salary Structure Test for Salary Slip')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSALARY STRUCTURE WHERE (NAME = 'Monthly Salary Structure Test for Salary Slip')"
      ]
    },
    {
      "queryNo": 611,
      "pathList": [
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (DEFAULT_INCOMING = 2) AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (DEFAULT_INCOMING = 1) AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (DEFAULT_INCOMING = 0) AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 2) AND (DEFAULT_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 1) AND (DEFAULT_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 0) AND (DEFAULT_INCOMING = 1)"
      ]
    },
    {
      "queryNo": 612,
      "pathList": [
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.DOCSTATUS = 1) AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE NOT (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.DOCSTATUS = 1) AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN_ITEM.SO_DETAIL IS NULL) AND (DN.DOCSTATUS = 1) AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 2) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 1) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 0) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.IS_RETURN = 0)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.IS_RETURN = 1) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.DOCSTATUS = 1)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.IS_RETURN = 0) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.DOCSTATUS = 1)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM INNER JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE (DN.IS_RETURN = -1) AND (DN_ITEM.SO_DETAIL = '4d7f31188e') AND (DN.DOCSTATUS = 1)",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM LEFT JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE ((DN.NAME IS NULL) AND (DN_ITEM.PARENT IS NOT NULL)) AND (DN_ITEM.SO_DETAIL = '4d7f31188e')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM LEFT JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE ((DN.NAME IS NULL) AND (DN_ITEM.PARENT IS NULL)) AND (DN_ITEM.SO_DETAIL = '4d7f31188e')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN_ITEM.SI_DETAIL, DN_ITEM.PARENT FROM TABDELIVERY NOTE ITEM DN_ITEM RIGHT JOIN TABDELIVERY NOTE DN ON DN.NAME = DN_ITEM.PARENT WHERE ((DN_ITEM.PARENT IS NULL) AND (DN.NAME IS NOT NULL)) AND (DN.DOCSTATUS = 1 AND DN.IS_RETURN = 0)"
      ]
    },
    {
      "queryNo": 614,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENT = 'SO-00012') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENT = 'SO-00012') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00012') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SO-00012') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'SO-00012') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'SO-00012') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('d6cc1c85b7'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (NAME IN ('d6cc1c85b7')) AND (PARENT = 'SO-00012') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 615,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (CREDIT_NOTE = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (CREDIT_NOTE = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (CREDIT_NOTE IS NULL)"
      ]
    },
    {
      "queryNo": 616,
      "pathList": [
        "SELECT NAME, MIN_ORDER_QTY FROM TABITEM WHERE (NAME NOT IN ('_Test FG Item'))",
        "SELECT NAME, MIN_ORDER_QTY FROM TABITEM WHERE (NAME IN ('_Test FG Item'))"
      ]
    },
    {
      "queryNo": 617,
      "pathList": [
        "SELECT INCLUDE_HOLIDAY FROM TABLEAVE TYPE WHERE NOT (NAME = '_Test Leave Type')",
        "SELECT INCLUDE_HOLIDAY FROM TABLEAVE TYPE WHERE (NAME = '_Test Leave Type')"
      ]
    },
    {
      "queryNo": 618,
      "pathList": [
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (NAME = 'Fortnightly Salary Structure Test for Salary Slip')",
        "SELECT NAME FROM TABSALARY STRUCTURE WHERE (NAME = 'Fortnightly Salary Structure Test for Salary Slip')"
      ]
    },
    {
      "queryNo": 619,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABSALES INVOICE ADVANCE WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABSALES INVOICE ADVANCE WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABSALES INVOICE ADVANCE WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 620,
      "pathList": [
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE (PARENT = 'LCV00001') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'purchase_receipts') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (PARENT = 'LCV00001') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'purchase_receipts') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'purchase_receipts') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (PARENTTYPE = 'Landed Cost Voucher') AND (PARENT = 'LCV00001') AND (PARENTFIELD = 'purchase_receipts') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'LCV00001') AND (PARENTFIELD = 'purchase_receipts') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (PARENTFIELD = 'purchase_receipts') AND (PARENT = 'LCV00001') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'LCV00001') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('9c23793825'))",
        "SELECT NAME FROM TABLANDED COST PURCHASE RECEIPT WHERE (NAME IN ('9c23793825')) AND (PARENT = 'LCV00001') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'purchase_receipts')"
      ]
    },
    {
      "queryNo": 621,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (NAME = 'Stores - CFEC')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (NAME = 'Stores - CFEC')"
      ]
    },
    {
      "queryNo": 623,
      "pathList": [
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1) GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1) GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (DOCSTATUS = 1) GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 2) AND (PRODUCTION_ORDER = 'PRO-00002') GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 1) AND (PRODUCTION_ORDER = 'PRO-00002') GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 0) AND (PRODUCTION_ORDER = 'PRO-00002') GROUP BY PURPOSE",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE PRODUCTION_ORDER = 'PRO-00002' AND DOCSTATUS = 1 GROUP BY PURPOSE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABSTOCK ENTRY WHERE PRODUCTION_ORDER = 'PRO-00002' AND DOCSTATUS = 1 HAVING count(DISTINCT PURPOSE) > 1",
        "SELECT PURPOSE, SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE PRODUCTION_ORDER = 'PRO-00002' AND DOCSTATUS = 1 GROUP BY PURPOSE HAVING COUNT(FG_COMPLETED_QTY) > COUNT(DISTINCT FG_COMPLETED_QTY) AND COUNT(DISTINCT FG_COMPLETED_QTY) > 1"
      ]
    },
    {
      "queryNo": 624,
      "pathList": [
        "SELECT CURRENCY FROM TABPURCHASE RECEIPT WHERE NOT (NAME = '_T-Purchase Receipt-00006')",
        "SELECT CURRENCY FROM TABPURCHASE RECEIPT WHERE (NAME = '_T-Purchase Receipt-00006')"
      ]
    },
    {
      "queryNo": 625,
      "pathList": [
        "SELECT MAX(char_length(LAST_NAME)) FROM TABUSER HAVING COUNT(char_length(LAST_NAME)) > COUNT(DISTINCT char_length(LAST_NAME)) AND COUNT(DISTINCT char_length(LAST_NAME)) > 1"
      ]
    },
    {
      "queryNo": 626,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE NOT (AMENDED_FROM = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE (AMENDED_FROM = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 627,
      "pathList": [
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABSALES INVOICE WHERE NOT (NAME = 'SINV-00005')",
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABSALES INVOICE WHERE (NAME = 'SINV-00005')"
      ]
    },
    {
      "queryNo": 628,
      "pathList": [
        "SELECT REPORT_TYPE FROM TABACCOUNT WHERE NOT (NAME = '_Test Warehouse - _TC')",
        "SELECT REPORT_TYPE FROM TABACCOUNT WHERE (NAME = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 629,
      "pathList": [
        "SELECT NAME FROM TABNOTE SEEN BY WHERE (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE NOT (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE NOT (PARENTTYPE = 'Note') AND (PARENT = 'test note') AND (PARENTFIELD = 'seen_by') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test note') AND (PARENTFIELD = 'seen_by') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE NOT (PARENTFIELD = 'seen_by') AND (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (NAME NOT IN ('fb96c0cfe9'))",
        "SELECT NAME FROM TABNOTE SEEN BY WHERE (NAME IN ('fb96c0cfe9')) AND (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by')"
      ]
    },
    {
      "queryNo": 630,
      "pathList": [
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'external_work_history')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'external_work_history')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'external_work_history')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE NOT (PARENT = 'EMP-0005') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'external_work_history')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'external_work_history')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE NOT (PARENTFIELD = 'external_work_history') AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')",
        "SELECT * FROM TABEMPLOYEE EXTERNAL WORK HISTORY WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')"
      ]
    },
    {
      "queryNo": 631,
      "pathList": [
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE, REJECTED_QTY, RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENT = 'PREC-00006')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE, REJECTED_QTY, RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT = 'PREC-00006')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE, REJECTED_QTY, RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 632,
      "pathList": [
      ]
    },
    {
      "queryNo": 633,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (NAME = '_Test Warehouse - _TC') AND (ROOT_TYPE = 'Expense')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (NAME = '_Test Warehouse - _TC') AND (ROOT_TYPE = 'Expense')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ROOT_TYPE = 'Expense') AND (NAME = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (ROOT_TYPE IS NULL) AND (NAME = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 634,
      "pathList": [
        "SELECT SCRIPT FROM TABCUSTOM SCRIPT WHERE (DT = 'Authorization Rule') AND (SCRIPT_TYPE = 'Client')",
        "SELECT SCRIPT FROM TABCUSTOM SCRIPT WHERE NOT (DT = 'Authorization Rule') AND (SCRIPT_TYPE = 'Client')",
        "SELECT SCRIPT FROM TABCUSTOM SCRIPT WHERE (DT IS NULL) AND (SCRIPT_TYPE = 'Client')",
        "SELECT SCRIPT FROM TABCUSTOM SCRIPT WHERE NOT (SCRIPT_TYPE = 'Client') AND (DT = 'Authorization Rule')",
        "SELECT SCRIPT FROM TABCUSTOM SCRIPT WHERE (SCRIPT_TYPE IS NULL) AND (DT = 'Authorization Rule')"
      ]
    },
    {
      "queryNo": 635,
      "pathList": [
        "SELECT PLANNED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse 1 - _TC') AND (ITEM_CODE = '_Test FG Item')",
        "SELECT PLANNED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse 1 - _TC') AND (ITEM_CODE = '_Test FG Item')",
        "SELECT PLANNED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test FG Item')",
        "SELECT PLANNED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test FG Item') AND (WAREHOUSE = '_Test Warehouse 1 - _TC')",
        "SELECT PLANNED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse 1 - _TC')"
      ]
    },
    {
      "queryNo": 636,
      "pathList": [
        "SELECT OWNER FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00003')",
        "SELECT OWNER FROM TABSALES ORDER WHERE (NAME = 'SO-00003')"
      ]
    },
    {
      "queryNo": 637,
      "pathList": [
        "SELECT ABBR, NAME FROM TABCOMPANY WHERE NOT (NAME = 'India - Chart of Accounts')",
        "SELECT ABBR, NAME FROM TABCOMPANY WHERE (NAME = 'India - Chart of Accounts')"
      ]
    },
    {
      "queryNo": 638,
      "pathList": [
        "SELECT TABCUSTOM DOCPERM.ROLE, TABCUSTOM DOCPERM.PERMLEVEL, TABCUSTOM DOCPERM.READ, TABCUSTOM DOCPERM.WRITE, TABCUSTOM DOCPERM.CREATE, TABCUSTOM DOCPERM.DELETE, TABCUSTOM DOCPERM.SUBMIT, TABCUSTOM DOCPERM.CANCEL, TABCUSTOM DOCPERM.NAME, TABCUSTOM DOCPERM.MODIFIED, TABCUSTOM DOCPERM.DOCSTATUS FROM TABCUSTOM DOCPERM WHERE NOT (TABCUSTOM DOCPERM.ROLE = 'System Manager')",
        "SELECT TABCUSTOM DOCPERM.ROLE, TABCUSTOM DOCPERM.PERMLEVEL, TABCUSTOM DOCPERM.READ, TABCUSTOM DOCPERM.WRITE, TABCUSTOM DOCPERM.CREATE, TABCUSTOM DOCPERM.DELETE, TABCUSTOM DOCPERM.SUBMIT, TABCUSTOM DOCPERM.CANCEL, TABCUSTOM DOCPERM.NAME, TABCUSTOM DOCPERM.MODIFIED, TABCUSTOM DOCPERM.DOCSTATUS FROM TABCUSTOM DOCPERM WHERE (TABCUSTOM DOCPERM.ROLE = 'System Manager')",
        "SELECT TABCUSTOM DOCPERM.ROLE, TABCUSTOM DOCPERM.PERMLEVEL, TABCUSTOM DOCPERM.READ, TABCUSTOM DOCPERM.WRITE, TABCUSTOM DOCPERM.CREATE, TABCUSTOM DOCPERM.DELETE, TABCUSTOM DOCPERM.SUBMIT, TABCUSTOM DOCPERM.CANCEL, TABCUSTOM DOCPERM.NAME, TABCUSTOM DOCPERM.MODIFIED, TABCUSTOM DOCPERM.DOCSTATUS FROM TABCUSTOM DOCPERM WHERE (TABCUSTOM DOCPERM.ROLE IS NULL)"
      ]
    },
    {
      "queryNo": 639,
      "pathList": [
        "SELECT HOLIDAY_LIST FROM TABWORKSTATION WHERE NOT (NAME = '_Test Workstation 1')",
        "SELECT HOLIDAY_LIST FROM TABWORKSTATION WHERE (NAME = '_Test Workstation 1')"
      ]
    },
    {
      "queryNo": 640,
      "pathList": [
        "SELECT NAME FROM TABLANGUAGE WHERE NOT (NAME = 'es')",
        "SELECT NAME FROM TABLANGUAGE WHERE (NAME = 'es')"
      ]
    },
    {
      "queryNo": 641,
      "pathList": [
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0003') AND (PARENTFIELD = 'leave_approvers')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0003') AND (PARENTFIELD = 'leave_approvers')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EMP-0003') AND (PARENTFIELD = 'leave_approvers')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENT = 'EMP-0003') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTFIELD = 'leave_approvers') AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0003')",
        "SELECT * FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0003')"
      ]
    },
    {
      "queryNo": 642,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 643,
      "pathList": [
        "SELECT * FROM TABSERIAL NO WHERE (NAME NOT IN ('ABCD00011'))",
        "SELECT * FROM TABSERIAL NO WHERE (NAME IN ('ABCD00011'))",
        "SELECT AVG(PURCHASE_RATE) FROM TABSERIAL NO WHERE NAME IN ('ABCD00011') HAVING COUNT(PURCHASE_RATE) > COUNT(DISTINCT PURCHASE_RATE) AND COUNT(DISTINCT PURCHASE_RATE) > 1"
      ]
    },
    {
      "queryNo": 644,
      "pathList": [
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABQUOTATION ITEM WHERE NOT (PREVDOC_DOCTYPE = 'Role')",
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABQUOTATION ITEM WHERE (PREVDOC_DOCTYPE = 'Role')",
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABQUOTATION ITEM WHERE (PREVDOC_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 645,
      "pathList": [
        "SELECT DISABLED FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE NOT (NAME = '_Test Sales Taxes and Charges Template 1')",
        "SELECT DISABLED FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE (NAME = '_Test Sales Taxes and Charges Template 1')"
      ]
    },
    {
      "queryNo": 646,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 647,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00010')",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00010')"
      ]
    },
    {
      "queryNo": 648,
      "pathList": [
        "SELECT ALLOW_USER FROM TABLEAVE BLOCK LIST ALLOW WHERE NOT (PARENT = '_Test Leave Block List')",
        "SELECT ALLOW_USER FROM TABLEAVE BLOCK LIST ALLOW WHERE (PARENT = '_Test Leave Block List')",
        "SELECT ALLOW_USER FROM TABLEAVE BLOCK LIST ALLOW WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 649,
      "pathList": [
        "SELECT OWNER FROM TABSTOCK ENTRY WHERE NOT (NAME = 'STE-00031')",
        "SELECT OWNER FROM TABSTOCK ENTRY WHERE (NAME = 'STE-00031')"
      ]
    },
    {
      "queryNo": 650,
      "pathList": [
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item SC B') AND (PARENTFIELD = 'uoms') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item SC B') AND (PARENTFIELD = 'uoms') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENTFIELD = 'uoms') AND (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('2638b50338'))",
        "SELECT NAME FROM TABUOM CONVERSION DETAIL WHERE (NAME IN ('2638b50338')) AND (PARENT = '_Test PPT Item SC B') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms')"
      ]
    },
    {
      "queryNo": 651,
      "pathList": [
        "SELECT COURSE_ABBREVIATION FROM TABCOURSE WHERE NOT (NAME = '_Test Course 2')",
        "SELECT COURSE_ABBREVIATION FROM TABCOURSE WHERE (NAME = '_Test Course 2')"
      ]
    },
    {
      "queryNo": 652,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = 'SQTN-00003')",
        "SELECT NAME FROM TABSUPPLIER QUOTATION WHERE (NAME = 'SQTN-00003')"
      ]
    },
    {
      "queryNo": 653,
      "pathList": [
        "SELECT NAME FROM TABTIMESHEET WHERE NOT (NAME = 'TS-00015')",
        "SELECT NAME FROM TABTIMESHEET WHERE (NAME = 'TS-00015')"
      ]
    },
    {
      "queryNo": 654,
      "pathList": [
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE (PARENTTYPE = 'Item Attribute') AND (PARENT = 'Test Size') AND (PARENTFIELD = 'item_attribute_values')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE NOT (PARENTTYPE = 'Item Attribute') AND (PARENT = 'Test Size') AND (PARENTFIELD = 'item_attribute_values')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Test Size') AND (PARENTFIELD = 'item_attribute_values')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE NOT (PARENT = 'Test Size') AND (PARENTTYPE = 'Item Attribute') AND (PARENTFIELD = 'item_attribute_values')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item Attribute') AND (PARENTFIELD = 'item_attribute_values')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE NOT (PARENTFIELD = 'item_attribute_values') AND (PARENTTYPE = 'Item Attribute') AND (PARENT = 'Test Size')",
        "SELECT * FROM TABITEM ATTRIBUTE VALUE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item Attribute') AND (PARENT = 'Test Size')"
      ]
    },
    {
      "queryNo": 655,
      "pathList": [
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Asset') AND (REFERENCE_NAME = 'Macbook Pro 1')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Asset') AND (REFERENCE_NAME = 'Macbook Pro 1')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'Macbook Pro 1')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_NAME = 'Macbook Pro 1') AND (REFERENCE_TYPE = 'Asset')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Asset')"
      ]
    },
    {
      "queryNo": 656,
      "pathList": [
        "SELECT DISTINCT PARENT FROM TABDOCFIELD WHERE NOT (FIELDNAME = 'barcode')",
        "SELECT DISTINCT PARENT FROM TABDOCFIELD WHERE (FIELDNAME = 'barcode')",
        "SELECT DISTINCT PARENT FROM TABDOCFIELD WHERE (FIELDNAME IS NULL)"
      ]
    },
    {
      "queryNo": 657,
      "pathList": [
        "SELECT NAME, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Sales Invoice') AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Sales Invoice') AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'SINV-00016') AND (VOUCHER_TYPE = 'Sales Invoice')",
        "SELECT NAME, DOCSTATUS FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Sales Invoice')"
      ]
    },
    {
      "queryNo": 658,
      "pathList": [
        "SELECT DATA FROM __LISTSETTINGS WHERE (USER = 'Administrator') AND (DOCTYPE = 'DocType')",
        "SELECT DATA FROM __LISTSETTINGS WHERE NOT (USER = 'Administrator') AND (DOCTYPE = 'DocType')",
        "SELECT DATA FROM __LISTSETTINGS WHERE NOT (DOCTYPE = 'DocType') AND (USER = 'Administrator')"
      ]
    },
    {
      "queryNo": 659,
      "pathList": [
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 660,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE NOT (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE NOT (PARENT = 'PINV-00006') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'advances')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE NOT (PARENTFIELD = 'advances') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006')",
        "SELECT * FROM TABPURCHASE INVOICE ADVANCE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006')"
      ]
    },
    {
      "queryNo": 661,
      "pathList": [
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.DOCSTATUS = 2.0 + 1) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.DOCSTATUS = 2.0) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.DOCSTATUS = 2.0 - 1) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0 + 1) AND (TABSALES INVOICE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0) AND (TABSALES INVOICE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0 - 1) AND (TABSALES INVOICE.DOCSTATUS < 2.0)"
      ]
    },
    {
      "queryNo": 662,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENT = 'SO-00017') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENT = 'SO-00017') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00017') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SO-00017') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'SO-00017') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'SO-00017') AND (PARENTTYPE = 'Sales Order') AND (NAME NOT IN ('965bec8b58', 'e3125feed3'))",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (NAME IN ('965bec8b58', 'e3125feed3')) AND (PARENT = 'SO-00017') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 663,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE NOT (NAME = '1bee6b5190')",
        "SELECT NAME FROM TABFILE WHERE (NAME = '1bee6b5190')"
      ]
    },
    {
      "queryNo": 664,
      "pathList": [
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (AMOUNT = BILLED_AMT + 1) AND (NAME = '20bb7cad4e') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (AMOUNT = BILLED_AMT) AND (NAME = '20bb7cad4e') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (AMOUNT = BILLED_AMT - 1) AND (NAME = '20bb7cad4e') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (NAME = '20bb7cad4e') AND (AMOUNT < BILLED_AMT) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE NOT (NAME = '20bb7cad4e') AND (AMOUNT < BILLED_AMT) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 2) AND (AMOUNT < BILLED_AMT) AND (NAME = '20bb7cad4e')",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 1) AND (AMOUNT < BILLED_AMT) AND (NAME = '20bb7cad4e')",
        "SELECT ITEM_CODE, AMOUNT, BILLED_AMT, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 0) AND (AMOUNT < BILLED_AMT) AND (NAME = '20bb7cad4e')"
      ]
    },
    {
      "queryNo": 666,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYMENT TYPE WHERE NOT (NAME = 'Intern')",
        "SELECT NAME FROM TABEMPLOYMENT TYPE WHERE (NAME = 'Intern')"
      ]
    },
    {
      "queryNo": 667,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPAYMENT REQUEST WHERE NOT (NAME = 'PR00002')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPAYMENT REQUEST WHERE (NAME = 'PR00002')"
      ]
    },
    {
      "queryNo": 668,
      "pathList": [
        "SELECT PROJECTED_QTY, ACTUAL_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item Home Desktop 200')",
        "SELECT PROJECTED_QTY, ACTUAL_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item Home Desktop 200')",
        "SELECT PROJECTED_QTY, ACTUAL_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item Home Desktop 200')",
        "SELECT PROJECTED_QTY, ACTUAL_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item Home Desktop 200') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT PROJECTED_QTY, ACTUAL_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 669,
      "pathList": [
        "SELECT DEFAULT_EXPENSE_ACCOUNT FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group Desktops')",
        "SELECT DEFAULT_EXPENSE_ACCOUNT FROM TABITEM GROUP WHERE (NAME = '_Test Item Group Desktops')"
      ]
    },
    {
      "queryNo": 670,
      "pathList": [
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (EMAIL_ID = 'sukh@yyy.com') AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE NOT (EMAIL_ID = 'sukh@yyy.com') AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (EMAIL_ID IS NULL) AND (ENABLE_INCOMING = 1)",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 2) AND (EMAIL_ID = 'sukh@yyy.com')",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 1) AND (EMAIL_ID = 'sukh@yyy.com')",
        "SELECT EMAIL_ID FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 0) AND (EMAIL_ID = 'sukh@yyy.com')"
      ]
    },
    {
      "queryNo": 671,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (NAME = '44524e8707') AND (IS_FOLDER = 0)",
        "SELECT NAME FROM TABFILE WHERE NOT (NAME = '44524e8707') AND (IS_FOLDER = 0)",
        "SELECT NAME FROM TABFILE WHERE (IS_FOLDER = 1) AND (NAME = '44524e8707')",
        "SELECT NAME FROM TABFILE WHERE (IS_FOLDER = 0) AND (NAME = '44524e8707')",
        "SELECT NAME FROM TABFILE WHERE (IS_FOLDER = -1) AND (NAME = '44524e8707')"
      ]
    },
    {
      "queryNo": 672,
      "pathList": [
        "SELECT NAME FROM TABBUDGET WHERE (TABBUDGET.NAME NOT LIKE '_Test Cost Center - _TC/_Test Fiscal Year 2013%%')",
        "SELECT NAME FROM TABBUDGET WHERE (TABBUDGET.NAME LIKE '_Test Cost Center - _TC/_Test Fiscal Year 2013%%')"
      ]
    },
    {
      "queryNo": 673,
      "pathList": [
        "SELECT * FROM TABPROPERTY SETTER WHERE NOT (DOC_TYPE = 'Landed Cost Item')",
        "SELECT * FROM TABPROPERTY SETTER WHERE (DOC_TYPE = 'Landed Cost Item')",
        "SELECT * FROM TABPROPERTY SETTER WHERE (DOC_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 674,
      "pathList": [
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTFIELD = 'exploded_items')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTFIELD = 'exploded_items')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTFIELD = 'exploded_items')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENT = 'BOM-_Test FG Item 2-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTFIELD = 'exploded_items') AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item 2-001')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item 2-001')"
      ]
    },
    {
      "queryNo": 675,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00005')",
        "SELECT * FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00005')"
      ]
    },
    {
      "queryNo": 676,
      "pathList": [
        "SELECT FIELDTYPE FROM TABDOCFIELD WHERE (FIELDNAME = 'hidden') AND (PARENT = 'DocField')",
        "SELECT FIELDTYPE FROM TABDOCFIELD WHERE NOT (FIELDNAME = 'hidden') AND (PARENT = 'DocField')",
        "SELECT FIELDTYPE FROM TABDOCFIELD WHERE (FIELDNAME IS NULL) AND (PARENT = 'DocField')",
        "SELECT FIELDTYPE FROM TABDOCFIELD WHERE NOT (PARENT = 'DocField') AND (FIELDNAME = 'hidden')",
        "SELECT FIELDTYPE FROM TABDOCFIELD WHERE (PARENT IS NULL) AND (FIELDNAME = 'hidden')"
      ]
    },
    {
      "queryNo": 677,
      "pathList": [
        "SELECT CURRENT FROM TABSERIES WHERE NOT (NAME = '_T-Production Order-')",
        "SELECT CURRENT FROM TABSERIES WHERE (NAME = '_T-Production Order-')",
        "SELECT CURRENT FROM TABSERIES WHERE (NAME IS NULL)"
      ]
    },
    {
      "queryNo": 678,
      "pathList": [
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1) AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE NOT (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1) AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (POI.SALES_ORDER_ITEM IS NULL) AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1) AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE NOT (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (PO.DOCSTATUS = 1) AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (POI.ITEM_CODE IS NULL) AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (PO.DOCSTATUS = 1) AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 2) AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 1) AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 0) AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.STATUS = 'Delivered')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE NOT (PO.STATUS = 'Delivered') AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE (PO.STATUS IS NULL) AND (POI.SALES_ORDER_ITEM = '965bec8b58') AND (POI.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI LEFT JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE ((PO.NAME IS NULL) AND (POI.PARENT IS NOT NULL)) AND (POI.SALES_ORDER_ITEM = '965bec8b58' AND POI.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI LEFT JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE ((PO.NAME IS NULL) AND (POI.PARENT IS NULL)) AND (POI.SALES_ORDER_ITEM = '965bec8b58' AND POI.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT * FROM TABPURCHASE ORDER ITEM POI RIGHT JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE ((POI.PARENT IS NULL) AND (PO.NAME IS NOT NULL)) AND (PO.DOCSTATUS = 1 AND PO.STATUS = 'Delivered')",
        "SELECT SUM(QTY) FROM TABPURCHASE ORDER ITEM POI INNER JOIN TABPURCHASE ORDER PO ON POI.PARENT = PO.NAME WHERE POI.SALES_ORDER_ITEM = '965bec8b58' AND POI.ITEM_CODE = '_Test Item for Drop Shipping' AND PO.DOCSTATUS = 1 AND PO.STATUS = 'Delivered' HAVING COUNT(QTY) > COUNT(DISTINCT QTY) AND COUNT(DISTINCT QTY) > 1"
      ]
    },
    {
      "queryNo": 679,
      "pathList": [
        "SELECT CONTENT, FOOTER FROM TABLETTER HEAD WHERE (IS_DEFAULT = 2)",
        "SELECT CONTENT, FOOTER FROM TABLETTER HEAD WHERE (IS_DEFAULT = 1)",
        "SELECT CONTENT, FOOTER FROM TABLETTER HEAD WHERE (IS_DEFAULT = 0)"
      ]
    },
    {
      "queryNo": 680,
      "pathList": [
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTFIELD = 'deductions') AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (NAME NOT IN ('36c7767330', 'a29839149c', 'e2034ef4b9'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (NAME IN ('36c7767330', 'a29839149c', 'e2034ef4b9')) AND (PARENT = 'Monthly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'deductions')"
      ]
    },
    {
      "queryNo": 681,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABTIMESHEET WHERE NOT (NAME = 'TS-00001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABTIMESHEET WHERE (NAME = 'TS-00001')"
      ]
    },
    {
      "queryNo": 682,
      "pathList": [
        "SELECT HOLIDAY_LIST, COMPANY FROM TABEMPLOYEE WHERE NOT (NAME = '_T-Employee-0001')",
        "SELECT HOLIDAY_LIST, COMPANY FROM TABEMPLOYEE WHERE (NAME = '_T-Employee-0001')"
      ]
    },
    {
      "queryNo": 683,
      "pathList": [
        "SELECT * FROM TABACTIVITY TYPE WHERE NOT (NAME = '_Test Activity Type')",
        "SELECT * FROM TABACTIVITY TYPE WHERE (NAME = '_Test Activity Type')"
      ]
    },
    {
      "queryNo": 684,
      "pathList": [
        "SELECT NAME FROM TABTIMESHEET WHERE NOT (TABTIMESHEET.PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME FROM TABTIMESHEET WHERE (TABTIMESHEET.PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME FROM TABTIMESHEET WHERE (TABTIMESHEET.PRODUCTION_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 685,
      "pathList": [
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY = '_Test Company') AND (NAME = '_Test Cost Center - _TC')",
        "SELECT NAME FROM TABCOST CENTER WHERE NOT (COMPANY = '_Test Company') AND (NAME = '_Test Cost Center - _TC')",
        "SELECT NAME FROM TABCOST CENTER WHERE (COMPANY IS NULL) AND (NAME = '_Test Cost Center - _TC')",
        "SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = '_Test Cost Center - _TC') AND (COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 686,
      "pathList": [
        "SELECT _COMMENTS FROM TABTODO WHERE NOT (NAME = '2969f8e4ec')",
        "SELECT _COMMENTS FROM TABTODO WHERE (NAME = '2969f8e4ec')"
      ]
    },
    {
      "queryNo": 687,
      "pathList": [
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (DELIVERY_DOCUMENT_TYPE = 'Delivery Note') AND (DELIVERY_DOCUMENT_NO = 'DN-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE NOT (DELIVERY_DOCUMENT_TYPE = 'Delivery Note') AND (DELIVERY_DOCUMENT_NO = 'DN-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (DELIVERY_DOCUMENT_TYPE IS NULL) AND (DELIVERY_DOCUMENT_NO = 'DN-00016')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE NOT (DELIVERY_DOCUMENT_NO = 'DN-00016') AND (DELIVERY_DOCUMENT_TYPE = 'Delivery Note')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (DELIVERY_DOCUMENT_NO IS NULL) AND (DELIVERY_DOCUMENT_TYPE = 'Delivery Note')"
      ]
    },
    {
      "queryNo": 688,
      "pathList": [
        "SELECT * FROM TABCUSTOMER GROUP WHERE NOT (IFNULL(PARENT_CUSTOMER_GROUP, '') = '')",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (IFNULL(PARENT_CUSTOMER_GROUP, '') = '')",
        "SELECT * FROM TABCUSTOMER GROUP WHERE ((PARENT_CUSTOMER_GROUP IS NOT NULL))",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (PARENT_CUSTOMER_GROUP IS NULL)"
      ]
    },
    {
      "queryNo": 689,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE NOT (PARENT_ITEM_GROUP = '') AND ((PARENT_ITEM_GROUP IS NOT NULL))",
        "SELECT NAME FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP = '') AND ((PARENT_ITEM_GROUP IS NOT NULL))",
        "SELECT NAME FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP IS NULL)"
      ]
    },
    {
      "queryNo": 690,
      "pathList": [
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (TO_DATE > '2015-01-01') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (TO_DATE > '2015-01-01') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (TO_DATE IS NULL) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (NAME <> 'TR0005') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (TO_DATE > '2015-01-01')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_CITY IS NOT NULL))) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_CITY IS NULL)) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((COMPANY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((COMPANY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_CITY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_CITY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((TAX_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((TAX_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND TO_DATE > '2015-01-01' AND NAME <> 'TR0005')"
      ]
    },
    {
      "queryNo": 691,
      "pathList": [
        "SELECT * FROM TABWORKSTATION WHERE NOT (NAME = '_Test Workstation 1')",
        "SELECT * FROM TABWORKSTATION WHERE (NAME = '_Test Workstation 1')"
      ]
    },
    {
      "queryNo": 692,
      "pathList": [
        "SELECT ACCOUNT_TYPE, REPORT_TYPE, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE NOT (NAME = '_Test Receivable - _TC')",
        "SELECT ACCOUNT_TYPE, REPORT_TYPE, ACCOUNT_CURRENCY FROM TABACCOUNT WHERE (NAME = '_Test Receivable - _TC')"
      ]
    },
    {
      "queryNo": 693,
      "pathList": [
        "SELECT LFT, RGT, IS_GROUP FROM TABWAREHOUSE WHERE NOT (NAME = 'Stores - _TC1')",
        "SELECT LFT, RGT, IS_GROUP FROM TABWAREHOUSE WHERE (NAME = 'Stores - _TC1')"
      ]
    },
    {
      "queryNo": 694,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET DETAIL WHERE NOT (SALES_INVOICE = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET DETAIL WHERE (SALES_INVOICE = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET DETAIL WHERE (SALES_INVOICE IS NULL)"
      ]
    },
    {
      "queryNo": 695,
      "pathList": [
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test Item Warehouse Group Wise Reorder') AND (PARENTFIELD = 'customer_items')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test Item Warehouse Group Wise Reorder') AND (PARENTFIELD = 'customer_items')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Item Warehouse Group Wise Reorder') AND (PARENTFIELD = 'customer_items')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE NOT (PARENT = '_Test Item Warehouse Group Wise Reorder') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'customer_items')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'customer_items')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE NOT (PARENTFIELD = 'customer_items') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test Item Warehouse Group Wise Reorder')",
        "SELECT * FROM TABITEM CUSTOMER DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test Item Warehouse Group Wise Reorder')"
      ]
    },
    {
      "queryNo": 696,
      "pathList": [
        "SELECT NAME FROM TABREQUEST FOR QUOTATION WHERE NOT (NAME = 'RFQ-00002')",
        "SELECT NAME FROM TABREQUEST FOR QUOTATION WHERE (NAME = 'RFQ-00002')"
      ]
    },
    {
      "queryNo": 698,
      "pathList": [
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.DOCSTATUS = 1) AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE NOT (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.DOCSTATUS = 1) AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.PRODUCTION_ORDER IS NULL) AND (T2.DOCSTATUS = 1) AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.DOCSTATUS = 2) AND (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.DOCSTATUS = 1) AND (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.DOCSTATUS = 0) AND (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE NOT (T2.PURPOSE = 'Material Transfer for Manufacture') AND (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.DOCSTATUS = 1) GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.PURPOSE IS NULL) AND (T2.PRODUCTION_ORDER = 'PRO-00002') AND (T2.DOCSTATUS = 1) GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 LEFT JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.NAME IS NULL) AND (T1.PARENT IS NOT NULL) GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 LEFT JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE (T2.NAME IS NULL) AND (T1.PARENT IS NULL) GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 RIGHT JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE ((T1.PARENT IS NULL) AND (T2.NAME IS NOT NULL)) AND (T2.PRODUCTION_ORDER = 'PRO-00002' AND T2.DOCSTATUS = 1 AND T2.PURPOSE = 'Material Transfer for Manufacture') GROUP BY T1.ITEM_CODE",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE T2.PRODUCTION_ORDER = 'PRO-00002' AND T2.DOCSTATUS = 1 AND T2.PURPOSE = 'Material Transfer for Manufacture' GROUP BY T1.ITEM_CODE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE T2.PRODUCTION_ORDER = 'PRO-00002' AND T2.DOCSTATUS = 1 AND T2.PURPOSE = 'Material Transfer for Manufacture' HAVING count(DISTINCT T1.ITEM_CODE) > 1",
        "SELECT T1.ITEM_CODE, SUM(T1.QTY) FROM TABSTOCK ENTRY DETAIL T1 INNER JOIN TABSTOCK ENTRY T2 ON T1.PARENT = T2.NAME WHERE T2.PRODUCTION_ORDER = 'PRO-00002' AND T2.DOCSTATUS = 1 AND T2.PURPOSE = 'Material Transfer for Manufacture' GROUP BY T1.ITEM_CODE HAVING COUNT(T1.QTY) > COUNT(DISTINCT T1.QTY) AND COUNT(DISTINCT T1.QTY) > 1"
      ]
    },
    {
      "queryNo": 699,
      "pathList": [
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS FROM TABSUPPLIER TYPE WHERE NOT (NAME = '_Test Supplier Type')",
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS FROM TABSUPPLIER TYPE WHERE (NAME = '_Test Supplier Type')"
      ]
    },
    {
      "queryNo": 700,
      "pathList": [
        "SELECT ROUTE FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group')",
        "SELECT ROUTE FROM TABITEM GROUP WHERE (NAME = '_Test Item Group')"
      ]
    },
    {
      "queryNo": 701,
      "pathList": [
      ]
    },
    {
      "queryNo": 702,
      "pathList": [
        "SELECT NAME FROM TABITEM ATTRIBUTE WHERE NOT (NAME = 'Test Item Length')",
        "SELECT NAME FROM TABITEM ATTRIBUTE WHERE (NAME = 'Test Item Length')"
      ]
    },
    {
      "queryNo": 703,
      "pathList": [
        "SELECT ASSET_CATEGORY FROM TABITEM WHERE NOT (NAME = 'Macbook Pro')",
        "SELECT ASSET_CATEGORY FROM TABITEM WHERE (NAME = 'Macbook Pro')"
      ]
    },
    {
      "queryNo": 704,
      "pathList": [
        "SELECT * FROM TABDOCPERM WHERE (PARENTTYPE = 'DocType') AND (PARENT = 'Shipping Rule Country') AND (PARENTFIELD = 'permissions')",
        "SELECT * FROM TABDOCPERM WHERE NOT (PARENTTYPE = 'DocType') AND (PARENT = 'Shipping Rule Country') AND (PARENTFIELD = 'permissions')",
        "SELECT * FROM TABDOCPERM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Shipping Rule Country') AND (PARENTFIELD = 'permissions')",
        "SELECT * FROM TABDOCPERM WHERE NOT (PARENT = 'Shipping Rule Country') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions')",
        "SELECT * FROM TABDOCPERM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions')",
        "SELECT * FROM TABDOCPERM WHERE NOT (PARENTFIELD = 'permissions') AND (PARENTTYPE = 'DocType') AND (PARENT = 'Shipping Rule Country')",
        "SELECT * FROM TABDOCPERM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENT = 'Shipping Rule Country')"
      ]
    },
    {
      "queryNo": 705,
      "pathList": [
        "SELECT DESCRIPTION FROM TABEVENT WHERE NOT (NAME = 'EV00008')",
        "SELECT DESCRIPTION FROM TABEVENT WHERE (NAME = 'EV00008')"
      ]
    },
    {
      "queryNo": 706,
      "pathList": [
        "SELECT DOCSTATUS FROM TABBOM WHERE NOT (NAME = 'BOM-_Test PPT Item SC B-001')",
        "SELECT DOCSTATUS FROM TABBOM WHERE (NAME = 'BOM-_Test PPT Item SC B-001')"
      ]
    },
    {
      "queryNo": 707,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOG POST WHERE NOT (NAME = '-test-blog-post-1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBLOG POST WHERE (NAME = '-test-blog-post-1')"
      ]
    },
    {
      "queryNo": 708,
      "pathList": [
        "SELECT NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.STATUS = 'Open') AND (TABCOMMUNICATION.COMMUNICATION_TYPE = 'Communication')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (TABCOMMUNICATION.STATUS = 'Open') AND (TABCOMMUNICATION.COMMUNICATION_TYPE = 'Communication')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.STATUS IS NULL) AND (TABCOMMUNICATION.COMMUNICATION_TYPE = 'Communication')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (TABCOMMUNICATION.COMMUNICATION_TYPE = 'Communication') AND (TABCOMMUNICATION.STATUS = 'Open')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (TABCOMMUNICATION.COMMUNICATION_TYPE IS NULL) AND (TABCOMMUNICATION.STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 709,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (AMENDED_FROM = 'STE-00049')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (AMENDED_FROM = 'STE-00049')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 710,
      "pathList": [
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS = 1) AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE NOT (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS = 1) AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (BOM_ITEM.BOM_NO IS NULL) AND (BOM_ITEM.DOCSTATUS = 1) AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (BOM_ITEM.DOCSTATUS = 2) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (BOM_ITEM.DOCSTATUS = 1) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (BOM_ITEM.DOCSTATUS = 0) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1))",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE (NOT EXISTS (SELECT * FROM TABBOM WHERE NAME = BOM_ITEM.PARENT AND DOCSTATUS = 1 AND IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (NAME = BOM_ITEM.PARENT) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE NOT (NAME = BOM_ITEM.PARENT) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (BOM_ITEM.PARENT IS NULL) AND (DOCSTATUS = 1) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (DOCSTATUS = 2) AND (NAME = BOM_ITEM.PARENT) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (DOCSTATUS = 1) AND (NAME = BOM_ITEM.PARENT) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (DOCSTATUS = 0) AND (NAME = BOM_ITEM.PARENT) AND (IS_ACTIVE = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (IS_ACTIVE = 2) AND (NAME = BOM_ITEM.PARENT) AND (DOCSTATUS = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (IS_ACTIVE = 1) AND (NAME = BOM_ITEM.PARENT) AND (DOCSTATUS = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)",
        "SELECT DISTINCT BOM_ITEM.PARENT FROM TABBOM ITEM BOM_ITEM WHERE EXISTS (SELECT * FROM TABBOM WHERE (IS_ACTIVE = 0) AND (NAME = BOM_ITEM.PARENT) AND (DOCSTATUS = 1)) AND (BOM_ITEM.BOM_NO = 'BOM-_Test FG Item 2-001' AND BOM_ITEM.DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 711,
      "pathList": [
      ]
    },
    {
      "queryNo": 712,
      "pathList": [
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (DISABLED = 1) AND (CUSTOMER_GROUP IN ('_Test Customer Group'))",
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (DISABLED = 0) AND (CUSTOMER_GROUP IN ('_Test Customer Group'))",
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (DISABLED = -1) AND (CUSTOMER_GROUP IN ('_Test Customer Group'))",
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (CUSTOMER_GROUP IN ('_Test Customer Group')) AND (DISABLED = 0)",
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (CUSTOMER_GROUP NOT IN ('_Test Customer Group')) AND (DISABLED = 0)",
        "SELECT NAME, CUSTOMER_NAME, CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (CUSTOMER_GROUP IS NULL) AND (DISABLED = 0)"
      ]
    },
    {
      "queryNo": 713,
      "pathList": [
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE NOT (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 714,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABUSER WHERE NOT (NAME = 'Weekly_test_employee@salary.com')",
        "SELECT MODIFIED, DOCSTATUS FROM TABUSER WHERE (NAME = 'Weekly_test_employee@salary.com')"
      ]
    },
    {
      "queryNo": 715,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (NAME = 'STE-00023')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK ENTRY WHERE (NAME = 'STE-00023')"
      ]
    },
    {
      "queryNo": 716,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (USER_TYPE = 'System User') AND (ENABLED = 1)",
        "SELECT NAME FROM TABUSER WHERE (NAME IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (USER_TYPE = 'System User') AND (ENABLED = 1)",
        "SELECT NAME FROM TABUSER WHERE NOT (USER_TYPE = 'System User') AND (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (ENABLED = 1)",
        "SELECT NAME FROM TABUSER WHERE (USER_TYPE IS NULL) AND (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (ENABLED = 1)",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 2) AND (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 1) AND (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (USER_TYPE = 'System User')",
        "SELECT NAME FROM TABUSER WHERE (ENABLED = 0) AND (NAME NOT IN ('Administrator', 'Guest', 'test@erpnext.com')) AND (USER_TYPE = 'System User')"
      ]
    },
    {
      "queryNo": 717,
      "pathList": [
        "SELECT CURRENCY FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00001')",
        "SELECT CURRENCY FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00001')"
      ]
    },
    {
      "queryNo": 718,
      "pathList": [
        "SELECT LFT, RGT FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group C')",
        "SELECT LFT, RGT FROM TABITEM GROUP WHERE (NAME = '_Test Item Group C')"
      ]
    },
    {
      "queryNo": 719,
      "pathList": [
        "SELECT ROOT_TYPE FROM TABACCOUNT WHERE NOT (NAME = '_Test Receivable - _TC')",
        "SELECT ROOT_TYPE FROM TABACCOUNT WHERE (NAME = '_Test Receivable - _TC')"
      ]
    },
    {
      "queryNo": 720,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 721,
      "pathList": [
        "SELECT * FROM TABEVENT WHERE NOT (NAME = 'EV00022')",
        "SELECT * FROM TABEVENT WHERE (NAME = 'EV00022')"
      ]
    },
    {
      "queryNo": 722,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL = 'f9b3131c89') AND (DOCSTATUS = 1) AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (DN_DETAIL = 'f9b3131c89') AND (DOCSTATUS = 1) AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL IS NULL) AND (DOCSTATUS = 1) AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 2) AND (DN_DETAIL = 'f9b3131c89') AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 1) AND (DN_DETAIL = 'f9b3131c89') AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 0) AND (DN_DETAIL = 'f9b3131c89') AND (PARENT <> 'SINV-00006')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (PARENT <> 'SINV-00006') AND (DN_DETAIL = 'f9b3131c89') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (PARENT IS NULL) AND (DN_DETAIL = 'f9b3131c89') AND (DOCSTATUS = 1)",
        "SELECT SUM(AMOUNT) FROM TABSALES INVOICE ITEM WHERE DN_DETAIL = 'f9b3131c89' AND DOCSTATUS = 1 AND PARENT <> 'SINV-00006' HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 723,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (DOCSTATUS = 2) AND (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004') AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (DOCSTATUS = 1) AND (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004') AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (DOCSTATUS = 0) AND (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004') AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004') AND (DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE NOT (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004') AND (DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (PURCHASE_RECEIPT IS NULL) AND (DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC'))",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE (NOT EXISTS (SELECT NAME FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Purchase Invoice' AND VOUCHER_NO = PI.PARENT AND ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1) AND (PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Purchase Invoice') AND (VOUCHER_NO = PI.PARENT) AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Invoice') AND (VOUCHER_NO = PI.PARENT) AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = PI.PARENT) AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = PI.PARENT) AND (VOUCHER_TYPE = 'Purchase Invoice') AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Purchase Invoice') AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE (PI.PARENT IS NULL) AND (VOUCHER_TYPE = 'Purchase Invoice') AND (ACCOUNT = 'Expenses Included In Valuation - _TC')) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE NOT (ACCOUNT = 'Expenses Included In Valuation - _TC') AND (VOUCHER_TYPE = 'Purchase Invoice') AND (VOUCHER_NO = PI.PARENT)) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')",
        "SELECT NAME FROM TABPURCHASE INVOICE ITEM PI WHERE EXISTS (SELECT NAME FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (VOUCHER_TYPE = 'Purchase Invoice') AND (VOUCHER_NO = PI.PARENT)) AND (DOCSTATUS = 1 AND PURCHASE_RECEIPT = '_T-Purchase Receipt-00004')"
      ]
    },
    {
      "queryNo": 724,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (CONTENT_HASH = '07a78a83e5d48037cad1e0fc0f1ef654') AND (IS_PRIVATE = 1)",
        "SELECT NAME FROM TABFILE WHERE NOT (CONTENT_HASH = '07a78a83e5d48037cad1e0fc0f1ef654') AND (IS_PRIVATE = 1)",
        "SELECT NAME FROM TABFILE WHERE (CONTENT_HASH IS NULL) AND (IS_PRIVATE = 1)",
        "SELECT NAME FROM TABFILE WHERE (IS_PRIVATE = 2) AND (CONTENT_HASH = '07a78a83e5d48037cad1e0fc0f1ef654')",
        "SELECT NAME FROM TABFILE WHERE (IS_PRIVATE = 1) AND (CONTENT_HASH = '07a78a83e5d48037cad1e0fc0f1ef654')",
        "SELECT NAME FROM TABFILE WHERE (IS_PRIVATE = 0) AND (CONTENT_HASH = '07a78a83e5d48037cad1e0fc0f1ef654')"
      ]
    },
    {
      "queryNo": 725,
      "pathList": [
        "SELECT * FROM TABPACKED ITEM WHERE (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00005') AND (PARENTFIELD = 'packed_items')",
        "SELECT * FROM TABPACKED ITEM WHERE NOT (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00005') AND (PARENTFIELD = 'packed_items')",
        "SELECT * FROM TABPACKED ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SO-00005') AND (PARENTFIELD = 'packed_items')",
        "SELECT * FROM TABPACKED ITEM WHERE NOT (PARENT = 'SO-00005') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items')",
        "SELECT * FROM TABPACKED ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'packed_items')",
        "SELECT * FROM TABPACKED ITEM WHERE NOT (PARENTFIELD = 'packed_items') AND (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00005')",
        "SELECT * FROM TABPACKED ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00005')"
      ]
    },
    {
      "queryNo": 726,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 2) AND (PREVDOC_DOCNAME = '_T-Quotation-00004')",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 1) AND (PREVDOC_DOCNAME = '_T-Quotation-00004')",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 0) AND (PREVDOC_DOCNAME = '_T-Quotation-00004')",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PREVDOC_DOCNAME = '_T-Quotation-00004') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE NOT (PREVDOC_DOCNAME = '_T-Quotation-00004') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSALES ORDER ITEM WHERE (PREVDOC_DOCNAME IS NULL) AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 727,
      "pathList": [
        "SELECT TOTAL_EXPENSE_CLAIM FROM TABTASK WHERE NOT (NAME = 'TASK00014')",
        "SELECT TOTAL_EXPENSE_CLAIM FROM TABTASK WHERE (NAME = 'TASK00014')"
      ]
    },
    {
      "queryNo": 728,
      "pathList": [
        "SELECT NAME FROM TABCAMPAIGN WHERE NOT (NAME = '_Test Campaign')",
        "SELECT NAME FROM TABCAMPAIGN WHERE (NAME = '_Test Campaign')"
      ]
    },
    {
      "queryNo": 729,
      "pathList": [
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (NAME = '0e1e02aa56')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (NAME = '0e1e02aa56')"
      ]
    },
    {
      "queryNo": 730,
      "pathList": [
        "SELECT OWNER FROM TABLEAVE APPLICATION WHERE NOT (NAME = 'LAP/00003')",
        "SELECT OWNER FROM TABLEAVE APPLICATION WHERE (NAME = 'LAP/00003')"
      ]
    },
    {
      "queryNo": 731,
      "pathList": [
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE (USER = 'Administrator') AND (ENABLED = 1)",
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE NOT (USER = 'Administrator') AND (ENABLED = 1)",
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE (USER IS NULL) AND (ENABLED = 1)",
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE (ENABLED = 2) AND (USER = 'Administrator')",
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE (ENABLED = 1) AND (USER = 'Administrator')",
        "SELECT * FROM TABAUTO EMAIL REPORT WHERE (ENABLED = 0) AND (USER = 'Administrator')"
      ]
    },
    {
      "queryNo": 732,
      "pathList": [
        "SELECT * FROM TABBUDGET WHERE NOT (NAME = '_Test Cost Center - _TC/_Test Fiscal Year 2013/003')",
        "SELECT * FROM TABBUDGET WHERE (NAME = '_Test Cost Center - _TC/_Test Fiscal Year 2013/003')"
      ]
    },
    {
      "queryNo": 733,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Employee', 'Blogger', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Employee', 'Blogger', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Employee', 'Blogger', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Employee', 'Blogger', 'Sales User', 'Stock User')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Employee', 'Blogger', 'Sales User', 'Stock User')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 734,
      "pathList": [
        "SELECT CUSTOMER_GROUP FROM TABCUSTOMER WHERE NOT (NAME = 'Party Status Test')",
        "SELECT CUSTOMER_GROUP FROM TABCUSTOMER WHERE (NAME = 'Party Status Test')"
      ]
    },
    {
      "queryNo": 735,
      "pathList": [
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMUNICATION_TYPE = 'Comment') AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (MODIFIED IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (COMMENT_TYPE = 'Like') AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMENT_TYPE IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (OWNER IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (OWNER <> 'Administrator') AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (REFERENCE_OWNER = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (REFERENCE_OWNER = 'Administrator') AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (REFERENCE_OWNER IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = 1) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator')",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = 0) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator')",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = -1) AND (COMMUNICATION_TYPE = 'Comment') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMENT_TYPE = 'Like') AND ((OWNER IS NOT NULL)) AND (OWNER <> 'Administrator') AND (REFERENCE_OWNER = 'Administrator')"
      ]
    },
    {
      "queryNo": 736,
      "pathList": [
        "SELECT * FROM TABROLE WHERE NOT (NAME = '_Test Role 3')",
        "SELECT * FROM TABROLE WHERE (NAME = '_Test Role 3')"
      ]
    },
    {
      "queryNo": 737,
      "pathList": [
        "SELECT * FROM TABBUDGET ACCOUNT WHERE (PARENTTYPE = 'Budget') AND (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE NOT (PARENTTYPE = 'Budget') AND (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE NOT (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001') AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Budget') AND (PARENTFIELD = 'accounts')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENTTYPE = 'Budget') AND (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001')",
        "SELECT * FROM TABBUDGET ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Budget') AND (PARENT = '_Test Company - _TC/_Test Fiscal Year 2013/001')"
      ]
    },
    {
      "queryNo": 738,
      "pathList": [
        "SELECT NAME FROM TABPROJECT WHERE (NAME = '_Test Project') AND ((CUSTOMER = '_Test Customer' OR (CUSTOMER IS NULL) OR CUSTOMER = ''))",
        "SELECT NAME FROM TABPROJECT WHERE NOT (NAME = '_Test Project') AND ((CUSTOMER = '_Test Customer' OR (CUSTOMER IS NULL) OR CUSTOMER = ''))",
        "SELECT NAME FROM TABPROJECT WHERE NOT (CUSTOMER = '_Test Customer') AND ((CUSTOMER IS NOT NULL)) AND NOT (CUSTOMER = '') AND (NAME = '_Test Project')",
        "SELECT NAME FROM TABPROJECT WHERE (CUSTOMER = '_Test Customer') AND ((CUSTOMER IS NOT NULL)) AND NOT (CUSTOMER = '') AND (NAME = '_Test Project')",
        "SELECT NAME FROM TABPROJECT WHERE (CUSTOMER IS NULL) AND (NAME = '_Test Project')",
        "SELECT NAME FROM TABPROJECT WHERE (CUSTOMER = '') AND NOT (CUSTOMER = '_Test Customer') AND ((CUSTOMER IS NOT NULL)) AND (NAME = '_Test Project')"
      ]
    },
    {
      "queryNo": 739,
      "pathList": [
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (LFT = 20) AND (RGT >= 20) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (LFT = 19) AND (RGT >= 20) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (LFT = 18) AND (RGT >= 20) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (RGT = 21) AND (LFT <= 19) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (RGT = 20) AND (LFT <= 19) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (RGT = 19) AND (LFT <= 19) AND (SHOW_IN_WEBSITE = 1)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 2) AND (LFT <= 19) AND (RGT >= 20)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 1) AND (LFT <= 19) AND (RGT >= 20)",
        "SELECT NAME, ROUTE FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 0) AND (LFT <= 19) AND (RGT >= 20)"
      ]
    },
    {
      "queryNo": 740,
      "pathList": [
        "SELECT * FROM TABPROJECT TASK WHERE (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'tasks')",
        "SELECT * FROM TABPROJECT TASK WHERE NOT (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'tasks')",
        "SELECT * FROM TABPROJECT TASK WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Project 1') AND (PARENTFIELD = 'tasks')",
        "SELECT * FROM TABPROJECT TASK WHERE NOT (PARENT = '_Test Project 1') AND (PARENTTYPE = 'Project') AND (PARENTFIELD = 'tasks')",
        "SELECT * FROM TABPROJECT TASK WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Project') AND (PARENTFIELD = 'tasks')",
        "SELECT * FROM TABPROJECT TASK WHERE NOT (PARENTFIELD = 'tasks') AND (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1')",
        "SELECT * FROM TABPROJECT TASK WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Project') AND (PARENT = '_Test Project 1')"
      ]
    },
    {
      "queryNo": 741,
      "pathList": [
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (ITEM_CODE = '_Test Item') AND (PARENT = 'STE-00033')",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE NOT (ITEM_CODE = '_Test Item') AND (PARENT = 'STE-00033')",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (ITEM_CODE IS NULL) AND (PARENT = 'STE-00033')",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = 'STE-00033') AND (ITEM_CODE = '_Test Item')",
        "SELECT SERIAL_NO FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (ITEM_CODE = '_Test Item')"
      ]
    },
    {
      "queryNo": 742,
      "pathList": [
        "SELECT MAX(char_length(PARENT)) FROM TABUSER HAVING COUNT(char_length(PARENT)) > COUNT(DISTINCT char_length(PARENT)) AND COUNT(DISTINCT char_length(PARENT)) > 1"
      ]
    },
    {
      "queryNo": 743,
      "pathList": [
        "SELECT * FROM TABACCOUNT WHERE (LFT = 928) AND NOT (RGT = 928)",
        "SELECT * FROM TABACCOUNT WHERE (LFT = 927) AND NOT (RGT = 928)",
        "SELECT * FROM TABACCOUNT WHERE (LFT = 926) AND NOT (RGT = 928)",
        "SELECT * FROM TABACCOUNT WHERE (RGT = 929) AND NOT (LFT = 927)",
        "SELECT * FROM TABACCOUNT WHERE (RGT = 928) AND NOT (LFT = 927)",
        "SELECT * FROM TABACCOUNT WHERE (RGT = 927) AND NOT (LFT = 927)"
      ]
    },
    {
      "queryNo": 744,
      "pathList": [
        "SELECT DATE_FORMAT FROM TABCOUNTRY WHERE NOT (NAME = 'United States')",
        "SELECT DATE_FORMAT FROM TABCOUNTRY WHERE (NAME = 'United States')"
      ]
    },
    {
      "queryNo": 745,
      "pathList": [
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE NOT (IFNULL(TABBLOG POST.BLOGGER, '') = '') AND (TABBLOG POST.BLOGGER NOT IN ('_Test Blogger 1'))",
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE (IFNULL(TABBLOG POST.BLOGGER, '') = '') AND (TABBLOG POST.BLOGGER NOT IN ('_Test Blogger 1'))",
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE (TABBLOG POST.BLOGGER IN ('_Test Blogger 1')) AND NOT (IFNULL(TABBLOG POST.BLOGGER, '') = '')",
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE (TABBLOG POST.BLOGGER IS NULL) AND NOT (IFNULL(TABBLOG POST.BLOGGER, '') = '')",
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE (((TABBLOG POST.BLOGGER IS NOT NULL))) AND ((TABBLOG POST.BLOGGER IN ('_Test Blogger 1')))",
        "SELECT NAME, OWNER FROM TABBLOG POST WHERE (TABBLOG POST.BLOGGER IS NULL)"
      ]
    },
    {
      "queryNo": 746,
      "pathList": [
        "SELECT DOC_TYPE FROM TABPRINT FORMAT WHERE NOT (NAME = '_Test Print Format 1')",
        "SELECT DOC_TYPE FROM TABPRINT FORMAT WHERE (NAME = '_Test Print Format 1')"
      ]
    },
    {
      "queryNo": 747,
      "pathList": [
        "SELECT NAME FROM TABITEM PRICE WHERE (CURRENCY = 'INR') AND (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (CURRENCY = 'INR') AND (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE (CURRENCY IS NULL) AND (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (PRICE_LIST = '_Test Price List') AND (CURRENCY = 'INR') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE (PRICE_LIST IS NULL) AND (CURRENCY = 'INR') AND (ITEM_CODE = '_Test Item for Auto Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (ITEM_CODE = '_Test Item for Auto Price List') AND (CURRENCY = 'INR') AND (PRICE_LIST = '_Test Price List')",
        "SELECT NAME FROM TABITEM PRICE WHERE (ITEM_CODE IS NULL) AND (CURRENCY = 'INR') AND (PRICE_LIST = '_Test Price List')"
      ]
    },
    {
      "queryNo": 748,
      "pathList": [
        "SELECT OWNER FROM TABJOURNAL ENTRY WHERE NOT (NAME = 'JV-00017')",
        "SELECT OWNER FROM TABJOURNAL ENTRY WHERE (NAME = 'JV-00017')"
      ]
    },
    {
      "queryNo": 749,
      "pathList": [
        "SELECT NAME FROM TABROOM WHERE NOT (NAME = 'RM0002')",
        "SELECT NAME FROM TABROOM WHERE (NAME = 'RM0002')"
      ]
    },
    {
      "queryNo": 750,
      "pathList": [
      ]
    },
    {
      "queryNo": 751,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE (PUBLISHED = 2) AND (ROUTE = 'manage-events')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE (PUBLISHED = 1) AND (ROUTE = 'manage-events')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE (PUBLISHED = 0) AND (ROUTE = 'manage-events')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE (ROUTE = 'manage-events') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE NOT (ROUTE = 'manage-events') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABWEB FORM WHERE (ROUTE IS NULL) AND (PUBLISHED = 1)"
      ]
    },
    {
      "queryNo": 752,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (CURRENCY = 'USD') AND (PAYMENT_GATEWAY = '_Test Gateway')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE NOT (CURRENCY = 'USD') AND (PAYMENT_GATEWAY = '_Test Gateway')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (CURRENCY IS NULL) AND (PAYMENT_GATEWAY = '_Test Gateway')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE NOT (PAYMENT_GATEWAY = '_Test Gateway') AND (CURRENCY = 'USD')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (PAYMENT_GATEWAY IS NULL) AND (CURRENCY = 'USD')"
      ]
    },
    {
      "queryNo": 753,
      "pathList": [
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENTTYPE = 'Email Queue') AND (PARENT = '59b2fa6000') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE NOT (PARENTTYPE = 'Email Queue') AND (PARENT = '59b2fa6000') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENTTYPE IS NULL) AND (PARENT = '59b2fa6000') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE NOT (PARENT = '59b2fa6000') AND (PARENTTYPE = 'Email Queue') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Email Queue') AND (PARENTFIELD = 'recipients')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE NOT (PARENTFIELD = 'recipients') AND (PARENTTYPE = 'Email Queue') AND (PARENT = '59b2fa6000')",
        "SELECT * FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Email Queue') AND (PARENT = '59b2fa6000')"
      ]
    },
    {
      "queryNo": 754,
      "pathList": [
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw D') AND (PARENTFIELD = 'uoms')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw D') AND (PARENTFIELD = 'uoms')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item Raw D') AND (PARENTFIELD = 'uoms')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENT = '_Test PPT Item Raw D') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'uoms')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENTFIELD = 'uoms') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw D')",
        "SELECT * FROM TABUOM CONVERSION DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw D')"
      ]
    },
    {
      "queryNo": 755,
      "pathList": [
        "SELECT DEFAULT_COST_CENTER FROM TABITEM GROUP WHERE NOT (NAME = 'All Item Groups')",
        "SELECT DEFAULT_COST_CENTER FROM TABITEM GROUP WHERE (NAME = 'All Item Groups')"
      ]
    },
    {
      "queryNo": 756,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE NOT (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 757,
      "pathList": [
        "SELECT * FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00008')",
        "SELECT * FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00008')"
      ]
    },
    {
      "queryNo": 758,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (EMAIL = 'test_lead@example.com')",
        "SELECT NAME FROM TABUSER WHERE (EMAIL = 'test_lead@example.com')",
        "SELECT NAME FROM TABUSER WHERE (EMAIL IS NULL)"
      ]
    },
    {
      "queryNo": 759,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER WHERE (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (PRODUCTION_ITEM IS NULL) AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (PRODUCTION_ITEM = '_Test FG Item') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (FG_WAREHOUSE IS NULL) AND (PRODUCTION_ITEM = '_Test FG Item') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (STATUS <> 'Stopped') AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (STATUS IS NULL) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (DOCSTATUS = 1) AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 2) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 1) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 0) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (QTY > PRODUCED_QTY)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (QTY = PRODUCED_QTY + 1) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (QTY = PRODUCED_QTY) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (QTY = PRODUCED_QTY - 1) AND (PRODUCTION_ITEM = '_Test FG Item') AND (FG_WAREHOUSE = '_Test Warehouse 1 - _TC') AND (STATUS <> 'Stopped') AND (DOCSTATUS = 1)",
        "SELECT SUM(QTY - PRODUCED_QTY) FROM TABPRODUCTION ORDER WHERE PRODUCTION_ITEM = '_Test FG Item' AND FG_WAREHOUSE = '_Test Warehouse 1 - _TC' AND STATUS <> 'Stopped' AND DOCSTATUS = 1 AND QTY > PRODUCED_QTY HAVING COUNT(QTY - PRODUCED_QTY) > COUNT(DISTINCT QTY - PRODUCED_QTY) AND COUNT(DISTINCT QTY - PRODUCED_QTY) > 1"
      ]
    },
    {
      "queryNo": 760,
      "pathList": [
        "SELECT VALUATION_RATE FROM TABITEM WHERE NOT (NAME = '_Test Item Home Desktop 100')",
        "SELECT VALUATION_RATE FROM TABITEM WHERE (NAME = '_Test Item Home Desktop 100')"
      ]
    },
    {
      "queryNo": 761,
      "pathList": [
        "SELECT PRODUCTION_ITEM FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00010')",
        "SELECT PRODUCTION_ITEM FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00010')"
      ]
    },
    {
      "queryNo": 762,
      "pathList": [
      ]
    },
    {
      "queryNo": 763,
      "pathList": [
        "SELECT * FROM TABCUSTOMER GROUP WHERE (LFT = 11) AND NOT (RGT = 11)",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (LFT = 10) AND NOT (RGT = 11)",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (LFT = 9) AND NOT (RGT = 11)",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (RGT = 12) AND NOT (LFT = 10)",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (RGT = 11) AND NOT (LFT = 10)",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (RGT = 10) AND NOT (LFT = 10)"
      ]
    },
    {
      "queryNo": 764,
      "pathList": [
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 INNER JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE NOT (T2.NEW_ITEM_CODE = '_Test Service Product Bundle')",
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 INNER JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE (T2.NEW_ITEM_CODE = '_Test Service Product Bundle')",
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 INNER JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE (T2.NEW_ITEM_CODE IS NULL)",
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 LEFT JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE (T2.NAME IS NULL) AND (T1.PARENT IS NOT NULL)",
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 LEFT JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE (T2.NAME IS NULL) AND (T1.PARENT IS NULL)",
        "SELECT T1.ITEM_CODE, T1.QTY, T1.UOM, T1.DESCRIPTION FROM TABPRODUCT BUNDLE ITEM T1 RIGHT JOIN TABPRODUCT BUNDLE T2 ON T1.PARENT = T2.NAME WHERE ((T1.PARENT IS NULL) AND (T2.NAME IS NOT NULL)) AND (T2.NEW_ITEM_CODE = '_Test Service Product Bundle')"
      ]
    },
    {
      "queryNo": 765,
      "pathList": [
        "SELECT MAX(char_length(NAME)) FROM TABTODO HAVING COUNT(char_length(NAME)) > COUNT(DISTINCT char_length(NAME)) AND COUNT(DISTINCT char_length(NAME)) > 1"
      ]
    },
    {
      "queryNo": 766,
      "pathList": [
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTFIELD = 'exploded_items') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE NOT (PARENTFIELD = 'exploded_items') AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('7fe4743b8b', '2ec698dee9'))",
        "SELECT NAME FROM TABBOM EXPLOSION ITEM WHERE (NAME IN ('7fe4743b8b', '2ec698dee9')) AND (PARENT = 'BOM-_Test PPT Item Sub B-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'exploded_items')"
      ]
    },
    {
      "queryNo": 767,
      "pathList": [
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAID_FROM IS NULL) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PARTY_TYPE = 'Customer') AND (PAID_FROM = 'Debtors - _TC') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PARTY_TYPE IS NULL) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PARTY = '_Test Customer') AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PARTY IS NULL) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE NOT (PAYMENT_TYPE = 'Receive') AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (PAYMENT_TYPE IS NULL) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (DOCSTATUS = 1) AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 2) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 1) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (DOCSTATUS = 0) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (UNALLOCATED_AMOUNT > 0)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = 1) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = 0) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1)",
        "SELECT 'Payment Entry' AS REFERENCE_TYPE, NAME AS REFERENCE_NAME, REMARKS, UNALLOCATED_AMOUNT AS AMOUNT FROM TABPAYMENT ENTRY WHERE (UNALLOCATED_AMOUNT = -1) AND (PAID_FROM = 'Debtors - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (PAYMENT_TYPE = 'Receive') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 768,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item for Drop Shipping')",
        "SELECT NAME FROM TABITEM GROUP WHERE (NAME = '_Test Item for Drop Shipping')"
      ]
    },
    {
      "queryNo": 769,
      "pathList": [
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT = 'PREC-00002') AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE NOT (PURCHASE_RECEIPT = 'PREC-00002') AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT IS NULL) AND (DOCSTATUS = 1)",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (PURCHASE_RECEIPT = 'PREC-00002')",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (PURCHASE_RECEIPT = 'PREC-00002')",
        "SELECT PR_DETAIL, QTY FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (PURCHASE_RECEIPT = 'PREC-00002')"
      ]
    },
    {
      "queryNo": 770,
      "pathList": [
        "SELECT OWNER FROM TABISSUE WHERE NOT (NAME = '_T-Issue-00001')",
        "SELECT OWNER FROM TABISSUE WHERE (NAME = '_T-Issue-00001')"
      ]
    },
    {
      "queryNo": 771,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME < 'B')",
        "SELECT NAME FROM TABUSER WHERE (NAME < 'B')"
      ]
    },
    {
      "queryNo": 772,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT = 'STE-00023') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = 'STE-00023') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = 'STE-00023') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'STE-00023') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'STE-00023') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'STE-00023') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('54bb6b7b05'))",
        "SELECT NAME FROM TABSTOCK ENTRY DETAIL WHERE (NAME IN ('54bb6b7b05')) AND (PARENT = 'STE-00023') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 773,
      "pathList": [
        "SELECT * FROM TABSTOCK RECONCILIATION WHERE NOT (NAME = 'SR/00002')",
        "SELECT * FROM TABSTOCK RECONCILIATION WHERE (NAME = 'SR/00002')"
      ]
    },
    {
      "queryNo": 774,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_DOCTYPE = 'ToDo') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE NOT (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_DOCTYPE = 'ToDo') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE (CONTENT_HASH IS NULL) AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_DOCTYPE = 'ToDo') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE NOT (NAME <> '1dbf08c29b') AND (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (ATTACHED_TO_DOCTYPE = 'ToDo') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE NOT (ATTACHED_TO_DOCTYPE = 'ToDo') AND (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE (ATTACHED_TO_DOCTYPE IS NULL) AND (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_NAME = 'dcfdc9b3b1')",
        "SELECT NAME FROM TABFILE WHERE NOT (ATTACHED_TO_NAME = 'dcfdc9b3b1') AND (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_DOCTYPE = 'ToDo')",
        "SELECT NAME FROM TABFILE WHERE (ATTACHED_TO_NAME IS NULL) AND (CONTENT_HASH = 'b10a8db164e0754105b7a99be72e3fe5') AND (NAME <> '1dbf08c29b') AND (ATTACHED_TO_DOCTYPE = 'ToDo')"
      ]
    },
    {
      "queryNo": 775,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE WHERE (USER_ID = 'Monthly_test_employee@salary.com') AND (STATUS = 'Active') AND (NAME <> 'EMP-0002')",
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (USER_ID = 'Monthly_test_employee@salary.com') AND (STATUS = 'Active') AND (NAME <> 'EMP-0002')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (USER_ID IS NULL) AND (STATUS = 'Active') AND (NAME <> 'EMP-0002')",
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (STATUS = 'Active') AND (USER_ID = 'Monthly_test_employee@salary.com') AND (NAME <> 'EMP-0002')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (STATUS IS NULL) AND (USER_ID = 'Monthly_test_employee@salary.com') AND (NAME <> 'EMP-0002')",
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (NAME <> 'EMP-0002') AND (USER_ID = 'Monthly_test_employee@salary.com') AND (STATUS = 'Active')"
      ]
    },
    {
      "queryNo": 776,
      "pathList": [
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST PURCHASE RECEIPT WHERE (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt') AND (RECEIPT_DOCUMENT = '_T-Purchase Receipt-00005')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt') AND (RECEIPT_DOCUMENT = '_T-Purchase Receipt-00005')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST PURCHASE RECEIPT WHERE (RECEIPT_DOCUMENT_TYPE IS NULL) AND (RECEIPT_DOCUMENT = '_T-Purchase Receipt-00005')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST PURCHASE RECEIPT WHERE NOT (RECEIPT_DOCUMENT = '_T-Purchase Receipt-00005') AND (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST PURCHASE RECEIPT WHERE (RECEIPT_DOCUMENT IS NULL) AND (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 777,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PINV-00006') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENT = 'PINV-00006') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Invoice') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Invoice') AND (PARENT = 'PINV-00006')"
      ]
    },
    {
      "queryNo": 778,
      "pathList": [
        "SELECT CREDIT_LIMIT FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT CREDIT_LIMIT FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 779,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (NAME IN ('c6ddfd123b', '3a91ce4b16')) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 780,
      "pathList": [
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test Service Product Bundle Item 1') AND (WAREHOUSE = NULL)",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Service Product Bundle Item 1') AND (WAREHOUSE = NULL)",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = NULL)",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = NULL) AND (ITEM_CODE = '_Test Service Product Bundle Item 1')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Service Product Bundle Item 1')"
      ]
    },
    {
      "queryNo": 781,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = '_Test Company') AND (ACCOUNT_NAME = 'Sales')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = '_Test Company') AND (ACCOUNT_NAME = 'Sales')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (ACCOUNT_NAME = 'Sales')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_NAME = 'Sales') AND (COMPANY = '_Test Company')",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_NAME IS NULL) AND (COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 782,
      "pathList": [
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (EMPLOYEE IS NULL) AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE ('2014-02-01' NOT BETWEEN FROM_DATE AND TO_DATE) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (TO_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE NOT (STATUS = 'Approved') AND (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (DOCSTATUS = 1)",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved')",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved')",
        "SELECT LEAVE_TYPE, HALF_DAY FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0001') AND ('2014-02-01' BETWEEN FROM_DATE AND TO_DATE) AND (STATUS = 'Approved')"
      ]
    },
    {
      "queryNo": 783,
      "pathList": [
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE (APPLIES_TO_ALL_DEPARTMENTS = 2) AND (COMPANY = '_Test Company')",
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE (APPLIES_TO_ALL_DEPARTMENTS = 1) AND (COMPANY = '_Test Company')",
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE (APPLIES_TO_ALL_DEPARTMENTS = 0) AND (COMPANY = '_Test Company')",
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE (COMPANY = '_Test Company') AND (APPLIES_TO_ALL_DEPARTMENTS = 1)",
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE NOT (COMPANY = '_Test Company') AND (APPLIES_TO_ALL_DEPARTMENTS = 1)",
        "SELECT NAME FROM TABLEAVE BLOCK LIST WHERE (COMPANY IS NULL) AND (APPLIES_TO_ALL_DEPARTMENTS = 1)"
      ]
    },
    {
      "queryNo": 784,
      "pathList": [
        "SELECT WAREHOUSE, PURCHASE_RATE FROM TABSERIAL NO WHERE NOT (NAME = 'SN001')",
        "SELECT WAREHOUSE, PURCHASE_RATE FROM TABSERIAL NO WHERE (NAME = 'SN001')"
      ]
    },
    {
      "queryNo": 785,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 24) AND (RGT > 24)",
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 23) AND (RGT > 24)",
        "SELECT NAME FROM TABITEM GROUP WHERE (LFT = 22) AND (RGT > 24)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 25) AND (LFT < 23)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 24) AND (LFT < 23)",
        "SELECT NAME FROM TABITEM GROUP WHERE (RGT = 23) AND (LFT < 23)"
      ]
    },
    {
      "queryNo": 786,
      "pathList": [
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')"
      ]
    },
    {
      "queryNo": 787,
      "pathList": [
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (TABPRODUCTION ORDER.STATUS NOT IN ('Draft', 'Not Started', 'In Process'))",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (TABPRODUCTION ORDER.STATUS IN ('Draft', 'Not Started', 'In Process'))",
        "SELECT NAME FROM TABPRODUCTION ORDER WHERE (TABPRODUCTION ORDER.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 788,
      "pathList": [
      ]
    },
    {
      "queryNo": 789,
      "pathList": [
      ]
    },
    {
      "queryNo": 790,
      "pathList": [
        "SELECT * FROM TABADDRESS WHERE NOT (NAME = '_Test Address for Customer-Office')",
        "SELECT * FROM TABADDRESS WHERE (NAME = '_Test Address for Customer-Office')"
      ]
    },
    {
      "queryNo": 791,
      "pathList": [
        "SELECT RESERVED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE NOT (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE IS NULL) AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE NOT (TABBIN.ITEM_CODE = '_Test Item') AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT RESERVED_QTY FROM TABBIN WHERE (TABBIN.ITEM_CODE IS NULL) AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 792,
      "pathList": [
        "SELECT * FROM TABREQUEST FOR QUOTATION WHERE NOT (NAME = 'RFQ-00001')",
        "SELECT * FROM TABREQUEST FOR QUOTATION WHERE (NAME = 'RFQ-00001')"
      ]
    },
    {
      "queryNo": 793,
      "pathList": [
        "SELECT NAME FROM TABTODO WHERE (OWNER = 'test1@example.com') AND (REFERENCE_NAME = 'EV00010') AND (REFERENCE_TYPE = 'Event')",
        "SELECT NAME FROM TABTODO WHERE NOT (OWNER = 'test1@example.com') AND (REFERENCE_NAME = 'EV00010') AND (REFERENCE_TYPE = 'Event')",
        "SELECT NAME FROM TABTODO WHERE (OWNER IS NULL) AND (REFERENCE_NAME = 'EV00010') AND (REFERENCE_TYPE = 'Event')",
        "SELECT NAME FROM TABTODO WHERE NOT (REFERENCE_NAME = 'EV00010') AND (OWNER = 'test1@example.com') AND (REFERENCE_TYPE = 'Event')",
        "SELECT NAME FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (OWNER = 'test1@example.com') AND (REFERENCE_TYPE = 'Event')",
        "SELECT NAME FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Event') AND (OWNER = 'test1@example.com') AND (REFERENCE_NAME = 'EV00010')",
        "SELECT NAME FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (OWNER = 'test1@example.com') AND (REFERENCE_NAME = 'EV00010')"
      ]
    },
    {
      "queryNo": 794,
      "pathList": [
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE IS NULL) AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (LEAVE_TYPE = '_Test Leave Type') AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (LEAVE_TYPE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (TO_DATE >= '2013-01-01') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (TO_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE <= '2015-12-31')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE NOT (FROM_DATE <= '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01')",
        "SELECT NAME FROM TABLEAVE ALLOCATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (TO_DATE >= '2013-01-01')"
      ]
    },
    {
      "queryNo": 795,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE (PUBLISHED = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE (PUBLISHED = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE (PUBLISHED = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE (ROUTE = 'test-route-000') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE NOT (ROUTE = 'test-route-000') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABHELP ARTICLE WHERE (ROUTE IS NULL) AND (PUBLISHED = 1)"
      ]
    },
    {
      "queryNo": 796,
      "pathList": [
      ]
    },
    {
      "queryNo": 797,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Item', '_Test Item Home Desktop 100')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Item', '_Test Item Home Desktop 100')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 2) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 1) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 0) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))"
      ]
    },
    {
      "queryNo": 798,
      "pathList": [
        "SELECT NAME, PAYMENT_GATEWAY, PAYMENT_ACCOUNT, MESSAGE FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 2)",
        "SELECT NAME, PAYMENT_GATEWAY, PAYMENT_ACCOUNT, MESSAGE FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 1)",
        "SELECT NAME, PAYMENT_GATEWAY, PAYMENT_ACCOUNT, MESSAGE FROM TABPAYMENT GATEWAY ACCOUNT WHERE (IS_DEFAULT = 0)"
      ]
    },
    {
      "queryNo": 799,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.STATUS IN ('Stopped')) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.STATUS IS NULL) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.DOCSTATUS = 2.0 + 1) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.DOCSTATUS = 2.0) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.DOCSTATUS = 2.0 - 1) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.PER_ORDERED < 100.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.PER_ORDERED = 100.0 + 1) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.PER_ORDERED = 100.0) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (TABMATERIAL REQUEST.PER_ORDERED = 100.0 - 1) AND (TABMATERIAL REQUEST.STATUS NOT IN ('Stopped')) AND (TABMATERIAL REQUEST.DOCSTATUS < 2.0)"
      ]
    },
    {
      "queryNo": 800,
      "pathList": [
        "SELECT ACCOUNT_TYPE FROM TABACCOUNT WHERE NOT (NAME = '_Test Write Off - _TC')",
        "SELECT ACCOUNT_TYPE FROM TABACCOUNT WHERE (NAME = '_Test Write Off - _TC')"
      ]
    },
    {
      "queryNo": 801,
      "pathList": [
        "SELECT ITEM_CODE, QTY FROM TABBOM SCRAP ITEM WHERE NOT (PARENT = 'BOM-_Test FG Item-001')",
        "SELECT ITEM_CODE, QTY FROM TABBOM SCRAP ITEM WHERE (PARENT = 'BOM-_Test FG Item-001')",
        "SELECT ITEM_CODE, QTY FROM TABBOM SCRAP ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 802,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABHOLIDAY LIST WHERE NOT (NAME = 'Salary Slip Test Holiday List')",
        "SELECT MODIFIED, DOCSTATUS FROM TABHOLIDAY LIST WHERE (NAME = 'Salary Slip Test Holiday List')"
      ]
    },
    {
      "queryNo": 803,
      "pathList": [
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE (PS.PROPERTY_TYPE = 'options') AND ((PS.FIELD_NAME IS NOT NULL)) AND (PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE NOT (PS.PROPERTY_TYPE = 'options') AND ((PS.FIELD_NAME IS NOT NULL)) AND (PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE (PS.PROPERTY_TYPE IS NULL) AND ((PS.FIELD_NAME IS NOT NULL)) AND (PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE (PS.FIELD_NAME IS NULL) AND (PS.PROPERTY_TYPE = 'options') AND (PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE NOT (PS.VALUE = 'Item Group') AND (PS.PROPERTY_TYPE = 'options') AND ((PS.FIELD_NAME IS NOT NULL))",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE (PS.VALUE IS NULL) AND (PS.PROPERTY_TYPE = 'options') AND ((PS.FIELD_NAME IS NOT NULL))",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE NOT (DT.NAME = PS.DOC_TYPE)) AND (PS.PROPERTY_TYPE = 'options' AND (PS.FIELD_NAME IS NOT NULL) AND PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (DT.NAME = PS.DOC_TYPE)) AND (PS.PROPERTY_TYPE = 'options' AND (PS.FIELD_NAME IS NOT NULL) AND PS.VALUE = 'Item Group')",
        "SELECT PS.DOC_TYPE AS PARENT, PS.FIELD_NAME AS FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = PS.DOC_TYPE) AS ISSINGLE FROM TABPROPERTY SETTER PS WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (PS.DOC_TYPE IS NULL)) AND (PS.PROPERTY_TYPE = 'options' AND (PS.FIELD_NAME IS NOT NULL) AND PS.VALUE = 'Item Group')"
      ]
    },
    {
      "queryNo": 804,
      "pathList": [
        "SELECT NAME FROM TABPACKING SLIP WHERE (DELIVERY_NOTE = 'DN-00002') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPACKING SLIP WHERE NOT (DELIVERY_NOTE = 'DN-00002') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPACKING SLIP WHERE (DELIVERY_NOTE IS NULL) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPACKING SLIP WHERE (DOCSTATUS = 2) AND (DELIVERY_NOTE = 'DN-00002')",
        "SELECT NAME FROM TABPACKING SLIP WHERE (DOCSTATUS = 1) AND (DELIVERY_NOTE = 'DN-00002')",
        "SELECT NAME FROM TABPACKING SLIP WHERE (DOCSTATUS = 0) AND (DELIVERY_NOTE = 'DN-00002')"
      ]
    },
    {
      "queryNo": 805,
      "pathList": [
        "SELECT SUPPLIER FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00014')",
        "SELECT SUPPLIER FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00014')"
      ]
    },
    {
      "queryNo": 806,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABWAREHOUSE WHERE NOT (NAME = 'All Warehouses - _TC1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABWAREHOUSE WHERE (NAME = 'All Warehouses - _TC1')"
      ]
    },
    {
      "queryNo": 808,
      "pathList": [
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE NOT (NAME = '61c8b5fe94')",
        "SELECT * FROM TABBOM EXPLOSION ITEM WHERE (NAME = '61c8b5fe94')"
      ]
    },
    {
      "queryNo": 809,
      "pathList": [
        "SELECT MAX(char_length(ASSIGNED_BY_FULL_NAME)) FROM TABTODO HAVING COUNT(char_length(ASSIGNED_BY_FULL_NAME)) > COUNT(DISTINCT char_length(ASSIGNED_BY_FULL_NAME)) AND COUNT(DISTINCT char_length(ASSIGNED_BY_FULL_NAME)) > 1"
      ]
    },
    {
      "queryNo": 810,
      "pathList": [
        "SELECT CREATE_ACCOUNT_UNDER FROM TABWAREHOUSE WHERE NOT (NAME = 'Finished Goods - _TC')",
        "SELECT CREATE_ACCOUNT_UNDER FROM TABWAREHOUSE WHERE (NAME = 'Finished Goods - _TC')"
      ]
    },
    {
      "queryNo": 811,
      "pathList": [
      ]
    },
    {
      "queryNo": 812,
      "pathList": [
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00005')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00005')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'DN-00005') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note')"
      ]
    },
    {
      "queryNo": 813,
      "pathList": [
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABEMAIL UNSUBSCRIBE WHERE NOT (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABEMAIL UNSUBSCRIBE WHERE (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABEMAIL UNSUBSCRIBE WHERE (REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 814,
      "pathList": [
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENTTYPE = 'User') AND (PARENT = 'Bimonthly_test_employee@salary.com') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'Bimonthly_test_employee@salary.com') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Bimonthly_test_employee@salary.com') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE NOT (PARENT = 'Bimonthly_test_employee@salary.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'defaults')",
        "SELECT * FROM TABDEFAULTVALUE WHERE NOT (PARENTFIELD = 'defaults') AND (PARENTTYPE = 'User') AND (PARENT = 'Bimonthly_test_employee@salary.com')",
        "SELECT * FROM TABDEFAULTVALUE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'User') AND (PARENT = 'Bimonthly_test_employee@salary.com')"
      ]
    },
    {
      "queryNo": 815,
      "pathList": [
        "SELECT VOUCHER_DETAIL_NO, SERIAL_NO, ACTUAL_QTY, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_NO = 'PREC-00001')",
        "SELECT VOUCHER_DETAIL_NO, SERIAL_NO, ACTUAL_QTY, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_NO = 'PREC-00001')",
        "SELECT VOUCHER_DETAIL_NO, SERIAL_NO, ACTUAL_QTY, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PREC-00001')",
        "SELECT VOUCHER_DETAIL_NO, SERIAL_NO, ACTUAL_QTY, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'PREC-00001') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT VOUCHER_DETAIL_NO, SERIAL_NO, ACTUAL_QTY, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 816,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.POSTING_DATE IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.FISCAL_YEAR IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.COMPANY = '_Test Company') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.COMPANY IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 2) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 1) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 0) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (NOT EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 11) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 10) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 9) AND (RGT <= 11) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 12) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 11) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 10) AND (LFT >= 10) AND (NAME = GLE.COST_CENTER)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (NAME = GLE.COST_CENTER) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = GLE.COST_CENTER) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (GLE.COST_CENTER IS NULL) AND (LFT >= 10) AND (RGT <= 11)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER) HAVING COUNT(GLE.DEBIT) > COUNT(DISTINCT GLE.DEBIT) AND COUNT(DISTINCT GLE.DEBIT) > 1",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT >= 10 AND RGT <= 11 AND NAME = GLE.COST_CENTER) HAVING COUNT(GLE.CREDIT) > COUNT(DISTINCT GLE.CREDIT) AND COUNT(DISTINCT GLE.CREDIT) > 1"
      ]
    },
    {
      "queryNo": 817,
      "pathList": [
      ]
    },
    {
      "queryNo": 818,
      "pathList": [
        "SELECT STATUS FROM TABCUSTOMER WHERE NOT (NAME = 'Party Status Test - 1')",
        "SELECT STATUS FROM TABCUSTOMER WHERE (NAME = 'Party Status Test - 1')"
      ]
    },
    {
      "queryNo": 819,
      "pathList": [
        "SELECT DOCSTATUS FROM TABPURCHASE INVOICE WHERE NOT (NAME = 'PINV-00001')",
        "SELECT DOCSTATUS FROM TABPURCHASE INVOICE WHERE (NAME = 'PINV-00001')"
      ]
    },
    {
      "queryNo": 820,
      "pathList": [
        "SELECT DEFAULT_EXPENSE_ACCOUNT FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DEFAULT_EXPENSE_ACCOUNT FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 821,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (SUPERVISOR IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (SUPERVISOR = '_T-Instructor-00001') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (SCHEDULE_DATE IS NULL) AND (SUPERVISOR = '_T-Instructor-00001') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME))) AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME > '3:00:00') AND (FROM_TIME < '4:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME > '3:00:00') AND (FROM_TIME < '4:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' < TO_TIME)) AND NOT (('4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME < '4:00:00') AND (FROM_TIME > '3:00:00') AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME > '3:00:00') AND (TO_TIME < '4:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME > '3:00:00') AND (TO_TIME < '4:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME)) AND NOT (('3:00:00' = FROM_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME < '4:00:00') AND (TO_TIME > '3:00:00') AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('3:00:00' > FROM_TIME) AND ('3:00:00' < TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' > FROM_TIME) AND ('3:00:00' < TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('3:00:00' < TO_TIME) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' < TO_TIME) AND ('3:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('3:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' = FROM_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('3:00:00' = FROM_TIME) AND ('4:00:00' = TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('3:00:00' = FROM_TIME) AND ('4:00:00' = TO_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('4:00:00' = TO_TIME) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' < TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('4:00:00' = TO_TIME) AND ('3:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT ((TO_TIME > '3:00:00' AND TO_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('3:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00')) AND NOT (('3:00:00' > FROM_TIME)) AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00023')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (NAME <> 'SH00023') AND (SUPERVISOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '3:00:00' AND FROM_TIME < '4:00:00') OR (TO_TIME > '3:00:00' AND TO_TIME < '4:00:00') OR ('3:00:00' > FROM_TIME AND '3:00:00' < TO_TIME) OR ('3:00:00' = FROM_TIME AND '4:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 822,
      "pathList": [
        "SELECT LFT, RGT FROM TABCUSTOMER GROUP WHERE NOT (NAME = 'All Customer Groups')",
        "SELECT LFT, RGT FROM TABCUSTOMER GROUP WHERE (NAME = 'All Customer Groups')"
      ]
    },
    {
      "queryNo": 823,
      "pathList": [
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (FROM_DATE < '2013-01-01') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (FROM_DATE < '2013-01-01') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (FROM_DATE IS NULL) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (NAME <> 'TR0006') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (FROM_DATE < '2013-01-01')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_CITY IS NOT NULL))) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_CITY IS NULL)) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((COMPANY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((COMPANY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_CITY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_CITY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((TAX_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((TAX_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND FROM_DATE < '2013-01-01' AND NAME <> 'TR0006')"
      ]
    },
    {
      "queryNo": 824,
      "pathList": [
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Payment Entry') AND (VOUCHER_NO = 'PE-00004')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Payment Entry') AND (VOUCHER_NO = 'PE-00004')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PE-00004')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'PE-00004') AND (VOUCHER_TYPE = 'Payment Entry')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Payment Entry')"
      ]
    },
    {
      "queryNo": 825,
      "pathList": [
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE (PARENTTYPE = 'Asset') AND (PARENT = 'Macbook Pro 1') AND (PARENTFIELD = 'schedules')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENTTYPE = 'Asset') AND (PARENT = 'Macbook Pro 1') AND (PARENTFIELD = 'schedules')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Macbook Pro 1') AND (PARENTFIELD = 'schedules')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENTFIELD = 'schedules') AND (PARENTTYPE = 'Asset') AND (PARENT = 'Macbook Pro 1')",
        "SELECT * FROM TABDEPRECIATION SCHEDULE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Asset') AND (PARENT = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 826,
      "pathList": [
        "SELECT IS_STOCK_ITEM, IS_SUB_CONTRACTED_ITEM, END_OF_LIFE, DISABLED FROM TABITEM WHERE NOT (NAME = '_Test FG Item')",
        "SELECT IS_STOCK_ITEM, IS_SUB_CONTRACTED_ITEM, END_OF_LIFE, DISABLED FROM TABITEM WHERE (NAME = '_Test FG Item')"
      ]
    },
    {
      "queryNo": 827,
      "pathList": [
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.DELIVERY_NOTE = 'DN-00031') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.DELIVERY_NOTE = 'DN-00031') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.DELIVERY_NOTE IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.DELIVERY_NOTE = 'DN-00031')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.DELIVERY_NOTE = 'DN-00031')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.DELIVERY_NOTE = 'DN-00031')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 LEFT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 RIGHT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.DELIVERY_NOTE = 'DN-00031')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 RIGHT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.DELIVERY_NOTE = 'DN-00031')"
      ]
    },
    {
      "queryNo": 828,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABGL ENTRY WHERE NOT (NAME = 'GL0000111')",
        "SELECT MODIFIED, DOCSTATUS FROM TABGL ENTRY WHERE (NAME = 'GL0000111')"
      ]
    },
    {
      "queryNo": 829,
      "pathList": [
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABDYNAMIC LINK WHERE NOT (LINK_DOCTYPE = 'Role')",
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABDYNAMIC LINK WHERE (LINK_DOCTYPE = 'Role')",
        "SELECT DISTINCT LINK_DOCTYPE, PARENTTYPE FROM TABDYNAMIC LINK WHERE (LINK_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 830,
      "pathList": [
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENT = 'DN-00017')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABDELIVERY NOTE ITEM WHERE (PARENT = 'DN-00017')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABDELIVERY NOTE ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 831,
      "pathList": [
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1') AND (((START_TIME BETWEEN '10:00:00' AND '20:00:00') OR (END_TIME BETWEEN '10:00:00' AND '20:00:00') OR ('10:00:00' BETWEEN START_TIME AND END_TIME)))",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE NOT (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1') AND (((START_TIME BETWEEN '10:00:00' AND '20:00:00') OR (END_TIME BETWEEN '10:00:00' AND '20:00:00') OR ('10:00:00' BETWEEN START_TIME AND END_TIME)))",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE (PARENT IS NULL) AND (NAME <> '3bd7c886e1') AND (((START_TIME BETWEEN '10:00:00' AND '20:00:00') OR (END_TIME BETWEEN '10:00:00' AND '20:00:00') OR ('10:00:00' BETWEEN START_TIME AND END_TIME)))",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE NOT (NAME <> '3bd7c886e1') AND (PARENT = '_Test Workstation 1') AND (((START_TIME BETWEEN '10:00:00' AND '20:00:00') OR (END_TIME BETWEEN '10:00:00' AND '20:00:00') OR ('10:00:00' BETWEEN START_TIME AND END_TIME)))",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE ((START_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND ((END_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (('10:00:00' NOT BETWEEN START_TIME AND END_TIME)) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE ((START_TIME BETWEEN '10:00:00' AND '20:00:00')) AND ((END_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (('10:00:00' NOT BETWEEN START_TIME AND END_TIME)) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE (START_TIME IS NULL) AND ((END_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE ((END_TIME BETWEEN '10:00:00' AND '20:00:00')) AND ((START_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (('10:00:00' NOT BETWEEN START_TIME AND END_TIME)) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE (END_TIME IS NULL) AND ((START_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')",
        "SELECT IDX FROM TABWORKSTATION WORKING HOUR WHERE (('10:00:00' BETWEEN START_TIME AND END_TIME)) AND ((START_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND ((END_TIME NOT BETWEEN '10:00:00' AND '20:00:00')) AND (PARENT = '_Test Workstation 1') AND (NAME <> '3bd7c886e1')"
      ]
    },
    {
      "queryNo": 832,
      "pathList": [
        "SELECT * FROM TABBIN WHERE NOT (NAME = 'BIN/0000017')",
        "SELECT * FROM TABBIN WHERE (NAME = 'BIN/0000017')"
      ]
    },
    {
      "queryNo": 833,
      "pathList": [
        "SELECT NAME FROM TABOPERATION WHERE NOT (NAME = '_Test Operation 1')",
        "SELECT NAME FROM TABOPERATION WHERE (NAME = '_Test Operation 1')"
      ]
    },
    {
      "queryNo": 834,
      "pathList": [
        "SELECT * FROM TABBLOGGER WHERE NOT (NAME = '_Test Blogger 1')",
        "SELECT * FROM TABBLOGGER WHERE (NAME = '_Test Blogger 1')"
      ]
    },
    {
      "queryNo": 835,
      "pathList": [
        "SELECT MAX(char_length(OWNER)) FROM TABUSER HAVING COUNT(char_length(OWNER)) > COUNT(DISTINCT char_length(OWNER)) AND COUNT(DISTINCT char_length(OWNER)) > 1"
      ]
    },
    {
      "queryNo": 836,
      "pathList": [
        "SELECT NAME, PAYMENT_GATEWAY, PAYMENT_ACCOUNT, MESSAGE FROM TABPAYMENT GATEWAY ACCOUNT WHERE NOT (NAME = '_Test Gateway - USD')",
        "SELECT NAME, PAYMENT_GATEWAY, PAYMENT_ACCOUNT, MESSAGE FROM TABPAYMENT GATEWAY ACCOUNT WHERE (NAME = '_Test Gateway - USD')"
      ]
    },
    {
      "queryNo": 837,
      "pathList": [
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'conditions')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE NOT (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'conditions')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'conditions')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE NOT (PARENT = '_Test Shipping Rule - India') AND (PARENTTYPE = 'Shipping Rule') AND (PARENTFIELD = 'conditions')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Shipping Rule') AND (PARENTFIELD = 'conditions')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE NOT (PARENTFIELD = 'conditions') AND (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India')",
        "SELECT * FROM TABSHIPPING RULE CONDITION WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India')"
      ]
    },
    {
      "queryNo": 838,
      "pathList": [
        "SELECT OPERATING_COST, QUANTITY FROM TABBOM WHERE NOT (NAME = 'BOM-_Test FG Item 2-001')",
        "SELECT OPERATING_COST, QUANTITY FROM TABBOM WHERE (NAME = 'BOM-_Test FG Item 2-001')"
      ]
    },
    {
      "queryNo": 839,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK RECONCILIATION WHERE NOT (NAME = 'SR/00003')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSTOCK RECONCILIATION WHERE (NAME = 'SR/00003')"
      ]
    },
    {
      "queryNo": 840,
      "pathList": [
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (ACCOUNT = 'Direct Expenses - 7cQ')",
        "SELECT NAME FROM TABGL ENTRY WHERE (ACCOUNT = 'Direct Expenses - 7cQ')",
        "SELECT NAME FROM TABGL ENTRY WHERE (ACCOUNT IS NULL)"
      ]
    },
    {
      "queryNo": 841,
      "pathList": [
        "SELECT WAREHOUSE FROM TABSERIAL NO WHERE NOT (NAME = 'ABCD00006')",
        "SELECT WAREHOUSE FROM TABSERIAL NO WHERE (NAME = 'ABCD00006')"
      ]
    },
    {
      "queryNo": 842,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE (PARENT = 'PE-00005') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'references') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (PARENT = 'PE-00005') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'references') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'references') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (PARENTTYPE = 'Payment Entry') AND (PARENT = 'PE-00005') AND (PARENTFIELD = 'references') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PE-00005') AND (PARENTFIELD = 'references') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (PARENTFIELD = 'references') AND (PARENT = 'PE-00005') AND (PARENTTYPE = 'Payment Entry') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PE-00005') AND (PARENTTYPE = 'Payment Entry') AND (NAME NOT IN ('8b27578551'))",
        "SELECT NAME FROM TABPAYMENT ENTRY REFERENCE WHERE (NAME IN ('8b27578551')) AND (PARENT = 'PE-00005') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'references')"
      ]
    },
    {
      "queryNo": 843,
      "pathList": [
        "SELECT COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = 'Wind Power LLC')",
        "SELECT COST_CENTER FROM TABCOMPANY WHERE (NAME = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 845,
      "pathList": [
        "SELECT CREDIT_LIMIT, CUSTOMER_GROUP FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer USD')",
        "SELECT CREDIT_LIMIT, CUSTOMER_GROUP FROM TABCUSTOMER WHERE (NAME = '_Test Customer USD')"
      ]
    },
    {
      "queryNo": 846,
      "pathList": [
        "SELECT MODIFIED FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00006')",
        "SELECT MODIFIED FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00006')"
      ]
    },
    {
      "queryNo": 847,
      "pathList": [
        "SELECT COUNTRY FROM TABADDRESS WHERE NOT (NAME = '_Test Address for Customer-Office')",
        "SELECT COUNTRY FROM TABADDRESS WHERE (NAME = '_Test Address for Customer-Office')"
      ]
    },
    {
      "queryNo": 848,
      "pathList": [
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE (APPEND_TO = 'Email Account') AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE NOT (APPEND_TO = 'Email Account') AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE (APPEND_TO IS NULL) AND (ENABLE_OUTGOING = 1)",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 2) AND (APPEND_TO = 'Email Account')",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 1) AND (APPEND_TO = 'Email Account')",
        "SELECT EMAIL_ID, ALWAYS_USE_ACCOUNT_EMAIL_ID_AS_SENDER, NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 0) AND (APPEND_TO = 'Email Account')"
      ]
    },
    {
      "queryNo": 849,
      "pathList": [
        "SELECT NAME FROM TABASSET WHERE NOT (NAME = 'Macbook Pro 1')",
        "SELECT NAME FROM TABASSET WHERE (NAME = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 850,
      "pathList": [
        "SELECT FIELDTYPE FROM TABCUSTOM FIELD WHERE NOT (NAME = 'User-test_custom_field')",
        "SELECT FIELDTYPE FROM TABCUSTOM FIELD WHERE (NAME = 'User-test_custom_field')"
      ]
    },
    {
      "queryNo": 851,
      "pathList": [
        "SELECT * FROM TABJOURNAL ENTRY WHERE NOT (NAME = '_T-Journal Entry-00002')",
        "SELECT * FROM TABJOURNAL ENTRY WHERE (NAME = '_T-Journal Entry-00002')"
      ]
    },
    {
      "queryNo": 852,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABASSET WHERE NOT (NAME = 'Macbook Pro 1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABASSET WHERE (NAME = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 853,
      "pathList": [
        "SELECT DEBIT FROM TABGL ENTRY WHERE (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00020') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE NOT (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00020') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (VOUCHER_NO = 'DN-00020') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'DN-00020') AND (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00020')",
        "SELECT DEBIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (ACCOUNT = '_Test Warehouse - _TC') AND (VOUCHER_NO = 'DN-00020')"
      ]
    },
    {
      "queryNo": 854,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPACKING SLIP WHERE NOT (DELIVERY_NOTE = 'DN-00031')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPACKING SLIP WHERE (DELIVERY_NOTE = 'DN-00031')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPACKING SLIP WHERE (DELIVERY_NOTE IS NULL)"
      ]
    },
    {
      "queryNo": 855,
      "pathList": [
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Fortnightly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'employees')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Fortnightly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'employees')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Fortnightly Salary Structure Test for Salary Slip') AND (PARENTFIELD = 'employees')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENT = 'Fortnightly Salary Structure Test for Salary Slip') AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Structure') AND (PARENTFIELD = 'employees')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (PARENTFIELD = 'employees') AND (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Fortnightly Salary Structure Test for Salary Slip')",
        "SELECT * FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Salary Structure') AND (PARENT = 'Fortnightly Salary Structure Test for Salary Slip')"
      ]
    },
    {
      "queryNo": 856,
      "pathList": [
        "SELECT OWNER FROM TABLEAD WHERE NOT (NAME = '_T-Lead-00004')",
        "SELECT OWNER FROM TABLEAD WHERE (NAME = '_T-Lead-00004')"
      ]
    },
    {
      "queryNo": 857,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.STATUS NOT IN ('Completed', 'Closed')) AND (TABSALES ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.STATUS IN ('Completed', 'Closed')) AND (TABSALES ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.STATUS IS NULL) AND (TABSALES ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.DOCSTATUS = 2.0 + 1) AND (TABSALES ORDER.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.DOCSTATUS = 2.0) AND (TABSALES ORDER.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.DOCSTATUS = 2.0 - 1) AND (TABSALES ORDER.STATUS NOT IN ('Completed', 'Closed'))"
      ]
    },
    {
      "queryNo": 858,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE NOT (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.SUPPLIER IS NULL) AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) = 2.0 + 1) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) = 2.0) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) = 2.0 - 1) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0 + 1) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (TABPURCHASE INVOICE.OUTSTANDING_AMOUNT = 0.0 - 1) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1') AND (IFNULL(TABPURCHASE INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE (((TABPURCHASE INVOICE.DOCSTATUS IS NOT NULL))) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1' AND TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABPURCHASE INVOICE WHERE ((TABPURCHASE INVOICE.DOCSTATUS IS NULL)) AND (TABPURCHASE INVOICE.SUPPLIER = '_Test Supplier 1' AND TABPURCHASE INVOICE.OUTSTANDING_AMOUNT > 0.0)"
      ]
    },
    {
      "queryNo": 859,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE NOT (FILE_NAME = 'hello.txt')",
        "SELECT NAME FROM TABFILE WHERE (FILE_NAME = 'hello.txt')",
        "SELECT NAME FROM TABFILE WHERE (FILE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 860,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00008')",
        "SELECT MODIFIED, DOCSTATUS FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00008')"
      ]
    },
    {
      "queryNo": 861,
      "pathList": [
        "SELECT DISTINCT DELIVERY_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE NOT (DELIVERY_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT DELIVERY_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE (DELIVERY_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT DELIVERY_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE (DELIVERY_DOCUMENT_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 862,
      "pathList": [
        "SELECT DEFAULT_PRICE_LIST FROM TABCUSTOMER GROUP WHERE NOT (NAME = '_Test Customer Group')",
        "SELECT DEFAULT_PRICE_LIST FROM TABCUSTOMER GROUP WHERE (NAME = '_Test Customer Group')"
      ]
    },
    {
      "queryNo": 863,
      "pathList": [
        "SELECT CURRENCY FROM TABSALES INVOICE WHERE NOT (NAME = '_T-Sales Invoice-00002')",
        "SELECT CURRENCY FROM TABSALES INVOICE WHERE (NAME = '_T-Sales Invoice-00002')"
      ]
    },
    {
      "queryNo": 864,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Analytics', 'Fleet Manager', 'Item Manager', 'Maintenance Manager', '_Test Role', 'Newsletter Manager', 'Purchase Master Manager', 'Sales Manager', 'Stock User', 'Website Manager', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Analytics', 'Fleet Manager', 'Item Manager', 'Maintenance Manager', '_Test Role', 'Newsletter Manager', 'Purchase Master Manager', 'Sales Manager', 'Stock User', 'Website Manager', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Analytics', 'Fleet Manager', 'Item Manager', 'Maintenance Manager', '_Test Role', 'Newsletter Manager', 'Purchase Master Manager', 'Sales Manager', 'Stock User', 'Website Manager', '_Test Role 2'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Analytics', 'Fleet Manager', 'Item Manager', 'Maintenance Manager', '_Test Role', 'Newsletter Manager', 'Purchase Master Manager', 'Sales Manager', 'Stock User', 'Website Manager', '_Test Role 2')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Analytics', 'Fleet Manager', 'Item Manager', 'Maintenance Manager', '_Test Role', 'Newsletter Manager', 'Purchase Master Manager', 'Sales Manager', 'Stock User', 'Website Manager', '_Test Role 2')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 865,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Item for Drop Shipping')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Item for Drop Shipping')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 2) AND (NAME IN ('_Test Item for Drop Shipping'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 1) AND (NAME IN ('_Test Item for Drop Shipping'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 0) AND (NAME IN ('_Test Item for Drop Shipping'))"
      ]
    },
    {
      "queryNo": 866,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABADDRESS TEMPLATE WHERE NOT (NAME = 'Brazil')",
        "SELECT MODIFIED, DOCSTATUS FROM TABADDRESS TEMPLATE WHERE (NAME = 'Brazil')"
      ]
    },
    {
      "queryNo": 867,
      "pathList": [
        "SELECT BUYING, SELLING, CURRENCY FROM TABPRICE LIST WHERE (ENABLED = 2) AND (NAME = '_Test Price List Rest of the World')",
        "SELECT BUYING, SELLING, CURRENCY FROM TABPRICE LIST WHERE (ENABLED = 1) AND (NAME = '_Test Price List Rest of the World')",
        "SELECT BUYING, SELLING, CURRENCY FROM TABPRICE LIST WHERE (ENABLED = 0) AND (NAME = '_Test Price List Rest of the World')",
        "SELECT BUYING, SELLING, CURRENCY FROM TABPRICE LIST WHERE (NAME = '_Test Price List Rest of the World') AND (ENABLED = 1)",
        "SELECT BUYING, SELLING, CURRENCY FROM TABPRICE LIST WHERE NOT (NAME = '_Test Price List Rest of the World') AND (ENABLED = 1)"
      ]
    },
    {
      "queryNo": 868,
      "pathList": [
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PARENTTYPE = 'Timesheet') AND (PARENT = 'TS-00002') AND (PARENTFIELD = 'time_logs')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE NOT (PARENTTYPE = 'Timesheet') AND (PARENT = 'TS-00002') AND (PARENTFIELD = 'time_logs')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'TS-00002') AND (PARENTFIELD = 'time_logs')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE NOT (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE NOT (PARENTFIELD = 'time_logs') AND (PARENTTYPE = 'Timesheet') AND (PARENT = 'TS-00002')",
        "SELECT * FROM TABTIMESHEET DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Timesheet') AND (PARENT = 'TS-00002')"
      ]
    },
    {
      "queryNo": 869,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE NOT (NAME = 'Test Warehouse for Merging 2 - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (NAME = 'Test Warehouse for Merging 2 - _TC')"
      ]
    },
    {
      "queryNo": 870,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM WHERE NOT (NAME = '_Test PPT Item SC B')",
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM WHERE (NAME = '_Test PPT Item SC B')"
      ]
    },
    {
      "queryNo": 871,
      "pathList": [
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.OWNER = 'test@example.com') AND (TABDESKTOP ICON.STANDARD = 0.0)",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE NOT (TABDESKTOP ICON.OWNER = 'test@example.com') AND (TABDESKTOP ICON.STANDARD = 0.0)",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.OWNER IS NULL) AND (TABDESKTOP ICON.STANDARD = 0.0)",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 0.0 + 1) AND (TABDESKTOP ICON.OWNER = 'test@example.com')",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 0.0) AND (TABDESKTOP ICON.OWNER = 'test@example.com')",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 0.0 - 1) AND (TABDESKTOP ICON.OWNER = 'test@example.com')"
      ]
    },
    {
      "queryNo": 872,
      "pathList": [
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_NAME = '_Test Customer') AND (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE NOT (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_NAME = '_Test Customer') AND (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE (TABDYNAMIC LINK.PARENTTYPE IS NULL) AND (TABDYNAMIC LINK.LINK_NAME = '_Test Customer') AND (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE NOT (TABDYNAMIC LINK.LINK_NAME = '_Test Customer') AND (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE (TABDYNAMIC LINK.LINK_NAME IS NULL) AND (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE NOT (TABDYNAMIC LINK.LINK_DOCTYPE = 'Customer') AND (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_NAME = '_Test Customer')",
        "SELECT PARENT FROM TABDYNAMIC LINK WHERE (TABDYNAMIC LINK.LINK_DOCTYPE IS NULL) AND (TABDYNAMIC LINK.PARENTTYPE = 'Address') AND (TABDYNAMIC LINK.LINK_NAME = '_Test Customer')"
      ]
    },
    {
      "queryNo": 873,
      "pathList": [
        "SELECT DOCSTATUS, INCOME_ACCOUNT FROM TABITEM WHERE NOT (NAME = '_Test Serialized Item With Series')",
        "SELECT DOCSTATUS, INCOME_ACCOUNT FROM TABITEM WHERE (NAME = '_Test Serialized Item With Series')"
      ]
    },
    {
      "queryNo": 874,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE (NAME = 'QTN-00001') AND (ORDER_TYPE = 'Sales')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00001') AND (ORDER_TYPE = 'Sales')",
        "SELECT NAME FROM TABQUOTATION WHERE NOT (ORDER_TYPE = 'Sales') AND (NAME = 'QTN-00001')",
        "SELECT NAME FROM TABQUOTATION WHERE (ORDER_TYPE IS NULL) AND (NAME = 'QTN-00001')"
      ]
    },
    {
      "queryNo": 875,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDEPRECIATION SCHEDULE WHERE NOT (JOURNAL_ENTRY = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDEPRECIATION SCHEDULE WHERE (JOURNAL_ENTRY = 'JV-00024')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDEPRECIATION SCHEDULE WHERE (JOURNAL_ENTRY IS NULL)"
      ]
    },
    {
      "queryNo": 876,
      "pathList": [
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (NAME = '624d3b0343')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE (NAME = '624d3b0343')"
      ]
    },
    {
      "queryNo": 877,
      "pathList": [
        "SELECT OWNER FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00008')",
        "SELECT OWNER FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00008')"
      ]
    },
    {
      "queryNo": 878,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABDOCSHARE WHERE NOT (NAME = '96d68d85f1')",
        "SELECT MODIFIED, DOCSTATUS FROM TABDOCSHARE WHERE (NAME = '96d68d85f1')"
      ]
    },
    {
      "queryNo": 879,
      "pathList": [
      ]
    },
    {
      "queryNo": 880,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (COMPANY = '_Test Company 1')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer') AND (COMPANY = '_Test Company 1')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY_TYPE IS NULL) AND (PARTY = '_Test Customer') AND (COMPANY = '_Test Company 1')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY = '_Test Customer') AND (PARTY_TYPE = 'Customer') AND (COMPANY = '_Test Company 1')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY IS NULL) AND (PARTY_TYPE = 'Customer') AND (COMPANY = '_Test Company 1')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (COMPANY = '_Test Company 1') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (COMPANY IS NULL) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY WHERE PARTY_TYPE = 'Customer' AND PARTY = '_Test Customer' AND COMPANY = '_Test Company 1' HAVING COUNT(DEBIT) > COUNT(DISTINCT DEBIT) AND COUNT(DISTINCT DEBIT) > 1",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY WHERE PARTY_TYPE = 'Customer' AND PARTY = '_Test Customer' AND COMPANY = '_Test Company 1' HAVING COUNT(CREDIT) > COUNT(DISTINCT CREDIT) AND COUNT(DISTINCT CREDIT) > 1"
      ]
    },
    {
      "queryNo": 881,
      "pathList": [
        "SELECT NAME FROM TABISSUE WHERE NOT (NAME = '_T-Issue-00001')",
        "SELECT NAME FROM TABISSUE WHERE (NAME = '_T-Issue-00001')"
      ]
    },
    {
      "queryNo": 882,
      "pathList": [
        "SELECT * FROM TABDESKTOP ICON WHERE NOT (OWNER = 'test@example.com')",
        "SELECT * FROM TABDESKTOP ICON WHERE (OWNER = 'test@example.com')",
        "SELECT * FROM TABDESKTOP ICON WHERE (OWNER IS NULL)",
        "SELECT MAX(IDX) FROM TABDESKTOP ICON WHERE OWNER = 'test@example.com' HAVING COUNT(IDX) > COUNT(DISTINCT IDX) AND COUNT(DISTINCT IDX) > 1"
      ]
    },
    {
      "queryNo": 883,
      "pathList": [
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (UOM = '_Test UOM') AND (PARENT = '_Test Serialized Item')",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE NOT (UOM = '_Test UOM') AND (PARENT = '_Test Serialized Item')",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (UOM IS NULL) AND (PARENT = '_Test Serialized Item')",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE NOT (PARENT = '_Test Serialized Item') AND (UOM = '_Test UOM')",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (PARENT IS NULL) AND (UOM = '_Test UOM')"
      ]
    },
    {
      "queryNo": 884,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (TABUSER.THREAD_NOTIFY = 0.0 + 1)",
        "SELECT NAME FROM TABUSER WHERE (TABUSER.THREAD_NOTIFY = 0.0)",
        "SELECT NAME FROM TABUSER WHERE (TABUSER.THREAD_NOTIFY = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 885,
      "pathList": [
        "SELECT NAME FROM TABPROGRAM WHERE NOT (NAME = '_Test Program')",
        "SELECT NAME FROM TABPROGRAM WHERE (NAME = '_Test Program')"
      ]
    },
    {
      "queryNo": 886,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group B')",
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM GROUP WHERE (NAME = '_Test Item Group B')"
      ]
    },
    {
      "queryNo": 887,
      "pathList": [
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE (PARENTTYPE = 'Bank Reconciliation') AND (PARENT = 'Bank Reconciliation') AND (PARENTFIELD = 'payment_entries')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE NOT (PARENTTYPE = 'Bank Reconciliation') AND (PARENT = 'Bank Reconciliation') AND (PARENTFIELD = 'payment_entries')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Bank Reconciliation') AND (PARENTFIELD = 'payment_entries')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE NOT (PARENT = 'Bank Reconciliation') AND (PARENTTYPE = 'Bank Reconciliation') AND (PARENTFIELD = 'payment_entries')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Bank Reconciliation') AND (PARENTFIELD = 'payment_entries')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE NOT (PARENTFIELD = 'payment_entries') AND (PARENTTYPE = 'Bank Reconciliation') AND (PARENT = 'Bank Reconciliation')",
        "SELECT * FROM TABBANK RECONCILIATION DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Bank Reconciliation') AND (PARENT = 'Bank Reconciliation')"
      ]
    },
    {
      "queryNo": 888,
      "pathList": [
        "SELECT DEFAULT_EXPENSE_ACCOUNT, COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DEFAULT_EXPENSE_ACCOUNT, COST_CENTER FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 889,
      "pathList": [
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE (IFNULL(TABPROPERTY SETTER.PROPERTY, '') IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType') AND (TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE (IFNULL(TABPROPERTY SETTER.PROPERTY, '') NOT IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType') AND (TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE NOT (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType') AND (IFNULL(TABPROPERTY SETTER.PROPERTY, '') IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE (TABPROPERTY SETTER.DOC_TYPE IS NULL) AND (IFNULL(TABPROPERTY SETTER.PROPERTY, '') IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE NOT (TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField') AND (IFNULL(TABPROPERTY SETTER.PROPERTY, '') IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE (TABPROPERTY SETTER.DOCTYPE_OR_FIELD IS NULL) AND (IFNULL(TABPROPERTY SETTER.PROPERTY, '') IN ('precision', 'length', 'unique')) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE (((TABPROPERTY SETTER.PROPERTY IS NOT NULL))) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType' AND TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')",
        "SELECT FIELD_NAME, PROPERTY, VALUE FROM TABPROPERTY SETTER WHERE ((TABPROPERTY SETTER.PROPERTY IS NULL)) AND (TABPROPERTY SETTER.DOC_TYPE = 'Some DocType' AND TABPROPERTY SETTER.DOCTYPE_OR_FIELD = 'DocField')"
      ]
    },
    {
      "queryNo": 890,
      "pathList": [
        "SELECT DEFAULT_INCOME_ACCOUNT FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DEFAULT_INCOME_ACCOUNT FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 891,
      "pathList": [
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE NOT (ITEM.ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.ITEM_CODE IS NULL)",
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ LEFT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.PARENT IS NULL) AND (MAT_REQ.NAME IS NOT NULL)",
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ RIGHT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE ((MAT_REQ.NAME IS NULL) AND (ITEM.PARENT IS NOT NULL)) AND (ITEM.ITEM_CODE = '_Test PPT Item Sub B')",
        "SELECT ITEM.QTY AS QTY FROM TABMATERIAL REQUEST MAT_REQ RIGHT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE ((MAT_REQ.NAME IS NULL) AND (ITEM.PARENT IS NULL)) AND (ITEM.ITEM_CODE = '_Test PPT Item Sub B')"
      ]
    },
    {
      "queryNo": 892,
      "pathList": [
        "SELECT NAME FROM TABDOCPERM WHERE (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE NOT (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE NOT (PARENTTYPE = 'DocType') AND (PARENT = 'ToDo') AND (PARENTFIELD = 'permissions') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'ToDo') AND (PARENTFIELD = 'permissions') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE NOT (PARENTFIELD = 'permissions') AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (NAME NOT IN ('b4d5eb8bf3', '88fa17305d'))",
        "SELECT NAME FROM TABDOCPERM WHERE (NAME IN ('b4d5eb8bf3', '88fa17305d')) AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'permissions')"
      ]
    },
    {
      "queryNo": 893,
      "pathList": [
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (DISABLED = 1) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (DISABLED = -1) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (HAS_VARIANTS = 1) AND (DISABLED = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (HAS_VARIANTS = 0) AND (DISABLED = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (HAS_VARIANTS = -1) AND (DISABLED = 0) AND (IS_SALES_ITEM = 1) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (IS_SALES_ITEM = 2) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (IS_SALES_ITEM = 1) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (IS_SALES_ITEM = 0) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (ITEM_GROUP IN ('_Test Item Group'))",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (ITEM_GROUP IN ('_Test Item Group')) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1)",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (ITEM_GROUP NOT IN ('_Test Item Group')) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1)",
        "SELECT NAME, ITEM_CODE, ITEM_NAME, DESCRIPTION, ITEM_GROUP, EXPENSE_ACCOUNT, HAS_BATCH_NO, HAS_SERIAL_NO, EXPENSE_ACCOUNT, SELLING_COST_CENTER, STOCK_UOM, IMAGE, DEFAULT_WAREHOUSE, IS_STOCK_ITEM, BARCODE FROM TABITEM WHERE (ITEM_GROUP IS NULL) AND (DISABLED = 0) AND (HAS_VARIANTS = 0) AND (IS_SALES_ITEM = 1)"
      ]
    },
    {
      "queryNo": 894,
      "pathList": [
        "SELECT * FROM TABSERIAL NO WHERE (NAME NOT IN ('ABCD00001', 'ABCD00002'))",
        "SELECT * FROM TABSERIAL NO WHERE (NAME IN ('ABCD00001', 'ABCD00002'))",
        "SELECT AVG(PURCHASE_RATE) FROM TABSERIAL NO WHERE NAME IN ('ABCD00001', 'ABCD00002') HAVING COUNT(PURCHASE_RATE) > COUNT(DISTINCT PURCHASE_RATE) AND COUNT(DISTINCT PURCHASE_RATE) > 1"
      ]
    },
    {
      "queryNo": 895,
      "pathList": [
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 2) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 0) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 2) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 1) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 0) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST = 'DN-00015') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE NOT (PAR.RETURN_AGAINST = 'DN-00015') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST IS NULL) AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD LEFT JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NOT NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD LEFT JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD RIGHT JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE ((CHILD.PARENT IS NULL) AND (PAR.NAME IS NOT NULL)) AND (PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'DN-00015') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'DN-00015' GROUP BY CHILD.ITEM_CODE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'DN-00015' HAVING count(DISTINCT CHILD.ITEM_CODE) > 1",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABDELIVERY NOTE ITEM CHILD INNER JOIN TABDELIVERY NOTE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'DN-00015' GROUP BY CHILD.ITEM_CODE HAVING COUNT(ABS(CHILD.QTY)) > COUNT(DISTINCT ABS(CHILD.QTY)) AND COUNT(DISTINCT ABS(CHILD.QTY)) > 1"
      ]
    },
    {
      "queryNo": 896,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00034')",
        "SELECT NAME FROM TABSALES ORDER WHERE (NAME = 'SO-00034')"
      ]
    },
    {
      "queryNo": 897,
      "pathList": [
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENTTYPE = 'Supplier Quotation') AND (PARENT = 'SQTN-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENTTYPE = 'Supplier Quotation') AND (PARENT = 'SQTN-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SQTN-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENT = 'SQTN-00003') AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Supplier Quotation') AND (PARENT = 'SQTN-00003')",
        "SELECT * FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Supplier Quotation') AND (PARENT = 'SQTN-00003')"
      ]
    },
    {
      "queryNo": 898,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (ROOM IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (ROOM = 'RM0001') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (SCHEDULE_DATE IS NULL) AND (ROOM = 'RM0001') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND NOT (('2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (FROM_TIME < '2:00:00') AND (FROM_TIME > '1:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND NOT (('1:00:00' = FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (TO_TIME < '2:00:00') AND (TO_TIME > '1:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('1:00:00' < TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('1:00:00' < TO_TIME) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (FROM_TIME IS NULL) AND ('2:00:00' = TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT ('2:00:00' = TO_TIME) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE (TO_TIME IS NULL) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00001')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABASSESSMENT PLAN WHERE NOT (NAME <> 'SH00001') AND (ROOM = 'RM0001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 899,
      "pathList": [
        "SELECT MAX(RGT) FROM TABITEM GROUP HAVING COUNT(RGT) > COUNT(DISTINCT RGT) AND COUNT(DISTINCT RGT) > 1"
      ]
    },
    {
      "queryNo": 900,
      "pathList": [
        "SELECT CURRENCY FROM TABBOM WHERE NOT (NAME = 'BOM-_Test Item Home Desktop Manufactured-001')",
        "SELECT CURRENCY FROM TABBOM WHERE (NAME = 'BOM-_Test Item Home Desktop Manufactured-001')"
      ]
    },
    {
      "queryNo": 901,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABEVENT WHERE NOT (NAME = 'EV00018')",
        "SELECT MODIFIED, DOCSTATUS FROM TABEVENT WHERE (NAME = 'EV00018')"
      ]
    },
    {
      "queryNo": 902,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE NOT (NAME = 'Administrator')",
        "SELECT NAME FROM TABROLE WHERE (NAME = 'Administrator')"
      ]
    },
    {
      "queryNo": 903,
      "pathList": [
        "SELECT OWNER FROM TABTASK WHERE NOT (NAME = 'TASK00011')",
        "SELECT OWNER FROM TABTASK WHERE (NAME = 'TASK00011')"
      ]
    },
    {
      "queryNo": 904,
      "pathList": [
        "SELECT * FROM TABBOM WHERE NOT (NAME = 'BOM-_Test Variant Item-001')",
        "SELECT * FROM TABBOM WHERE (NAME = 'BOM-_Test Variant Item-001')"
      ]
    },
    {
      "queryNo": 905,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE (SHOW_IN_WEBSITE = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE (SHOW_IN_WEBSITE = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE (SHOW_IN_WEBSITE = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE NOT (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM WHERE (ROUTE IS NULL) AND (SHOW_IN_WEBSITE = 1)"
      ]
    },
    {
      "queryNo": 906,
      "pathList": [
        "SELECT MODIFIED FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00007')",
        "SELECT MODIFIED FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00007')"
      ]
    },
    {
      "queryNo": 907,
      "pathList": [
        "SELECT * FROM TABCOST CENTER WHERE (LFT = 15) AND NOT (RGT = 15)",
        "SELECT * FROM TABCOST CENTER WHERE (LFT = 14) AND NOT (RGT = 15)",
        "SELECT * FROM TABCOST CENTER WHERE (LFT = 13) AND NOT (RGT = 15)",
        "SELECT * FROM TABCOST CENTER WHERE (RGT = 16) AND NOT (LFT = 14)",
        "SELECT * FROM TABCOST CENTER WHERE (RGT = 15) AND NOT (LFT = 14)",
        "SELECT * FROM TABCOST CENTER WHERE (RGT = 14) AND NOT (LFT = 14)"
      ]
    },
    {
      "queryNo": 908,
      "pathList": [
        "SELECT IS_GROUP, COMPANY, REPORT_TYPE FROM TABACCOUNT WHERE NOT (NAME = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT IS_GROUP, COMPANY, REPORT_TYPE FROM TABACCOUNT WHERE (NAME = '_Test Account Cost for Goods Sold - _TC')"
      ]
    },
    {
      "queryNo": 909,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (IFNULL(TABPURCHASE ORDER.STATUS, '') IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0) AND (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) = 2.0 + 1) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) = 2.0) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) = 2.0 - 1) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE NOT (TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country') AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.SUPPLIER IS NULL) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (((TABPURCHASE ORDER.STATUS IS NOT NULL))) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0 AND TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE ((TABPURCHASE ORDER.STATUS IS NULL)) AND (IFNULL(TABPURCHASE ORDER.DOCSTATUS, 0) < 2.0 AND TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (((TABPURCHASE ORDER.DOCSTATUS IS NOT NULL))) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed') AND TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE ((TABPURCHASE ORDER.DOCSTATUS IS NULL)) AND (IFNULL(TABPURCHASE ORDER.STATUS, '') NOT IN ('Completed', 'Closed') AND TABPURCHASE ORDER.SUPPLIER = '_Test Supplier with Country')"
      ]
    },
    {
      "queryNo": 910,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE NOT (AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE (AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE (AGAINST_SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 911,
      "pathList": [
      ]
    },
    {
      "queryNo": 912,
      "pathList": [
        "SELECT NAME FROM TABSALARY COMPONENT WHERE NOT (NAME = 'TDS')",
        "SELECT NAME FROM TABSALARY COMPONENT WHERE (NAME = 'TDS')"
      ]
    },
    {
      "queryNo": 913,
      "pathList": [
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IN ('STE-00024')) AND (ITEM_CODE = '_Test FG Item') AND (IFNULL(S_WAREHOUSE, '') = '')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENT NOT IN ('STE-00024')) AND (ITEM_CODE = '_Test FG Item') AND (IFNULL(S_WAREHOUSE, '') = '')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (ITEM_CODE = '_Test FG Item') AND (IFNULL(S_WAREHOUSE, '') = '')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (ITEM_CODE = '_Test FG Item') AND (PARENT IN ('STE-00024')) AND (IFNULL(S_WAREHOUSE, '') = '')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (ITEM_CODE IS NULL) AND (PARENT IN ('STE-00024')) AND (IFNULL(S_WAREHOUSE, '') = '')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (IFNULL(S_WAREHOUSE, '') = '') AND (PARENT IN ('STE-00024')) AND (ITEM_CODE = '_Test FG Item')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (((S_WAREHOUSE IS NOT NULL))) AND (PARENT IN ('STE-00024') AND ITEM_CODE = '_Test FG Item')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE ((S_WAREHOUSE IS NULL)) AND (PARENT IN ('STE-00024') AND ITEM_CODE = '_Test FG Item')",
        "SELECT SUM(TRANSFER_QTY) FROM TABSTOCK ENTRY DETAIL WHERE PARENT IN ('STE-00024') AND ITEM_CODE = '_Test FG Item' AND IFNULL(S_WAREHOUSE, '') = '' HAVING COUNT(TRANSFER_QTY) > COUNT(DISTINCT TRANSFER_QTY) AND COUNT(DISTINCT TRANSFER_QTY) > 1"
      ]
    },
    {
      "queryNo": 914,
      "pathList": [
        "SELECT PRODUCED_QTY FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00002')",
        "SELECT PRODUCED_QTY FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00002')"
      ]
    },
    {
      "queryNo": 915,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL = 'd7515f6c54') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE NOT (DN_DETAIL = 'd7515f6c54') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DN_DETAIL IS NULL) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 2) AND (DN_DETAIL = 'd7515f6c54')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 1) AND (DN_DETAIL = 'd7515f6c54')",
        "SELECT * FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 0) AND (DN_DETAIL = 'd7515f6c54')",
        "SELECT SUM(AMOUNT) FROM TABSALES INVOICE ITEM WHERE DN_DETAIL = 'd7515f6c54' AND DOCSTATUS = 1 HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 916,
      "pathList": [
        "SELECT NAME FROM TABDESKTOP ICON WHERE (MODULE_NAME = 'Accounts') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (MODULE_NAME = 'Accounts') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (MODULE_NAME IS NULL) AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 2) AND (MODULE_NAME = 'Accounts')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 1) AND (MODULE_NAME = 'Accounts')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 0) AND (MODULE_NAME = 'Accounts')"
      ]
    },
    {
      "queryNo": 917,
      "pathList": [
        "SELECT MAX(char_length(REPEAT_ON)) FROM TABEVENT HAVING COUNT(char_length(REPEAT_ON)) > COUNT(DISTINCT char_length(REPEAT_ON)) AND COUNT(DISTINCT char_length(REPEAT_ON)) > 1"
      ]
    },
    {
      "queryNo": 918,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 919,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE NOT (JOURNAL_ENTRY_FOR_SCRAP = '_T-Journal Entry-00004')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (JOURNAL_ENTRY_FOR_SCRAP = '_T-Journal Entry-00004')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (JOURNAL_ENTRY_FOR_SCRAP IS NULL)"
      ]
    },
    {
      "queryNo": 920,
      "pathList": [
        "SELECT CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer 1')",
        "SELECT CUSTOMER_GROUP, TERRITORY FROM TABCUSTOMER WHERE (NAME = '_Test Customer 1')"
      ]
    },
    {
      "queryNo": 921,
      "pathList": [
        "SELECT * FROM TABSALES ORDER ITEM WHERE (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00032') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE NOT (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00032') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SO-00032') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE NOT (PARENT = 'SO-00032') AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00032')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Order') AND (PARENT = 'SO-00032')"
      ]
    },
    {
      "queryNo": 922,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE (SHOW_IN_WEBSITE = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE (SHOW_IN_WEBSITE = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE (SHOW_IN_WEBSITE = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE NOT (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSALES PARTNER WHERE (ROUTE IS NULL) AND (SHOW_IN_WEBSITE = 1)"
      ]
    },
    {
      "queryNo": 923,
      "pathList": [
        "SELECT DOCSTATUS FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00005')",
        "SELECT DOCSTATUS FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00005')"
      ]
    },
    {
      "queryNo": 924,
      "pathList": [
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE NOT (TABDOCTYPE.NAME = 'DocField')",
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.NAME = 'DocField')"
      ]
    },
    {
      "queryNo": 925,
      "pathList": [
        "SELECT CURRENCY FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = '_T-Supplier Quotation-00001')",
        "SELECT CURRENCY FROM TABSUPPLIER QUOTATION WHERE (NAME = '_T-Supplier Quotation-00001')"
      ]
    },
    {
      "queryNo": 926,
      "pathList": [
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARTY_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 927,
      "pathList": [
        "SELECT AMOUNT FROM TABDELIVERY NOTE ITEM WHERE NOT (NAME = '6a8666ef78')",
        "SELECT AMOUNT FROM TABDELIVERY NOTE ITEM WHERE (NAME = '6a8666ef78')"
      ]
    },
    {
      "queryNo": 928,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Purchase Order') AND (REFERENCE_NAME = 'PO-00014') AND (DEBIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Purchase Order') AND (REFERENCE_NAME = 'PO-00014') AND (DEBIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'PO-00014') AND (DEBIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_NAME = 'PO-00014') AND (REFERENCE_TYPE = 'Purchase Order') AND (DEBIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Purchase Order') AND (DEBIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DEBIT = 401) AND (REFERENCE_TYPE = 'Purchase Order') AND (REFERENCE_NAME = 'PO-00014')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DEBIT = 400) AND (REFERENCE_TYPE = 'Purchase Order') AND (REFERENCE_NAME = 'PO-00014')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (DEBIT = 399) AND (REFERENCE_TYPE = 'Purchase Order') AND (REFERENCE_NAME = 'PO-00014')"
      ]
    },
    {
      "queryNo": 929,
      "pathList": [
        "SELECT MAX_DISCOUNT FROM TABITEM WHERE NOT (NAME = '_Test Mix Product Bundle')",
        "SELECT MAX_DISCOUNT FROM TABITEM WHERE (NAME = '_Test Mix Product Bundle')"
      ]
    },
    {
      "queryNo": 930,
      "pathList": [
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'countries')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE NOT (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'countries')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Shipping Rule - India') AND (PARENTFIELD = 'countries')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE NOT (PARENT = '_Test Shipping Rule - India') AND (PARENTTYPE = 'Shipping Rule') AND (PARENTFIELD = 'countries')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Shipping Rule') AND (PARENTFIELD = 'countries')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE NOT (PARENTFIELD = 'countries') AND (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India')",
        "SELECT * FROM TABSHIPPING RULE COUNTRY WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Shipping Rule') AND (PARENT = '_Test Shipping Rule - India')"
      ]
    },
    {
      "queryNo": 931,
      "pathList": [
        "SELECT * FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier 1')",
        "SELECT * FROM TABSUPPLIER WHERE (NAME = '_Test Supplier 1')"
      ]
    },
    {
      "queryNo": 932,
      "pathList": [
        "SELECT DOCSTATUS FROM TABASSET WHERE NOT (NAME = 'Macbook Pro 1')",
        "SELECT DOCSTATUS FROM TABASSET WHERE (NAME = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 933,
      "pathList": [
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (MATERIAL_REQUEST = '_T-Material Request-00004') AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (MATERIAL_REQUEST = '_T-Material Request-00004') AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (MATERIAL_REQUEST IS NULL) AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (MATERIAL_REQUEST_ITEM = '6ae9b62aee') AND (MATERIAL_REQUEST = '_T-Material Request-00004') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (MATERIAL_REQUEST_ITEM IS NULL) AND (MATERIAL_REQUEST = '_T-Material Request-00004') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (DOCSTATUS = 2) AND (MATERIAL_REQUEST = '_T-Material Request-00004') AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (DOCSTATUS = 1) AND (MATERIAL_REQUEST = '_T-Material Request-00004') AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (DOCSTATUS = 0) AND (MATERIAL_REQUEST = '_T-Material Request-00004') AND (MATERIAL_REQUEST_ITEM = '6ae9b62aee')",
        "SELECT SUM(TRANSFER_QTY) FROM TABSTOCK ENTRY DETAIL WHERE MATERIAL_REQUEST = '_T-Material Request-00004' AND MATERIAL_REQUEST_ITEM = '6ae9b62aee' AND DOCSTATUS = 1 HAVING COUNT(TRANSFER_QTY) > COUNT(DISTINCT TRANSFER_QTY) AND COUNT(DISTINCT TRANSFER_QTY) > 1"
      ]
    },
    {
      "queryNo": 934,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENT = 'PRO-00001') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENT = 'PRO-00001') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (PARENT IS NULL) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (DOCSTATUS = 2) AND (PARENT = 'PRO-00001')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (DOCSTATUS = 1) AND (PARENT = 'PRO-00001')",
        "SELECT * FROM TABPRODUCTION ORDER OPERATION WHERE (DOCSTATUS = 0) AND (PARENT = 'PRO-00001')",
        "SELECT MIN(ACTUAL_START_TIME) AS START_DATE, MAX(ACTUAL_END_TIME) AS END_DATE FROM TABPRODUCTION ORDER OPERATION WHERE PARENT = 'PRO-00001' AND DOCSTATUS = 1 HAVING COUNT(ACTUAL_START_TIME) > COUNT(DISTINCT ACTUAL_START_TIME) AND COUNT(DISTINCT ACTUAL_START_TIME) > 1",
        "SELECT MIN(ACTUAL_START_TIME) AS START_DATE, MAX(ACTUAL_END_TIME) AS END_DATE FROM TABPRODUCTION ORDER OPERATION WHERE PARENT = 'PRO-00001' AND DOCSTATUS = 1 HAVING count(*) > COUNT(ACTUAL_START_TIME) AND COUNT(DISTINCT ACTUAL_START_TIME) > 1",
        "SELECT MIN(ACTUAL_START_TIME) AS START_DATE, MAX(ACTUAL_END_TIME) AS END_DATE FROM TABPRODUCTION ORDER OPERATION WHERE PARENT = 'PRO-00001' AND DOCSTATUS = 1 HAVING COUNT(ACTUAL_END_TIME) > COUNT(DISTINCT ACTUAL_END_TIME) AND COUNT(DISTINCT ACTUAL_END_TIME) > 1",
        "SELECT MIN(ACTUAL_START_TIME) AS START_DATE, MAX(ACTUAL_END_TIME) AS END_DATE FROM TABPRODUCTION ORDER OPERATION WHERE PARENT = 'PRO-00001' AND DOCSTATUS = 1 HAVING count(*) > COUNT(ACTUAL_END_TIME) AND COUNT(DISTINCT ACTUAL_END_TIME) > 1"
      ]
    },
    {
      "queryNo": 935,
      "pathList": [
      ]
    },
    {
      "queryNo": 936,
      "pathList": [
        "SELECT * FROM TABSALES ORDER ITEM WHERE NOT (NAME = '2ca4c0603b')",
        "SELECT * FROM TABSALES ORDER ITEM WHERE (NAME = '2ca4c0603b')"
      ]
    },
    {
      "queryNo": 937,
      "pathList": [
        "SELECT MAX(char_length(NEW_PASSWORD)) FROM TABUSER HAVING COUNT(char_length(NEW_PASSWORD)) > COUNT(DISTINCT char_length(NEW_PASSWORD)) AND COUNT(DISTINCT char_length(NEW_PASSWORD)) > 1"
      ]
    },
    {
      "queryNo": 938,
      "pathList": [
      ]
    },
    {
      "queryNo": 939,
      "pathList": [
        "SELECT NAME FROM TABCONTACT WHERE NOT (NAME = '_Test Lead-_Test Lead')",
        "SELECT NAME FROM TABCONTACT WHERE (NAME = '_Test Lead-_Test Lead')"
      ]
    },
    {
      "queryNo": 940,
      "pathList": [
        "SELECT STUDENT_BATCH FROM TABSTUDENT GROUP WHERE NOT (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')",
        "SELECT STUDENT_BATCH FROM TABSTUDENT GROUP WHERE (NAME = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)')"
      ]
    },
    {
      "queryNo": 941,
      "pathList": [
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE = 'EMP-0002') AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL) AND PAYROLL_FREQUENCY = 'Monthly'))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (EMPLOYEE = 'EMP-0002') AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL) AND PAYROLL_FREQUENCY = 'Monthly'))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE IS NULL) AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL) AND PAYROLL_FREQUENCY = 'Monthly'))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT NOT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL) AND PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT IS NULL) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE IS NULL) AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (FROM_DATE <= '2016-11-01') AND NOT (FROM_DATE <= '2013-01-01') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE <= '2016-11-01') AND NOT (FROM_DATE <= '2013-01-01') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE IS NULL) AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE <= '2013-01-01') AND NOT (FROM_DATE <= '2016-11-01') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL)) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= '2016-11-30') AND NOT (TO_DATE >= NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE IS NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE >= '2016-11-30') AND ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE >= NULL) AND ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= '2016-11-30') AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (PAYROLL_FREQUENCY = 'Monthly')) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (PAYROLL_FREQUENCY = 'Monthly') AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL))) AND (EMPLOYEE = 'EMP-0002')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (PAYROLL_FREQUENCY IS NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2016-11-01' OR FROM_DATE <= '2013-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2016-11-30' OR TO_DATE >= NULL))) AND (EMPLOYEE = 'EMP-0002')"
      ]
    },
    {
      "queryNo": 942,
      "pathList": [
        "SELECT NUMBER_FORMAT FROM TABCURRENCY WHERE NOT (NAME = 'USD')",
        "SELECT NUMBER_FORMAT FROM TABCURRENCY WHERE (NAME = 'USD')"
      ]
    },
    {
      "queryNo": 943,
      "pathList": [
        "SELECT NAME FROM TABLEAVE APPLICATION WHERE NOT (NAME = 'LAP/00008')",
        "SELECT NAME FROM TABLEAVE APPLICATION WHERE (NAME = 'LAP/00008')"
      ]
    },
    {
      "queryNo": 944,
      "pathList": [
        "SELECT * FROM TABITEM GROUP WHERE NOT (PARENT_ITEM_GROUP = '_Test Item Group B')",
        "SELECT * FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP = '_Test Item Group B')",
        "SELECT * FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP IS NULL)",
        "SELECT COUNT(NAME) FROM TABITEM GROUP WHERE PARENT_ITEM_GROUP = '_Test Item Group B' HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 945,
      "pathList": [
        "SELECT NAME FROM TABTASK WHERE NOT (NAME = 'TASK00001')",
        "SELECT NAME FROM TABTASK WHERE (NAME = 'TASK00001')"
      ]
    },
    {
      "queryNo": 946,
      "pathList": [
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABMAINTENANCE VISIT PURPOSE WHERE NOT (PREVDOC_DOCTYPE = 'Role')",
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABMAINTENANCE VISIT PURPOSE WHERE (PREVDOC_DOCTYPE = 'Role')",
        "SELECT DISTINCT PREVDOC_DOCTYPE, PARENTTYPE FROM TABMAINTENANCE VISIT PURPOSE WHERE (PREVDOC_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 947,
      "pathList": [
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0 + 1) AND (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0) AND (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0 - 1) AND (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0 + 1) AND (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0) AND (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (TABEMAIL ACCOUNT.ENABLE_INCOMING = 1.0 - 1) AND (TABEMAIL ACCOUNT.NOTIFY_IF_UNREPLIED = 1.0)"
      ]
    },
    {
      "queryNo": 948,
      "pathList": [
        "SELECT NAME FROM TABTODO WHERE (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE NOT (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE (OWNER IS NULL) AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE NOT (REFERENCE_NAME = '9b6df46a09') AND (OWNER = 'test@example.com') AND (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (OWNER = 'test@example.com') AND (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE NOT (STATUS = 'Open') AND (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE (STATUS IS NULL) AND (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (REFERENCE_TYPE = 'ToDo')",
        "SELECT NAME FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'ToDo') AND (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open')",
        "SELECT NAME FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (OWNER = 'test@example.com') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 949,
      "pathList": [
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0) AND (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (IFNULL(TABDELIVERY NOTE.STATUS, '') IN ('Completed', 'Closed')) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0) AND (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) = 2.0 + 1) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) = 2.0) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) = 2.0 - 1) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE NOT (TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3') AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.CUSTOMER IS NULL) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (((TABDELIVERY NOTE.STATUS IS NOT NULL))) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0 AND TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE ((TABDELIVERY NOTE.STATUS IS NULL)) AND (IFNULL(TABDELIVERY NOTE.DOCSTATUS, 0) < 2.0 AND TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (((TABDELIVERY NOTE.DOCSTATUS IS NOT NULL))) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed') AND TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE ((TABDELIVERY NOTE.DOCSTATUS IS NULL)) AND (IFNULL(TABDELIVERY NOTE.STATUS, '') NOT IN ('Completed', 'Closed') AND TABDELIVERY NOTE.CUSTOMER = '_Test Customer 3')"
      ]
    },
    {
      "queryNo": 950,
      "pathList": [
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Stock Entry-00003') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENT = '_T-Stock Entry-00003') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003')",
        "SELECT * FROM TABSTOCK ENTRY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENT = '_T-Stock Entry-00003')"
      ]
    },
    {
      "queryNo": 951,
      "pathList": [
        "SELECT ORDERED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 952,
      "pathList": [
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_HOME_FOLDER = 1) AND (IS_ATTACHMENTS_FOLDER = 0)",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_HOME_FOLDER = 0) AND (IS_ATTACHMENTS_FOLDER = 0)",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_HOME_FOLDER = -1) AND (IS_ATTACHMENTS_FOLDER = 0)",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = 1) AND (IS_HOME_FOLDER = 0)",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = 0) AND (IS_HOME_FOLDER = 0)",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = -1) AND (IS_HOME_FOLDER = 0)"
      ]
    },
    {
      "queryNo": 953,
      "pathList": [
        "SELECT AMOUNT FROM TABPURCHASE RECEIPT ITEM WHERE NOT (NAME = 'dca5ce203a')",
        "SELECT AMOUNT FROM TABPURCHASE RECEIPT ITEM WHERE (NAME = 'dca5ce203a')"
      ]
    },
    {
      "queryNo": 954,
      "pathList": [
        "SELECT NAME FROM TABINSTRUCTOR WHERE NOT (NAME = '_T-Instructor-00001')",
        "SELECT NAME FROM TABINSTRUCTOR WHERE (NAME = '_T-Instructor-00001')"
      ]
    },
    {
      "queryNo": 955,
      "pathList": [
        "SELECT BALANCE_MUST_BE FROM TABACCOUNT WHERE NOT (NAME = 'Stock Received But Not Billed - _TC')",
        "SELECT BALANCE_MUST_BE FROM TABACCOUNT WHERE (NAME = 'Stock Received But Not Billed - _TC')"
      ]
    },
    {
      "queryNo": 956,
      "pathList": [
        "SELECT STOCK_RECEIVED_BUT_NOT_BILLED FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT STOCK_RECEIVED_BUT_NOT_BILLED FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 957,
      "pathList": [
        "SELECT MAX(char_length(MODIFIED_BY)) FROM TABEVENT HAVING COUNT(char_length(MODIFIED_BY)) > COUNT(DISTINCT char_length(MODIFIED_BY)) AND COUNT(DISTINCT char_length(MODIFIED_BY)) > 1"
      ]
    },
    {
      "queryNo": 958,
      "pathList": [
        "SELECT NAME FROM TABSALARY COMPONENT ACCOUNT WHERE (COMPANY = 'Wind Power LLC') AND (PARENT = 'Basic')",
        "SELECT NAME FROM TABSALARY COMPONENT ACCOUNT WHERE NOT (COMPANY = 'Wind Power LLC') AND (PARENT = 'Basic')",
        "SELECT NAME FROM TABSALARY COMPONENT ACCOUNT WHERE (COMPANY IS NULL) AND (PARENT = 'Basic')",
        "SELECT NAME FROM TABSALARY COMPONENT ACCOUNT WHERE NOT (PARENT = 'Basic') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY COMPONENT ACCOUNT WHERE (PARENT IS NULL) AND (COMPANY = 'Wind Power LLC')"
      ]
    },
    {
      "queryNo": 959,
      "pathList": [
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE (FROM_CURRENCY IN ('USD')) AND (TO_CURRENCY = 'INR') AND (DATE <= curdate())",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE (FROM_CURRENCY NOT IN ('USD')) AND (TO_CURRENCY = 'INR') AND (DATE <= curdate())",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE (FROM_CURRENCY IS NULL) AND (TO_CURRENCY = 'INR') AND (DATE <= curdate())",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE NOT (TO_CURRENCY = 'INR') AND (FROM_CURRENCY IN ('USD')) AND (DATE <= curdate())",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE (TO_CURRENCY IS NULL) AND (FROM_CURRENCY IN ('USD')) AND (DATE <= curdate())",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE NOT (DATE <= curdate()) AND (FROM_CURRENCY IN ('USD')) AND (TO_CURRENCY = 'INR')",
        "SELECT CONCAT(FROM_CURRENCY, '-', TO_CURRENCY) FROM TABCURRENCY EXCHANGE WHERE (DATE IS NULL) AND (FROM_CURRENCY IN ('USD')) AND (TO_CURRENCY = 'INR')"
      ]
    },
    {
      "queryNo": 960,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE (USERNAME = '_test') AND (NAME <> 'test@example.com')",
        "SELECT NAME FROM TABUSER WHERE NOT (USERNAME = '_test') AND (NAME <> 'test@example.com')",
        "SELECT NAME FROM TABUSER WHERE (USERNAME IS NULL) AND (NAME <> 'test@example.com')",
        "SELECT NAME FROM TABUSER WHERE NOT (NAME <> 'test@example.com') AND (USERNAME = '_test')"
      ]
    },
    {
      "queryNo": 961,
      "pathList": [
        "SELECT NAME FROM TABEVENT WHERE NOT (SUBJECT = '_Test Event 3')",
        "SELECT NAME FROM TABEVENT WHERE (SUBJECT = '_Test Event 3')",
        "SELECT NAME FROM TABEVENT WHERE (SUBJECT IS NULL)"
      ]
    },
    {
      "queryNo": 962,
      "pathList": [
        "SELECT * FROM TABDYNAMIC LINK WHERE (PARENTTYPE = 'Contact') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTFIELD = 'links')",
        "SELECT * FROM TABDYNAMIC LINK WHERE NOT (PARENTTYPE = 'Contact') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTFIELD = 'links')",
        "SELECT * FROM TABDYNAMIC LINK WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTFIELD = 'links')",
        "SELECT * FROM TABDYNAMIC LINK WHERE NOT (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links')",
        "SELECT * FROM TABDYNAMIC LINK WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links')",
        "SELECT * FROM TABDYNAMIC LINK WHERE NOT (PARENTFIELD = 'links') AND (PARENTTYPE = 'Contact') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer')",
        "SELECT * FROM TABDYNAMIC LINK WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Contact') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer')"
      ]
    },
    {
      "queryNo": 963,
      "pathList": [
        "SELECT IS_FROZEN, DISABLED FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier 1')",
        "SELECT IS_FROZEN, DISABLED FROM TABSUPPLIER WHERE (NAME = '_Test Supplier 1')"
      ]
    },
    {
      "queryNo": 964,
      "pathList": [
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PREC-00008') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENT = 'PREC-00008') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00008')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00008')"
      ]
    },
    {
      "queryNo": 965,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (NAME IN ('c6ddfd123b')) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 966,
      "pathList": [
        "SELECT MAX(char_length(EMAIL)) FROM TABUSER HAVING COUNT(char_length(EMAIL)) > COUNT(DISTINCT char_length(EMAIL)) AND COUNT(DISTINCT char_length(EMAIL)) > 1"
      ]
    },
    {
      "queryNo": 967,
      "pathList": [
        "SELECT CUSTOMER FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00033')",
        "SELECT CUSTOMER FROM TABSALES ORDER WHERE (NAME = 'SO-00033')"
      ]
    },
    {
      "queryNo": 968,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABVEHICLE LOG WHERE NOT (NAME = 'VLOG00001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABVEHICLE LOG WHERE (NAME = 'VLOG00001')"
      ]
    },
    {
      "queryNo": 969,
      "pathList": [
        "SELECT NAME FROM TABITEM PRICE WHERE (ITEM_CODE = '_Test Item') AND (PRICE_LIST = '_Test Price List') AND (NAME <> 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (ITEM_CODE = '_Test Item') AND (PRICE_LIST = '_Test Price List') AND (NAME <> 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE (ITEM_CODE IS NULL) AND (PRICE_LIST = '_Test Price List') AND (NAME <> 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (PRICE_LIST = '_Test Price List') AND (ITEM_CODE = '_Test Item') AND (NAME <> 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE (PRICE_LIST IS NULL) AND (ITEM_CODE = '_Test Item') AND (NAME <> 'ITEM-PRICE-00005')",
        "SELECT NAME FROM TABITEM PRICE WHERE NOT (NAME <> 'ITEM-PRICE-00005') AND (ITEM_CODE = '_Test Item') AND (PRICE_LIST = '_Test Price List')"
      ]
    },
    {
      "queryNo": 970,
      "pathList": [
        "SELECT NAME FROM TABPRINT FORMAT WHERE NOT (NAME = 'Point of Sale')",
        "SELECT NAME FROM TABPRINT FORMAT WHERE (NAME = 'Point of Sale')"
      ]
    },
    {
      "queryNo": 971,
      "pathList": [
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.PREVDOC_DOCNAME = 'DN-00016') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PREVDOC_DOCNAME = 'DN-00016') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.PREVDOC_DOCNAME IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.PREVDOC_DOCNAME = 'DN-00016')",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.PREVDOC_DOCNAME = 'DN-00016')",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 INNER JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.PREVDOC_DOCNAME = 'DN-00016')",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 LEFT JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 RIGHT JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.PREVDOC_DOCNAME = 'DN-00016')",
        "SELECT T1.NAME FROM TABINSTALLATION NOTE T1 RIGHT JOIN TABINSTALLATION NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.PREVDOC_DOCNAME = 'DN-00016')"
      ]
    },
    {
      "queryNo": 972,
      "pathList": [
        "SELECT TABDAILY WORK SUMMARY.NAME FROM TABDAILY WORK SUMMARY WHERE NOT (TABDAILY WORK SUMMARY.STATUS = 'Open')",
        "SELECT TABDAILY WORK SUMMARY.NAME FROM TABDAILY WORK SUMMARY WHERE (TABDAILY WORK SUMMARY.STATUS = 'Open')",
        "SELECT TABDAILY WORK SUMMARY.NAME FROM TABDAILY WORK SUMMARY WHERE (TABDAILY WORK SUMMARY.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 973,
      "pathList": [
        "SELECT MAX(char_length(PRIORITY)) FROM TABTODO HAVING COUNT(char_length(PRIORITY)) > COUNT(DISTINCT char_length(PRIORITY)) AND COUNT(DISTINCT char_length(PRIORITY)) > 1"
      ]
    },
    {
      "queryNo": 974,
      "pathList": [
        "SELECT IDX FROM TABUSER WHERE NOT (NAME = 'test@example.com')",
        "SELECT IDX FROM TABUSER WHERE (NAME = 'test@example.com')"
      ]
    },
    {
      "queryNo": 975,
      "pathList": [
        "SELECT OWNER FROM TABEMAIL ACCOUNT WHERE NOT (NAME = '_Test Email Account 1')",
        "SELECT OWNER FROM TABEMAIL ACCOUNT WHERE (NAME = '_Test Email Account 1')"
      ]
    },
    {
      "queryNo": 976,
      "pathList": [
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.AGAINST_SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.AGAINST_SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.AGAINST_SALES_ORDER IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 INNER JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 LEFT JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 RIGHT JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.AGAINST_SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABDELIVERY NOTE T1 RIGHT JOIN TABDELIVERY NOTE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.AGAINST_SALES_ORDER = 'SO-00027')"
      ]
    },
    {
      "queryNo": 977,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBIN WHERE NOT (NAME = 'BIN/0000001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBIN WHERE (NAME = 'BIN/0000001')"
      ]
    },
    {
      "queryNo": 978,
      "pathList": [
        "SELECT * FROM TABEMAIL ALERT WHERE NOT (NAME = '_Test Email Alert 4')",
        "SELECT * FROM TABEMAIL ALERT WHERE (NAME = '_Test Email Alert 4')"
      ]
    },
    {
      "queryNo": 979,
      "pathList": [
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 3) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 1) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE NOT (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 2) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 1) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 0) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (ITEM.IS_SUB_CONTRACTED_ITEM = 1) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (ITEM.IS_SUB_CONTRACTED_ITEM = 0) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (ITEM.IS_SUB_CONTRACTED_ITEM = -1) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM RIGHT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM.NAME IS NOT NULL) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME RIGHT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM_ITEM.ITEM_CODE IS NULL) AND (ITEM.NAME IS NOT NULL)) AND (IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING count(*) > 1",
        "SELECT ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0 GROUP BY ITEM.STOCK_UOM HAVING count(DISTINCT BOM_ITEM.ITEM_CODE) > 1",
        "SELECT BOM_ITEM.ITEM_CODE FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0 GROUP BY BOM_ITEM.ITEM_CODE HAVING count(DISTINCT ITEM.STOCK_UOM) > 1",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM EXPLOSION ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 AND ITEM.IS_SUB_CONTRACTED_ITEM = 0 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING COUNT(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) AND COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > 1"
      ]
    },
    {
      "queryNo": 981,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE NOT (STOCK_ENTRY = 'STE-00019')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE (STOCK_ENTRY = 'STE-00019')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABJOURNAL ENTRY WHERE (STOCK_ENTRY IS NULL)"
      ]
    },
    {
      "queryNo": 982,
      "pathList": [
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE (PARENT = 'PINV-00001') AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE NOT (PARENT = 'PINV-00001') AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE (PARENT IS NULL) AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE (NOT EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (NAME = PR_ITEM.ITEM_CODE) AND (IS_STOCK_ITEM = 1)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE NOT (NAME = PR_ITEM.ITEM_CODE) AND (IS_STOCK_ITEM = 1)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (PR_ITEM.ITEM_CODE IS NULL) AND (IS_STOCK_ITEM = 1)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 2) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 1) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = 'PINV-00001')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE INVOICE ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 0) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = 'PINV-00001')"
      ]
    },
    {
      "queryNo": 983,
      "pathList": [
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE (PARENT = 'EXP00002') AND (PARENTTYPE = 'Expense Claim') AND (PARENTFIELD = 'expenses') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE NOT (PARENT = 'EXP00002') AND (PARENTTYPE = 'Expense Claim') AND (PARENTFIELD = 'expenses') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Expense Claim') AND (PARENTFIELD = 'expenses') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE NOT (PARENTTYPE = 'Expense Claim') AND (PARENT = 'EXP00002') AND (PARENTFIELD = 'expenses') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EXP00002') AND (PARENTFIELD = 'expenses') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE NOT (PARENTFIELD = 'expenses') AND (PARENT = 'EXP00002') AND (PARENTTYPE = 'Expense Claim') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'EXP00002') AND (PARENTTYPE = 'Expense Claim') AND (NAME NOT IN ('15f84b48c1'))",
        "SELECT NAME FROM TABEXPENSE CLAIM DETAIL WHERE (NAME IN ('15f84b48c1')) AND (PARENT = 'EXP00002') AND (PARENTTYPE = 'Expense Claim') AND (PARENTFIELD = 'expenses')"
      ]
    },
    {
      "queryNo": 984,
      "pathList": [
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE (MODULE_NAME = 'Core') AND (STANDARD = 1)",
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE NOT (MODULE_NAME = 'Core') AND (STANDARD = 1)",
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE (MODULE_NAME IS NULL) AND (STANDARD = 1)",
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE (STANDARD = 2) AND (MODULE_NAME = 'Core')",
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE (STANDARD = 1) AND (MODULE_NAME = 'Core')",
        "SELECT NAME, ICON, COLOR, REVERSE FROM TABDESKTOP ICON WHERE (STANDARD = 0) AND (MODULE_NAME = 'Core')"
      ]
    },
    {
      "queryNo": 985,
      "pathList": [
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (NAME <> 'TR0003') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_CITY IS NOT NULL))) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_CITY IS NULL)) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((COMPANY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((COMPANY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_CITY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_CITY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((TAX_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((TAX_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND NAME <> 'TR0003')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND NAME <> 'TR0003')"
      ]
    },
    {
      "queryNo": 986,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE NOT (RETURN_AGAINST = 'PREC-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (RETURN_AGAINST = 'PREC-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT WHERE (RETURN_AGAINST IS NULL)"
      ]
    },
    {
      "queryNo": 987,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE NOT (PRODUCTION_ORDER = 'PRO-00007')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (PRODUCTION_ORDER = 'PRO-00007')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (PRODUCTION_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 988,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE (SHOW_IN_WEBSITE = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE NOT (ROUTE = 'test-route-000') AND (SHOW_IN_WEBSITE = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABITEM GROUP WHERE (ROUTE IS NULL) AND (SHOW_IN_WEBSITE = 1)"
      ]
    },
    {
      "queryNo": 989,
      "pathList": [
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (STATUS = 'Not Sent') AND (REFERENCE_DOCTYPE = 'Event') AND (REFERENCE_NAME = 'EV00009')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE NOT (STATUS = 'Not Sent') AND (REFERENCE_DOCTYPE = 'Event') AND (REFERENCE_NAME = 'EV00009')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (STATUS IS NULL) AND (REFERENCE_DOCTYPE = 'Event') AND (REFERENCE_NAME = 'EV00009')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE NOT (REFERENCE_DOCTYPE = 'Event') AND (STATUS = 'Not Sent') AND (REFERENCE_NAME = 'EV00009')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (REFERENCE_DOCTYPE IS NULL) AND (STATUS = 'Not Sent') AND (REFERENCE_NAME = 'EV00009')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE NOT (REFERENCE_NAME = 'EV00009') AND (STATUS = 'Not Sent') AND (REFERENCE_DOCTYPE = 'Event')",
        "SELECT NAME FROM TABEMAIL QUEUE WHERE (REFERENCE_NAME IS NULL) AND (STATUS = 'Not Sent') AND (REFERENCE_DOCTYPE = 'Event')"
      ]
    },
    {
      "queryNo": 990,
      "pathList": [
        "SELECT * FROM TABLANDED COST ITEM WHERE (DOCSTATUS = 2) AND (PURCHASE_RECEIPT_ITEM = '539402fc7a')",
        "SELECT * FROM TABLANDED COST ITEM WHERE (DOCSTATUS = 1) AND (PURCHASE_RECEIPT_ITEM = '539402fc7a')",
        "SELECT * FROM TABLANDED COST ITEM WHERE (DOCSTATUS = 0) AND (PURCHASE_RECEIPT_ITEM = '539402fc7a')",
        "SELECT * FROM TABLANDED COST ITEM WHERE (PURCHASE_RECEIPT_ITEM = '539402fc7a') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABLANDED COST ITEM WHERE NOT (PURCHASE_RECEIPT_ITEM = '539402fc7a') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABLANDED COST ITEM WHERE (PURCHASE_RECEIPT_ITEM IS NULL) AND (DOCSTATUS = 1)",
        "SELECT SUM(APPLICABLE_CHARGES) FROM TABLANDED COST ITEM WHERE DOCSTATUS = 1 AND PURCHASE_RECEIPT_ITEM = '539402fc7a' HAVING COUNT(APPLICABLE_CHARGES) > COUNT(DISTINCT APPLICABLE_CHARGES) AND COUNT(DISTINCT APPLICABLE_CHARGES) > 1"
      ]
    },
    {
      "queryNo": 991,
      "pathList": [
        "SELECT MODULE FROM TABDOCTYPE WHERE NOT (NAME = 'Customize Form')",
        "SELECT MODULE FROM TABDOCTYPE WHERE (NAME = 'Customize Form')"
      ]
    },
    {
      "queryNo": 992,
      "pathList": [
        "SELECT TITLE FROM TABBLOG POST WHERE NOT (NAME = '-test-blog-post-1')",
        "SELECT TITLE FROM TABBLOG POST WHERE (NAME = '-test-blog-post-1')"
      ]
    },
    {
      "queryNo": 993,
      "pathList": [
        "SELECT PARENT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Dynamic Link')",
        "SELECT PARENT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE = 'Dynamic Link')",
        "SELECT PARENT AS DOCTYPE, FIELDNAME, OPTIONS AS DOCTYPE_FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 994,
      "pathList": [
        "SELECT NAME FROM TABLEAD WHERE NOT (EMAIL_ID = 'test@example.com')",
        "SELECT NAME FROM TABLEAD WHERE (EMAIL_ID = 'test@example.com')",
        "SELECT NAME FROM TABLEAD WHERE (EMAIL_ID IS NULL)"
      ]
    },
    {
      "queryNo": 995,
      "pathList": [
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T2.SALES_ORDER IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 INNER JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 LEFT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 RIGHT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABSALES INVOICE T1 RIGHT JOIN TABSALES INVOICE ITEM T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.SALES_ORDER = 'SO-00027')"
      ]
    },
    {
      "queryNo": 996,
      "pathList": [
        "SELECT NAME FROM TABCOURSE WHERE NOT (NAME = '_Test Course 2')",
        "SELECT NAME FROM TABCOURSE WHERE (NAME = '_Test Course 2')"
      ]
    },
    {
      "queryNo": 997,
      "pathList": [
        "SELECT * FROM TABQUOTATION ITEM WHERE (PARENTTYPE = 'Quotation') AND (PARENT = 'QTN-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABQUOTATION ITEM WHERE NOT (PARENTTYPE = 'Quotation') AND (PARENT = 'QTN-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABQUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'QTN-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABQUOTATION ITEM WHERE NOT (PARENT = 'QTN-00001') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABQUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABQUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Quotation') AND (PARENT = 'QTN-00001')",
        "SELECT * FROM TABQUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Quotation') AND (PARENT = 'QTN-00001')"
      ]
    },
    {
      "queryNo": 998,
      "pathList": [
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Link') AND (OPTIONS = 'Role') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Link') AND (OPTIONS = 'Role') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'Role') AND NOT ((OPTIONS = 'link:Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (OPTIONS = 'Role') AND (FIELDTYPE = 'Link') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Link') AND NOT ((FIELDTYPE = 'Select'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Select') AND (OPTIONS = 'link:Role') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Select') AND (OPTIONS = 'link:Role') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'link:Role') AND NOT ((OPTIONS = 'Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (OPTIONS = 'link:Role') AND (FIELDTYPE = 'Select') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT DT AS PARENT, FIELDNAME FROM TABCUSTOM FIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Select') AND NOT ((FIELDTYPE = 'Link'))"
      ]
    },
    {
      "queryNo": 999,
      "pathList": [
        "SELECT LFT, RGT FROM TABCOST CENTER WHERE NOT (NAME = '_Test Company - _TC')",
        "SELECT LFT, RGT FROM TABCOST CENTER WHERE (NAME = '_Test Company - _TC')"
      ]
    },
    {
      "queryNo": 1000,
      "pathList": [
        "SELECT * FROM TABTIMESHEET WHERE (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09') AND ((STATUS = 'Submitted' OR STATUS = 'Billed'))",
        "SELECT * FROM TABTIMESHEET WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09') AND ((STATUS = 'Submitted' OR STATUS = 'Billed'))",
        "SELECT * FROM TABTIMESHEET WHERE (EMPLOYEE IS NULL) AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09') AND ((STATUS = 'Submitted' OR STATUS = 'Billed'))",
        "SELECT * FROM TABTIMESHEET WHERE (START_DATE NOT BETWEEN '2017-02-09' AND '2017-02-09') AND (EMPLOYEE = '_T-Employee-0001') AND ((STATUS = 'Submitted' OR STATUS = 'Billed'))",
        "SELECT * FROM TABTIMESHEET WHERE (START_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND ((STATUS = 'Submitted' OR STATUS = 'Billed'))",
        "SELECT * FROM TABTIMESHEET WHERE NOT (STATUS = 'Submitted') AND NOT (STATUS = 'Billed') AND (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09')",
        "SELECT * FROM TABTIMESHEET WHERE (STATUS = 'Submitted') AND NOT (STATUS = 'Billed') AND (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09')",
        "SELECT * FROM TABTIMESHEET WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09')",
        "SELECT * FROM TABTIMESHEET WHERE (STATUS = 'Billed') AND NOT (STATUS = 'Submitted') AND (EMPLOYEE = '_T-Employee-0001') AND (START_DATE BETWEEN '2017-02-09' AND '2017-02-09')"
      ]
    },
    {
      "queryNo": 1001,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPOS PROFILE WHERE NOT (NAME = '6125d62f89')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPOS PROFILE WHERE (NAME = '6125d62f89')"
      ]
    },
    {
      "queryNo": 1002,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER WHERE (MATERIAL_REQUEST = '_T-Material Request-00013') AND (MATERIAL_REQUEST_ITEM = '1a36242b82') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (MATERIAL_REQUEST = '_T-Material Request-00013') AND (MATERIAL_REQUEST_ITEM = '1a36242b82') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (MATERIAL_REQUEST IS NULL) AND (MATERIAL_REQUEST_ITEM = '1a36242b82') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE NOT (MATERIAL_REQUEST_ITEM = '1a36242b82') AND (MATERIAL_REQUEST = '_T-Material Request-00013') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (MATERIAL_REQUEST_ITEM IS NULL) AND (MATERIAL_REQUEST = '_T-Material Request-00013') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 2) AND (MATERIAL_REQUEST = '_T-Material Request-00013') AND (MATERIAL_REQUEST_ITEM = '1a36242b82')",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 1) AND (MATERIAL_REQUEST = '_T-Material Request-00013') AND (MATERIAL_REQUEST_ITEM = '1a36242b82')",
        "SELECT * FROM TABPRODUCTION ORDER WHERE (DOCSTATUS = 0) AND (MATERIAL_REQUEST = '_T-Material Request-00013') AND (MATERIAL_REQUEST_ITEM = '1a36242b82')",
        "SELECT SUM(QTY) FROM TABPRODUCTION ORDER WHERE MATERIAL_REQUEST = '_T-Material Request-00013' AND MATERIAL_REQUEST_ITEM = '1a36242b82' AND DOCSTATUS = 1 HAVING COUNT(QTY) > COUNT(DISTINCT QTY) AND COUNT(DISTINCT QTY) > 1"
      ]
    },
    {
      "queryNo": 1003,
      "pathList": [
        "SELECT ITEM_GROUP, SELLING_COST_CENTER FROM TABITEM WHERE NOT (NAME = '_Test Item')",
        "SELECT ITEM_GROUP, SELLING_COST_CENTER FROM TABITEM WHERE (NAME = '_Test Item')"
      ]
    },
    {
      "queryNo": 1004,
      "pathList": [
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENTTYPE = 'Asset') AND (PARENT = 'Macbook Pro 1') AND (PARENTFIELD = 'schedules') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Macbook Pro 1') AND (PARENTFIELD = 'schedules') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE NOT (PARENTFIELD = 'schedules') AND (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (NAME NOT IN ('df861eedbc', 'e2e3790e55', 'e9674ed419'))",
        "SELECT NAME FROM TABDEPRECIATION SCHEDULE WHERE (NAME IN ('df861eedbc', 'e2e3790e55', 'e9674ed419')) AND (PARENT = 'Macbook Pro 1') AND (PARENTTYPE = 'Asset') AND (PARENTFIELD = 'schedules')"
      ]
    },
    {
      "queryNo": 1005,
      "pathList": [
        "SELECT _COMMENTS FROM TABSALES INVOICE WHERE NOT (NAME = 'SINV-00021')",
        "SELECT _COMMENTS FROM TABSALES INVOICE WHERE (NAME = 'SINV-00021')"
      ]
    },
    {
      "queryNo": 1006,
      "pathList": [
        "SELECT * FROM TABITEM GROUP WHERE NOT (NAME = 'All Item Groups')",
        "SELECT * FROM TABITEM GROUP WHERE (NAME = 'All Item Groups')"
      ]
    },
    {
      "queryNo": 1007,
      "pathList": [
        "SELECT * FROM TABBOM ITEM WHERE (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABBOM ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABBOM ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABBOM ITEM WHERE NOT (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABBOM ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABBOM ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item-001')",
        "SELECT * FROM TABBOM ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item-001')"
      ]
    },
    {
      "queryNo": 1008,
      "pathList": [
        "SELECT EMAIL FROM TABUSER WHERE NOT (EMAIL = 'test@example.com')",
        "SELECT EMAIL FROM TABUSER WHERE (EMAIL = 'test@example.com')",
        "SELECT EMAIL FROM TABUSER WHERE (EMAIL IS NULL)"
      ]
    },
    {
      "queryNo": 1009,
      "pathList": [
        "SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = 'COA from Existing Company - CFEC')",
        "SELECT NAME FROM TABCOST CENTER WHERE (NAME = 'COA from Existing Company - CFEC')"
      ]
    },
    {
      "queryNo": 1010,
      "pathList": [
        "SELECT ACTUAL_QTY, STOCK_VALUE FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT ACTUAL_QTY, STOCK_VALUE FROM TABBIN WHERE (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT ACTUAL_QTY, STOCK_VALUE FROM TABBIN WHERE (ITEM_CODE IS NULL)"
      ]
    },
    {
      "queryNo": 1011,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE NOT (AMENDED_FROM = 'PRO-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE (AMENDED_FROM = 'PRO-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION ORDER WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1012,
      "pathList": [
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE (PARENT = 'DN-00030') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENT = 'DN-00030') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENTTYPE = 'Delivery Note') AND (PARENT = 'DN-00030') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'DN-00030') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'DN-00030') AND (PARENTTYPE = 'Delivery Note') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'DN-00030') AND (PARENTTYPE = 'Delivery Note') AND (NAME NOT IN ('0823055fad'))",
        "SELECT NAME FROM TABDELIVERY NOTE ITEM WHERE (NAME IN ('0823055fad')) AND (PARENT = 'DN-00030') AND (PARENTTYPE = 'Delivery Note') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1013,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2013-02-14') AND (GLE.ACCOUNT = '_Test Receivable USD - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2013-02-14') AND (GLE.ACCOUNT = '_Test Receivable USD - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (GLE.ACCOUNT = '_Test Receivable USD - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Receivable USD - _TC') AND (POSTING_DATE <= '2013-02-14')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (POSTING_DATE <= '2013-02-14')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND GLE.ACCOUNT = '_Test Receivable USD - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND GLE.ACCOUNT = '_Test Receivable USD - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 1014,
      "pathList": [
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE NOT (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE NOT (PARENTTYPE = 'Timesheet') AND (PARENT = 'TS-00002') AND (PARENTFIELD = 'time_logs') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'TS-00002') AND (PARENTFIELD = 'time_logs') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE NOT (PARENTFIELD = 'time_logs') AND (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (NAME NOT IN ('4a957935f1'))",
        "SELECT NAME FROM TABTIMESHEET DETAIL WHERE (NAME IN ('4a957935f1')) AND (PARENT = 'TS-00002') AND (PARENTTYPE = 'Timesheet') AND (PARENTFIELD = 'time_logs')"
      ]
    },
    {
      "queryNo": 1015,
      "pathList": [
        "SELECT NAME FROM TABBLOG CATEGORY WHERE NOT (NAME = 'test-category')",
        "SELECT NAME FROM TABBLOG CATEGORY WHERE (NAME = 'test-category')"
      ]
    },
    {
      "queryNo": 1016,
      "pathList": [
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IN ('Communication', 'Comment')) AND (((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009') OR ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE NOT IN ('Communication', 'Comment')) AND (((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009') OR ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009') OR ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND ((COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE = 'Task') AND (REFERENCE_NAME = 'TASK00009') AND NOT (((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (REFERENCE_DOCTYPE = 'Task') AND (REFERENCE_NAME = 'TASK00009') AND NOT (((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE IS NULL) AND (REFERENCE_NAME = 'TASK00009') AND NOT (((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_DOCTYPE = 'Task') AND NOT (((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_DOCTYPE = 'Task') AND NOT (((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009') AND (COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))))) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (TIMELINE_DOCTYPE = 'Task') AND (TIMELINE_NAME = 'TASK00009') AND ((COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')))) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (TIMELINE_DOCTYPE = 'Task') AND (TIMELINE_NAME = 'TASK00009') AND ((COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')))) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (TIMELINE_DOCTYPE IS NULL) AND (TIMELINE_NAME = 'TASK00009') AND ((COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')))) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (TIMELINE_NAME = 'TASK00009') AND (TIMELINE_DOCTYPE = 'Task') AND ((COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')))) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (TIMELINE_NAME IS NULL) AND (TIMELINE_DOCTYPE = 'Task') AND ((COMMUNICATION_TYPE = 'Communication' OR (COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')))) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (COMMUNICATION_TYPE = 'Communication') AND NOT ((COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))) AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE = 'Communication') AND NOT ((COMMUNICATION_TYPE = 'Comment' AND COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))) AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND NOT ((COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted'))) AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE = 'Comment') AND (COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')) AND NOT (COMMUNICATION_TYPE = 'Communication') AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE NOT (COMMUNICATION_TYPE = 'Comment') AND (COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')) AND NOT (COMMUNICATION_TYPE = 'Communication') AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (COMMENT_TYPE IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')) AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMENT_TYPE NOT IN ('Created', 'Updated', 'Submitted', 'Cancelled', 'Deleted')) AND (COMMUNICATION_TYPE = 'Comment') AND NOT (COMMUNICATION_TYPE = 'Communication') AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))",
        "SELECT NAME, COMMUNICATION_TYPE, COMMUNICATION_MEDIUM, COMMENT_TYPE, CONTENT, SENDER, SENDER_FULL_NAME, CREATION, SUBJECT, DELIVERY_STATUS, _LIKED_BY, TIMELINE_DOCTYPE, TIMELINE_NAME, REFERENCE_DOCTYPE, REFERENCE_NAME, LINK_DOCTYPE, LINK_NAME, 'Communication' AS DOCTYPE FROM TABCOMMUNICATION WHERE (COMMENT_TYPE IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND NOT (COMMUNICATION_TYPE = 'Communication') AND ((TIMELINE_DOCTYPE = 'Task' AND TIMELINE_NAME = 'TASK00009')) AND NOT ((REFERENCE_DOCTYPE = 'Task' AND REFERENCE_NAME = 'TASK00009')) AND (COMMUNICATION_TYPE IN ('Communication', 'Comment'))"
      ]
    },
    {
      "queryNo": 1017,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (SALES_INVOICE_NO = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (SALES_INVOICE_NO = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (SALES_INVOICE_NO IS NULL)"
      ]
    },
    {
      "queryNo": 1018,
      "pathList": [
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE NOT (NAME = 'Test Email Account Password-new')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (NAME = 'Test Email Account Password-new')"
      ]
    },
    {
      "queryNo": 1019,
      "pathList": [
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 2)",
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 0)"
      ]
    },
    {
      "queryNo": 1020,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBUDGET WHERE NOT (NAME = '_Test Project/_Test Fiscal Year 2013/002')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBUDGET WHERE (NAME = '_Test Project/_Test Fiscal Year 2013/002')"
      ]
    },
    {
      "queryNo": 1021,
      "pathList": [
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE NOT (ITEM.ITEM_CODE = '_Test PPT Item Raw B')",
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.ITEM_CODE = '_Test PPT Item Raw B')",
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ INNER JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.ITEM_CODE IS NULL)",
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ LEFT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE (ITEM.PARENT IS NULL) AND (MAT_REQ.NAME IS NOT NULL)",
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ RIGHT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE ((MAT_REQ.NAME IS NULL) AND (ITEM.PARENT IS NOT NULL)) AND (ITEM.ITEM_CODE = '_Test PPT Item Raw B')",
        "SELECT MAT_REQ.MATERIAL_REQUEST_TYPE AS TYPE FROM TABMATERIAL REQUEST MAT_REQ RIGHT JOIN TABMATERIAL REQUEST ITEM ITEM ON ITEM.PARENT = MAT_REQ.NAME WHERE ((MAT_REQ.NAME IS NULL) AND (ITEM.PARENT IS NULL)) AND (ITEM.ITEM_CODE = '_Test PPT Item Raw B')"
      ]
    },
    {
      "queryNo": 1022,
      "pathList": [
        "SELECT DOCSTATUS FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00002')",
        "SELECT DOCSTATUS FROM TABQUOTATION WHERE (NAME = 'QTN-00002')"
      ]
    },
    {
      "queryNo": 1023,
      "pathList": [
        "SELECT PROJECT FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00001') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT PROJECT FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00001') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT PROJECT FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT PROJECT FROM TABSTOCK ENTRY WHERE NOT (PURPOSE = 'Material Transfer for Manufacture') AND (PRODUCTION_ORDER = 'PRO-00001')",
        "SELECT PROJECT FROM TABSTOCK ENTRY WHERE (PURPOSE IS NULL) AND (PRODUCTION_ORDER = 'PRO-00001')"
      ]
    },
    {
      "queryNo": 1024,
      "pathList": [
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE NOT (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABSTOCK LEDGER ENTRY WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 1026,
      "pathList": [
        "SELECT NAME FROM TABISSUE WHERE (TABISSUE.STATUS = 'Open') AND (TABISSUE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABISSUE WHERE NOT (TABISSUE.STATUS = 'Open') AND (TABISSUE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABISSUE WHERE (TABISSUE.STATUS IS NULL) AND (TABISSUE.CUSTOMER = '_Test Customer 3')",
        "SELECT NAME FROM TABISSUE WHERE NOT (TABISSUE.CUSTOMER = '_Test Customer 3') AND (TABISSUE.STATUS = 'Open')",
        "SELECT NAME FROM TABISSUE WHERE (TABISSUE.CUSTOMER IS NULL) AND (TABISSUE.STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 1027,
      "pathList": [
        "SELECT NAME FROM TABERROR LOG WHERE (TABERROR LOG.SEEN = 0.0 + 1)",
        "SELECT NAME FROM TABERROR LOG WHERE (TABERROR LOG.SEEN = 0.0)",
        "SELECT NAME FROM TABERROR LOG WHERE (TABERROR LOG.SEEN = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1028,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', 'ec9342c5c5', '73e83c7986', '6c0b5d5cef', '5e989bb458', 'bd33659b90', '7d2fb9484f')) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1029,
      "pathList": [
        "SELECT NAME FROM TABDESKTOP ICON WHERE (OWNER = 'Administrator') AND (LINK = 'List/Task') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (OWNER = 'Administrator') AND (LINK = 'List/Task') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (OWNER IS NULL) AND (LINK = 'List/Task') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (LINK = 'List/Task') AND (OWNER = 'Administrator') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (LINK IS NULL) AND (OWNER = 'Administrator') AND (STANDARD = 1)",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 2) AND (OWNER = 'Administrator') AND (LINK = 'List/Task')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 1) AND (OWNER = 'Administrator') AND (LINK = 'List/Task')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (STANDARD = 0) AND (OWNER = 'Administrator') AND (LINK = 'List/Task')"
      ]
    },
    {
      "queryNo": 1030,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Fleet Manager', '_Test Role 2', 'Maintenance Manager', '_Test Role', 'Purchase Master Manager', 'Stock User', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Fleet Manager', '_Test Role 2', 'Maintenance Manager', '_Test Role', 'Purchase Master Manager', 'Stock User', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Fleet Manager', '_Test Role 2', 'Maintenance Manager', '_Test Role', 'Purchase Master Manager', 'Stock User', '_Test Role 3'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Fleet Manager', '_Test Role 2', 'Maintenance Manager', '_Test Role', 'Purchase Master Manager', 'Stock User', '_Test Role 3')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Fleet Manager', '_Test Role 2', 'Maintenance Manager', '_Test Role', 'Purchase Master Manager', 'Stock User', '_Test Role 3')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 1031,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPAYMENT ENTRY WHERE NOT (NAME = 'PE-00004')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPAYMENT ENTRY WHERE (NAME = 'PE-00004')"
      ]
    },
    {
      "queryNo": 1032,
      "pathList": [
        "SELECT MAX(char_length(GOOGLE_USERID)) FROM TABUSER HAVING COUNT(char_length(GOOGLE_USERID)) > COUNT(DISTINCT char_length(GOOGLE_USERID)) AND COUNT(DISTINCT char_length(GOOGLE_USERID)) > 1"
      ]
    },
    {
      "queryNo": 1033,
      "pathList": [
        "SELECT NAME FROM TABLEAVE APPLICATION WHERE NOT (TABLEAVE APPLICATION.STATUS = 'Open')",
        "SELECT NAME FROM TABLEAVE APPLICATION WHERE (TABLEAVE APPLICATION.STATUS = 'Open')",
        "SELECT NAME FROM TABLEAVE APPLICATION WHERE (TABLEAVE APPLICATION.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1034,
      "pathList": [
        "SELECT MUST_BE_WHOLE_NUMBER FROM TABUOM WHERE NOT (NAME = 'Nos')",
        "SELECT MUST_BE_WHOLE_NUMBER FROM TABUOM WHERE (NAME = 'Nos')"
      ]
    },
    {
      "queryNo": 1035,
      "pathList": [
        "SELECT * FROM TABITEM GROUP WHERE (LFT = 5) AND NOT (RGT = 5)",
        "SELECT * FROM TABITEM GROUP WHERE (LFT = 4) AND NOT (RGT = 5)",
        "SELECT * FROM TABITEM GROUP WHERE (LFT = 3) AND NOT (RGT = 5)",
        "SELECT * FROM TABITEM GROUP WHERE (RGT = 6) AND NOT (LFT = 4)",
        "SELECT * FROM TABITEM GROUP WHERE (RGT = 5) AND NOT (LFT = 4)",
        "SELECT * FROM TABITEM GROUP WHERE (RGT = 4) AND NOT (LFT = 4)"
      ]
    },
    {
      "queryNo": 1036,
      "pathList": [
        "SELECT PER_DELIVERED FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00017')",
        "SELECT PER_DELIVERED FROM TABSALES ORDER WHERE (NAME = 'SO-00017')"
      ]
    },
    {
      "queryNo": 1037,
      "pathList": [
        "SELECT IS_GROUP, ROOT_TYPE, COMPANY FROM TABACCOUNT WHERE NOT (NAME = 'Test Warehouse for Merging 2 - _TC')",
        "SELECT IS_GROUP, ROOT_TYPE, COMPANY FROM TABACCOUNT WHERE (NAME = 'Test Warehouse for Merging 2 - _TC')"
      ]
    },
    {
      "queryNo": 1038,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test FG Item')) AND (IS_SUB_CONTRACTED_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test FG Item')) AND (IS_SUB_CONTRACTED_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (IS_SUB_CONTRACTED_ITEM = 2) AND (NAME IN ('_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (IS_SUB_CONTRACTED_ITEM = 1) AND (NAME IN ('_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (IS_SUB_CONTRACTED_ITEM = 0) AND (NAME IN ('_Test FG Item'))"
      ]
    },
    {
      "queryNo": 1039,
      "pathList": [
        "SELECT STOCK_UOM, IS_STOCK_ITEM, HAS_SERIAL_NO, HAS_BATCH_NO FROM TABITEM WHERE NOT (NAME = 'Test Item for Merging 2')",
        "SELECT STOCK_UOM, IS_STOCK_ITEM, HAS_SERIAL_NO, HAS_BATCH_NO FROM TABITEM WHERE (NAME = 'Test Item for Merging 2')"
      ]
    },
    {
      "queryNo": 1040,
      "pathList": [
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (POSTING_DATE <= '2017-02-09') AND (WAREHOUSE = 'Test Warehouse for Renaming 1 - _TC')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (POSTING_DATE <= '2017-02-09') AND (WAREHOUSE = 'Test Warehouse for Renaming 1 - _TC')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (POSTING_DATE IS NULL) AND (WAREHOUSE = 'Test Warehouse for Renaming 1 - _TC')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (WAREHOUSE = 'Test Warehouse for Renaming 1 - _TC') AND (POSTING_DATE <= '2017-02-09')",
        "SELECT ITEM_CODE, STOCK_VALUE, NAME, WAREHOUSE FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE IS NULL) AND (POSTING_DATE <= '2017-02-09')"
      ]
    },
    {
      "queryNo": 1041,
      "pathList": [
        "SELECT DESCRIPTION FROM TABTODO WHERE NOT (NAME = '258546aad7')",
        "SELECT DESCRIPTION FROM TABTODO WHERE (NAME = '258546aad7')"
      ]
    },
    {
      "queryNo": 1042,
      "pathList": [
        "SELECT COMPANY FROM TABCOST CENTER WHERE NOT (NAME = 'Main - _TC')",
        "SELECT COMPANY FROM TABCOST CENTER WHERE (NAME = 'Main - _TC')"
      ]
    },
    {
      "queryNo": 1043,
      "pathList": [
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT ROLE.ROLE = 'System Manager') AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE NOT (TABEVENT ROLE.ROLE = 'System Manager') AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT ROLE.ROLE IS NULL) AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE NOT (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'Administrator') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'Administrator') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT.EVENT_TYPE IS NULL) AND NOT (TABEVENT.OWNER = 'Administrator') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT.OWNER = 'Administrator') AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (TABEVENT.OWNER IS NULL) AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT INNER JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'Administrator') AND (TABEVENT ROLE.ROLE = 'System Manager')",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE ((TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT.NAME IS NOT NULL)) AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT RIGHT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE ((TABEVENT.NAME IS NULL) AND (TABEVENT ROLE.PARENT IS NOT NULL)) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT RIGHT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE ((TABEVENT.NAME IS NULL) AND (TABEVENT ROLE.PARENT IS NULL)) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator'))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator'))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator'))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator'))",
        "SELECT TABEVENT.SUBJECT, TABEVENT.EVENT_TYPE, TABEVENT.NAME, TABEVENT.MODIFIED, TABEVENT.DOCSTATUS FROM TABEVENT LEFT JOIN TABEVENT ROLE ON (TABEVENT ROLE.PARENT = TABEVENT.NAME) WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND (TABEVENT ROLE.ROLE = 'System Manager' AND (TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'Administrator'))"
      ]
    },
    {
      "queryNo": 1044,
      "pathList": [
        "SELECT INDENTED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item Home Desktop 100') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT INDENTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1045,
      "pathList": [
        "SELECT MAX(char_length(USER_TYPE)) FROM TABUSER HAVING COUNT(char_length(USER_TYPE)) > COUNT(DISTINCT char_length(USER_TYPE)) AND COUNT(DISTINCT char_length(USER_TYPE)) > 1"
      ]
    },
    {
      "queryNo": 1046,
      "pathList": [
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS FROM TABCUSTOMER GROUP WHERE NOT (NAME = '_Test Customer Group')",
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS FROM TABCUSTOMER GROUP WHERE (NAME = '_Test Customer Group')"
      ]
    },
    {
      "queryNo": 1047,
      "pathList": [
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE NOT (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.ITEM_CODE IS NULL) AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE NOT (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.WAREHOUSE IS NULL) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.QTY = MR_ITEM.ORDERED_QTY + 1) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.QTY = MR_ITEM.ORDERED_QTY) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR_ITEM.QTY = MR_ITEM.ORDERED_QTY - 1) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR.STATUS <> 'Stopped') AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE NOT (MR.STATUS <> 'Stopped') AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR.STATUS IS NULL) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.DOCSTATUS = 1)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR.DOCSTATUS = 2) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR.DOCSTATUS = 1) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE (MR.DOCSTATUS = 0) AND (MR_ITEM.ITEM_CODE = '_Test Item') AND (MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (MR_ITEM.QTY > MR_ITEM.ORDERED_QTY) AND (MR.STATUS <> 'Stopped')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM LEFT JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE ((MR.NAME IS NULL) AND (MR_ITEM.PARENT IS NOT NULL)) AND (MR_ITEM.ITEM_CODE = '_Test Item' AND MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND MR_ITEM.QTY > MR_ITEM.ORDERED_QTY)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM LEFT JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE ((MR.NAME IS NULL) AND (MR_ITEM.PARENT IS NULL)) AND (MR_ITEM.ITEM_CODE = '_Test Item' AND MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND MR_ITEM.QTY > MR_ITEM.ORDERED_QTY)",
        "SELECT * FROM TABMATERIAL REQUEST ITEM MR_ITEM RIGHT JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE ((MR_ITEM.PARENT IS NULL) AND (MR.NAME IS NOT NULL)) AND (MR.STATUS <> 'Stopped' AND MR.DOCSTATUS = 1)",
        "SELECT SUM(MR_ITEM.QTY - MR_ITEM.ORDERED_QTY) FROM TABMATERIAL REQUEST ITEM MR_ITEM INNER JOIN TABMATERIAL REQUEST MR ON MR_ITEM.PARENT = MR.NAME WHERE MR_ITEM.ITEM_CODE = '_Test Item' AND MR_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND MR_ITEM.QTY > MR_ITEM.ORDERED_QTY AND MR.STATUS <> 'Stopped' AND MR.DOCSTATUS = 1 HAVING COUNT(MR_ITEM.QTY - MR_ITEM.ORDERED_QTY) > COUNT(DISTINCT MR_ITEM.QTY - MR_ITEM.ORDERED_QTY) AND COUNT(DISTINCT MR_ITEM.QTY - MR_ITEM.ORDERED_QTY) > 1"
      ]
    },
    {
      "queryNo": 1048,
      "pathList": [
        "SELECT VALUATION_RATE FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT VALUATION_RATE FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT VALUATION_RATE FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT VALUATION_RATE FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item for Drop Shipping') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT VALUATION_RATE FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1049,
      "pathList": [
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE NOT (REFERENCE_NAME = 'EV00010') AND (REFERENCE_TYPE = 'Event') AND (STATUS = 'Open')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Event') AND (STATUS = 'Open')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE NOT (STATUS = 'Open') AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010')",
        "SELECT NAME, OWNER, DESCRIPTION FROM TABTODO WHERE (STATUS IS NULL) AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010')"
      ]
    },
    {
      "queryNo": 1050,
      "pathList": [
        "SELECT * FROM TABUSER WHERE (USER_TYPE = 'System User') AND (ENABLED = 1) AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE NOT (USER_TYPE = 'System User') AND (ENABLED = 1) AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE (USER_TYPE IS NULL) AND (ENABLED = 1) AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE (ENABLED = 2) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE (ENABLED = 1) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE (ENABLED = 0) AND (USER_TYPE = 'System User') AND (NAME NOT IN ('Administrator', 'Guest'))",
        "SELECT * FROM TABUSER WHERE (NAME IN ('Administrator', 'Guest')) AND (USER_TYPE = 'System User') AND (ENABLED = 1)"
      ]
    },
    {
      "queryNo": 1051,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups')) AND NOT (ITEM_CODE = 'Macbook Pro') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CUSTOMER, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('Standard Selling', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ('2017-02-09' NOT BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_FROM IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_FROM IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_UPTO IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_UPTO IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))"
      ]
    },
    {
      "queryNo": 1052,
      "pathList": [
        "SELECT NAME FROM TABPROJECT WHERE NOT (NAME = '_Test Project 1')",
        "SELECT NAME FROM TABPROJECT WHERE (NAME = '_Test Project 1')"
      ]
    },
    {
      "queryNo": 1053,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('9baa450d6c', '1397ec38ae'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (NAME IN ('9baa450d6c', '1397ec38ae')) AND (PARENT = '_T-Purchase Receipt-00005') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1054,
      "pathList": [
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.ACCOUNT_TYPE = 'Cost of Goods Sold')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE NOT (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.ACCOUNT_TYPE = 'Cost of Goods Sold')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY IS NULL) AND (TABACCOUNT.ACCOUNT_TYPE = 'Cost of Goods Sold')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE NOT (TABACCOUNT.ACCOUNT_TYPE = 'Cost of Goods Sold') AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.ACCOUNT_TYPE IS NULL) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts')"
      ]
    },
    {
      "queryNo": 1055,
      "pathList": [
        "SELECT STATUS FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00001')",
        "SELECT STATUS FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00001')"
      ]
    },
    {
      "queryNo": 1056,
      "pathList": [
      ]
    },
    {
      "queryNo": 1057,
      "pathList": [
        "SELECT * FROM TABUSER WHERE NOT (NAME = 'test@erpnext.com')",
        "SELECT * FROM TABUSER WHERE (NAME = 'test@erpnext.com')"
      ]
    },
    {
      "queryNo": 1058,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (NAME = '1295c79e1f')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (NAME = '1295c79e1f')"
      ]
    },
    {
      "queryNo": 1059,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABQUALITY INSPECTION WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABQUALITY INSPECTION WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABQUALITY INSPECTION WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1060,
      "pathList": [
        "SELECT LFT, RGT FROM TABTERRITORY WHERE NOT (NAME = '_Test Territory')",
        "SELECT LFT, RGT FROM TABTERRITORY WHERE (NAME = '_Test Territory')"
      ]
    },
    {
      "queryNo": 1061,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABLEAVE APPLICATION WHERE NOT (NAME = 'LAP/00006')",
        "SELECT MODIFIED, DOCSTATUS FROM TABLEAVE APPLICATION WHERE (NAME = 'LAP/00006')"
      ]
    },
    {
      "queryNo": 1062,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Bank USD - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Bank USD - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL)",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Bank USD - _TC' HAVING COUNT(DEBIT) > COUNT(DISTINCT DEBIT) AND COUNT(DISTINCT DEBIT) > 1",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Bank USD - _TC' HAVING COUNT(CREDIT) > COUNT(DISTINCT CREDIT) AND COUNT(DISTINCT CREDIT) > 1"
      ]
    },
    {
      "queryNo": 1063,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME <= 'Administrator')",
        "SELECT NAME FROM TABUSER WHERE (NAME <= 'Administrator')"
      ]
    },
    {
      "queryNo": 1064,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (COMPANY = 'COA from Existing Company') AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (COMPANY = 'COA from Existing Company') AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = -1) AND (COMPANY = 'COA from Existing Company') AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY = 'COA from Existing Company') AND (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = 'COA from Existing Company') AND (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Depreciation')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Depreciation') AND (IS_GROUP = 0) AND (COMPANY = 'COA from Existing Company')",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND (IS_GROUP = 0) AND (COMPANY = 'COA from Existing Company')"
      ]
    },
    {
      "queryNo": 1065,
      "pathList": [
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABSALES INVOICE ITEM WHERE NOT (PARENT = 'SINV-00017')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABSALES INVOICE ITEM WHERE (PARENT = 'SINV-00017')",
        "SELECT ITEM_CODE, QTY, SERIAL_NO, BATCH_NO, PARENTTYPE FROM TABSALES INVOICE ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1066,
      "pathList": [
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 3) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 1) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE NOT (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 2) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 1) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 0) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM RIGHT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM.NAME IS NOT NULL) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME RIGHT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM_ITEM.ITEM_CODE IS NULL) AND (ITEM.NAME IS NOT NULL)) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING count(*) > 1",
        "SELECT ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 GROUP BY ITEM.STOCK_UOM HAVING count(DISTINCT BOM_ITEM.ITEM_CODE) > 1",
        "SELECT BOM_ITEM.ITEM_CODE FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE HAVING count(DISTINCT ITEM.STOCK_UOM) > 1",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 1 AS QTY, ITEM.STOCK_UOM FROM TABBOM ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item 2-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING COUNT(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) AND COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > 1"
      ]
    },
    {
      "queryNo": 1067,
      "pathList": [
        "SELECT NAME, FILE_NAME, FILE_URL, IS_PRIVATE FROM TABFILE WHERE (TABFILE.ATTACHED_TO_NAME = 'EV00013') AND (TABFILE.ATTACHED_TO_DOCTYPE = 'Event')",
        "SELECT NAME, FILE_NAME, FILE_URL, IS_PRIVATE FROM TABFILE WHERE NOT (TABFILE.ATTACHED_TO_NAME = 'EV00013') AND (TABFILE.ATTACHED_TO_DOCTYPE = 'Event')",
        "SELECT NAME, FILE_NAME, FILE_URL, IS_PRIVATE FROM TABFILE WHERE (TABFILE.ATTACHED_TO_NAME IS NULL) AND (TABFILE.ATTACHED_TO_DOCTYPE = 'Event')",
        "SELECT NAME, FILE_NAME, FILE_URL, IS_PRIVATE FROM TABFILE WHERE NOT (TABFILE.ATTACHED_TO_DOCTYPE = 'Event') AND (TABFILE.ATTACHED_TO_NAME = 'EV00013')",
        "SELECT NAME, FILE_NAME, FILE_URL, IS_PRIVATE FROM TABFILE WHERE (TABFILE.ATTACHED_TO_DOCTYPE IS NULL) AND (TABFILE.ATTACHED_TO_NAME = 'EV00013')"
      ]
    },
    {
      "queryNo": 1068,
      "pathList": [
        "SELECT MAX(RGT) FROM TABFILE HAVING COUNT(RGT) > COUNT(DISTINCT RGT) AND COUNT(DISTINCT RGT) > 1"
      ]
    },
    {
      "queryNo": 1069,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE (PARENT = 'PE-00009') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE NOT (PARENT = 'PE-00009') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE NOT (PARENTTYPE = 'Payment Entry') AND (PARENT = 'PE-00009') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PE-00009') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE NOT (PARENTFIELD = 'deductions') AND (PARENT = 'PE-00009') AND (PARENTTYPE = 'Payment Entry') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PE-00009') AND (PARENTTYPE = 'Payment Entry') AND (NAME NOT IN ('0d0e3f0204'))",
        "SELECT NAME FROM TABPAYMENT ENTRY DEDUCTION WHERE (NAME IN ('0d0e3f0204')) AND (PARENT = 'PE-00009') AND (PARENTTYPE = 'Payment Entry') AND (PARENTFIELD = 'deductions')"
      ]
    },
    {
      "queryNo": 1070,
      "pathList": [
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT LANDED_COST_VOUCHER_AMOUNT FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1071,
      "pathList": [
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder', '_Test Variant Item-S')) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE NOT IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder', '_Test Variant Item-S')) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder', '_Test Variant Item-S'))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder', '_Test Variant Item-S'))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder', '_Test Variant Item-S'))"
      ]
    },
    {
      "queryNo": 1072,
      "pathList": [
        "SELECT NAME FROM TABEXPENSE CLAIM WHERE NOT (TABEXPENSE CLAIM.APPROVAL_STATUS = 'Draft')",
        "SELECT NAME FROM TABEXPENSE CLAIM WHERE (TABEXPENSE CLAIM.APPROVAL_STATUS = 'Draft')",
        "SELECT NAME FROM TABEXPENSE CLAIM WHERE (TABEXPENSE CLAIM.APPROVAL_STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1073,
      "pathList": [
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343') AND (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343') AND (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.EMAIL IS NULL) AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343') AND (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343') AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0 + 1) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0 - 1) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com') AND (IFNULL(TABEMAIL UNSUBSCRIBE.NAME, '') <> '624d3b0343')",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE (((TABEMAIL UNSUBSCRIBE.NAME IS NOT NULL))) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com' AND TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)",
        "SELECT TABEMAIL UNSUBSCRIBE.NAME FROM TABEMAIL UNSUBSCRIBE WHERE ((TABEMAIL UNSUBSCRIBE.NAME IS NULL)) AND (TABEMAIL UNSUBSCRIBE.EMAIL = 'test@example.com' AND TABEMAIL UNSUBSCRIBE.GLOBAL_UNSUBSCRIBE = 1.0)"
      ]
    },
    {
      "queryNo": 1074,
      "pathList": [
        "SELECT YEAR_START_DATE FROM TABFISCAL YEAR WHERE NOT (NAME = '_Test Fiscal Year 2013')",
        "SELECT YEAR_START_DATE FROM TABFISCAL YEAR WHERE (NAME = '_Test Fiscal Year 2013')"
      ]
    },
    {
      "queryNo": 1075,
      "pathList": [
      ]
    },
    {
      "queryNo": 1076,
      "pathList": [
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00017') AND (ITEM_CODE = '_Test Item')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00017') AND (ITEM_CODE = '_Test Item')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00017') AND (ITEM_CODE = '_Test Item')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'DN-00017') AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note') AND (ITEM_CODE = '_Test Item')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00017')",
        "SELECT ABS(STOCK_VALUE_DIFFERENCE / ACTUAL_QTY) FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00017')"
      ]
    },
    {
      "queryNo": 1077,
      "pathList": [
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (EMPLOYEE IS NULL) AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 3) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (STATUS NOT IN ('Open', 'Approved')) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (TO_DATE >= '2013-01-01') AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (TO_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE <= '2013-01-05') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (FROM_DATE <= '2013-01-05') AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (NAME <> 'LAP/00003')",
        "SELECT NAME, LEAVE_TYPE, POSTING_DATE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (NAME <> 'LAP/00003') AND (EMPLOYEE = '_T-Employee-0002') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE >= '2013-01-01') AND (FROM_DATE <= '2013-01-05')"
      ]
    },
    {
      "queryNo": 1078,
      "pathList": [
        "SELECT MAX(char_length(NAME)) FROM TABEVENT HAVING COUNT(char_length(NAME)) > COUNT(DISTINCT char_length(NAME)) AND COUNT(DISTINCT char_length(NAME)) > 1"
      ]
    },
    {
      "queryNo": 1079,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group')) AND NOT (ITEM_CODE = '_Test Item') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 2) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BUYING = 0) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CUSTOMER, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(SUPPLIER, '') NOT IN ('_Test Supplier USD', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(SUPPLIER_TYPE, '') NOT IN ('_Test Supplier Type', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('Standard Buying', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ('2017-02-09' NOT BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (BUYING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') = '') AND (IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '')) AND (IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '')) AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_FROM IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_FROM IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_UPTO IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_UPTO IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND BUYING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') = '' AND IFNULL(SUPPLIER, '') IN ('_Test Supplier USD', '') AND IFNULL(SUPPLIER_TYPE, '') IN ('_Test Supplier Type', '') AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Buying', ''))"
      ]
    },
    {
      "queryNo": 1080,
      "pathList": [
        "SELECT * FROM TABUSERROLE WHERE (PARENT = 'testdelete@example.com') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE NOT (PARENT = 'testdelete@example.com') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'testdelete@example.com')",
        "SELECT * FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'testdelete@example.com')"
      ]
    },
    {
      "queryNo": 1081,
      "pathList": [
        "SELECT NAME FROM TABSALES PERSON WHERE (LFT = 2) AND (RGT >= 2)",
        "SELECT NAME FROM TABSALES PERSON WHERE (LFT = 1) AND (RGT >= 2)",
        "SELECT NAME FROM TABSALES PERSON WHERE (LFT = 0) AND (RGT >= 2)",
        "SELECT NAME FROM TABSALES PERSON WHERE (RGT = 3) AND (LFT <= 1)",
        "SELECT NAME FROM TABSALES PERSON WHERE (RGT = 2) AND (LFT <= 1)",
        "SELECT NAME FROM TABSALES PERSON WHERE (RGT = 1) AND (LFT <= 1)"
      ]
    },
    {
      "queryNo": 1082,
      "pathList": [
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (PURCHASE_DOCUMENT_TYPE = 'Stock Entry') AND (PURCHASE_DOCUMENT_NO = 'STE-00019')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE NOT (PURCHASE_DOCUMENT_TYPE = 'Stock Entry') AND (PURCHASE_DOCUMENT_NO = 'STE-00019')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (PURCHASE_DOCUMENT_TYPE IS NULL) AND (PURCHASE_DOCUMENT_NO = 'STE-00019')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE NOT (PURCHASE_DOCUMENT_NO = 'STE-00019') AND (PURCHASE_DOCUMENT_TYPE = 'Stock Entry')",
        "SELECT NAME, DOCSTATUS FROM TABSERIAL NO WHERE (PURCHASE_DOCUMENT_NO IS NULL) AND (PURCHASE_DOCUMENT_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 1083,
      "pathList": [
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE (DELIVERY_NOTE = 'DN-00009') AND (DOCSTATUS = 1)",
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE NOT (DELIVERY_NOTE = 'DN-00009') AND (DOCSTATUS = 1)",
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE (DELIVERY_NOTE IS NULL) AND (DOCSTATUS = 1)",
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 2) AND (DELIVERY_NOTE = 'DN-00009')",
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 1) AND (DELIVERY_NOTE = 'DN-00009')",
        "SELECT DN_DETAIL, QTY FROM TABSALES INVOICE ITEM WHERE (DOCSTATUS = 0) AND (DELIVERY_NOTE = 'DN-00009')"
      ]
    },
    {
      "queryNo": 1084,
      "pathList": [
        "SELECT * FROM TABWAREHOUSE WHERE NOT (NAME = 'All Warehouses - _TC1')",
        "SELECT * FROM TABWAREHOUSE WHERE (NAME = 'All Warehouses - _TC1')"
      ]
    },
    {
      "queryNo": 1086,
      "pathList": [
        "SELECT ORDERED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE NOT (TABBIN.WAREHOUSE = '_Test Warehouse - _TC') AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE (TABBIN.WAREHOUSE IS NULL) AND (TABBIN.ITEM_CODE = '_Test Item')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE NOT (TABBIN.ITEM_CODE = '_Test Item') AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ORDERED_QTY FROM TABBIN WHERE (TABBIN.ITEM_CODE IS NULL) AND (TABBIN.WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1087,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN SALES ORDER WHERE NOT (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN SALES ORDER WHERE (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN SALES ORDER WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1088,
      "pathList": [
        "SELECT * FROM TABWEB FORM WHERE NOT (NAME = 'manage-events')",
        "SELECT * FROM TABWEB FORM WHERE (NAME = 'manage-events')"
      ]
    },
    {
      "queryNo": 1089,
      "pathList": [
        "SELECT DOCSTATUS FROM TABTIMESHEET WHERE NOT (NAME = 'TS-00015')",
        "SELECT DOCSTATUS FROM TABTIMESHEET WHERE (NAME = 'TS-00015')"
      ]
    },
    {
      "queryNo": 1090,
      "pathList": [
      ]
    },
    {
      "queryNo": 1091,
      "pathList": [
      ]
    },
    {
      "queryNo": 1092,
      "pathList": [
        "SELECT NAME FROM TABVEHICLE WHERE NOT (NAME = 'Z29BOJUG0R')",
        "SELECT NAME FROM TABVEHICLE WHERE (NAME = 'Z29BOJUG0R')"
      ]
    },
    {
      "queryNo": 1093,
      "pathList": [
        "SELECT DOCSTATUS FROM TABSALARY SLIP WHERE NOT (NAME = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT DOCSTATUS FROM TABSALARY SLIP WHERE (NAME = 'Sal Slip/_T-Employee-0001/00001')"
      ]
    },
    {
      "queryNo": 1094,
      "pathList": [
        "SELECT NAME FROM TABMONTHLY DISTRIBUTION WHERE NOT (NAME = '_Test Distribution')",
        "SELECT NAME FROM TABMONTHLY DISTRIBUTION WHERE (NAME = '_Test Distribution')"
      ]
    },
    {
      "queryNo": 1095,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY WHERE (TABJOURNAL ENTRY.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABJOURNAL ENTRY WHERE (TABJOURNAL ENTRY.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABJOURNAL ENTRY WHERE (TABJOURNAL ENTRY.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1096,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (PURCHASE_RECEIPT_NO = '_T-Purchase Receipt-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PURCHASE_RECEIPT_NO = '_T-Purchase Receipt-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (PURCHASE_RECEIPT_NO IS NULL)"
      ]
    },
    {
      "queryNo": 1097,
      "pathList": [
        "SELECT DEPRECIATION_COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DEPRECIATION_COST_CENTER FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 1098,
      "pathList": [
        "SELECT * FROM TABTERRITORY WHERE NOT (IFNULL(PARENT_TERRITORY, '') = '')",
        "SELECT * FROM TABTERRITORY WHERE (IFNULL(PARENT_TERRITORY, '') = '')",
        "SELECT * FROM TABTERRITORY WHERE ((PARENT_TERRITORY IS NOT NULL))",
        "SELECT * FROM TABTERRITORY WHERE (PARENT_TERRITORY IS NULL)"
      ]
    },
    {
      "queryNo": 1099,
      "pathList": [
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE = '_Test Service Product Bundle') AND (WAREHOUSE = NULL)",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Service Product Bundle') AND (WAREHOUSE = NULL)",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = NULL)",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = NULL) AND (ITEM_CODE = '_Test Service Product Bundle')",
        "SELECT PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Service Product Bundle')"
      ]
    },
    {
      "queryNo": 1100,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'ef47be1c44', '5d40438162', '71b8b15646')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1101,
      "pathList": [
        "SELECT PROJECT, ITEM_CODE, UOM FROM TABPURCHASE ORDER ITEM WHERE NOT (NAME = '20bb7cad4e')",
        "SELECT PROJECT, ITEM_CODE, UOM FROM TABPURCHASE ORDER ITEM WHERE (NAME = '20bb7cad4e')"
      ]
    },
    {
      "queryNo": 1102,
      "pathList": [
        "SELECT NAME, COMPANY FROM TABWAREHOUSE WHERE (DISABLED = 1)",
        "SELECT NAME, COMPANY FROM TABWAREHOUSE WHERE (DISABLED = 0)",
        "SELECT NAME, COMPANY FROM TABWAREHOUSE WHERE (DISABLED = -1)"
      ]
    },
    {
      "queryNo": 1103,
      "pathList": [
        "SELECT * FROM TABFILE WHERE NOT (FOLDER = '1bee6b5190')",
        "SELECT * FROM TABFILE WHERE (FOLDER = '1bee6b5190')",
        "SELECT * FROM TABFILE WHERE (FOLDER IS NULL)",
        "SELECT COUNT(NAME) FROM TABFILE WHERE FOLDER = '1bee6b5190' HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 1104,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Employee', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Accounts Manager', 'Analytics', 'Blogger', 'Fleet Manager', 'HR User', 'Item Manager', 'Knowledge Base Editor', 'Maintenance Manager', 'Manufacturing Manager', 'Newsletter Manager', 'Projects User', 'Purchase Master Manager', 'Quality Manager', 'Sales Manager', 'Sales User', 'Stock User', 'Support Team', 'Website Manager', '_Test Role'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Employee', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Accounts Manager', 'Analytics', 'Blogger', 'Fleet Manager', 'HR User', 'Item Manager', 'Knowledge Base Editor', 'Maintenance Manager', 'Manufacturing Manager', 'Newsletter Manager', 'Projects User', 'Purchase Master Manager', 'Quality Manager', 'Sales Manager', 'Sales User', 'Stock User', 'Support Team', 'Website Manager', '_Test Role'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Employee', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Accounts Manager', 'Analytics', 'Blogger', 'Fleet Manager', 'HR User', 'Item Manager', 'Knowledge Base Editor', 'Maintenance Manager', 'Manufacturing Manager', 'Newsletter Manager', 'Projects User', 'Purchase Master Manager', 'Quality Manager', 'Sales Manager', 'Sales User', 'Stock User', 'Support Team', 'Website Manager', '_Test Role'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Employee', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Accounts Manager', 'Analytics', 'Blogger', 'Fleet Manager', 'HR User', 'Item Manager', 'Knowledge Base Editor', 'Maintenance Manager', 'Manufacturing Manager', 'Newsletter Manager', 'Projects User', 'Purchase Master Manager', 'Quality Manager', 'Sales Manager', 'Sales User', 'Stock User', 'Support Team', 'Website Manager', '_Test Role')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('Administrator', 'System Manager', 'Accounts Manager', 'Accounts User', 'All', 'Blogger', 'Guest', 'Knowledge Base Contributor', 'Knowledge Base Editor', 'Maintenance Manager', 'Maintenance User', 'Newsletter Manager', 'Purchase Manager', 'Purchase Master Manager', 'Purchase User', 'Report Manager', 'Sales Manager', 'Sales Master Manager', 'Sales User', 'Website Manager', 'Employee', 'Stock User', 'Auditor', 'Stock Manager', 'Manufacturing Manager', 'Supplier', 'Projects User', 'Projects Manager', 'HR User', 'Manufacturing User', 'Item Manager', 'HR Manager', 'Fleet Manager', 'Leave Approver', 'Expense Approver', 'Quality Manager', 'Support Team', 'Instructor', 'Customer', 'Student', 'Analytics', 'Accounts Manager', 'Analytics', 'Blogger', 'Fleet Manager', 'HR User', 'Item Manager', 'Knowledge Base Editor', 'Maintenance Manager', 'Manufacturing Manager', 'Newsletter Manager', 'Projects User', 'Purchase Master Manager', 'Quality Manager', 'Sales Manager', 'Sales User', 'Stock User', 'Support Team', 'Website Manager', '_Test Role')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 1105,
      "pathList": [
        "SELECT PARENT, FIELDNAME, OPTIONS FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Dynamic Link')",
        "SELECT PARENT, FIELDNAME, OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE = 'Dynamic Link')",
        "SELECT PARENT, FIELDNAME, OPTIONS FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1106,
      "pathList": [
        "SELECT OWNER FROM TABUSER WHERE NOT (NAME = 'Administrator')",
        "SELECT OWNER FROM TABUSER WHERE (NAME = 'Administrator')"
      ]
    },
    {
      "queryNo": 1107,
      "pathList": [
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_TYPE = 'Purchase Receipt') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (ITEM_CODE = '_Test Item')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT QTY_AFTER_TRANSACTION, STOCK_VALUE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VOUCHER_NO = '_T-Purchase Receipt-00003') AND (VOUCHER_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 1108,
      "pathList": [
      ]
    },
    {
      "queryNo": 1109,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.DOCSTATUS = 1) AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE NOT (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.DOCSTATUS = 1) AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (ITEM.ITEM_CODE IS NULL) AND (PRO.DOCSTATUS = 1) AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (PRO.DOCSTATUS = 2) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (PRO.DOCSTATUS = 1) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (PRO.DOCSTATUS = 0) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE NOT (PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC') AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE (PRO.SOURCE_WAREHOUSE IS NULL) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PRO.DOCSTATUS = 1)",
        "SELECT * FROM TABPRODUCTION ORDER PRO LEFT JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE ((ITEM.PARENT IS NULL) AND (PRO.NAME IS NOT NULL)) AND (PRO.DOCSTATUS = 1 AND PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC')",
        "SELECT * FROM TABPRODUCTION ORDER PRO RIGHT JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE ((PRO.NAME IS NULL) AND (ITEM.PARENT IS NOT NULL)) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT * FROM TABPRODUCTION ORDER PRO RIGHT JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE ((PRO.NAME IS NULL) AND (ITEM.PARENT IS NULL)) AND (ITEM.ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT SUM(REQUIRED_QTY - TRANSFERRED_QTY) FROM TABPRODUCTION ORDER PRO INNER JOIN TABPRODUCTION ORDER ITEM ITEM ON ITEM.PARENT = PRO.NAME WHERE ITEM.ITEM_CODE = '_Test Item Home Desktop 100' AND PRO.DOCSTATUS = 1 AND PRO.SOURCE_WAREHOUSE = '_Test Warehouse 2 - _TC' HAVING COUNT(REQUIRED_QTY - TRANSFERRED_QTY) > COUNT(DISTINCT REQUIRED_QTY - TRANSFERRED_QTY) AND COUNT(DISTINCT REQUIRED_QTY - TRANSFERRED_QTY) > 1"
      ]
    },
    {
      "queryNo": 1110,
      "pathList": [
        "SELECT NAME FROM TABADDRESS WHERE NOT (NAME = '_Test Address-Office')",
        "SELECT NAME FROM TABADDRESS WHERE (NAME = '_Test Address-Office')"
      ]
    },
    {
      "queryNo": 1111,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (TABITEM.TOTAL_PROJECTED_QTY = 0.0 + 1)",
        "SELECT NAME FROM TABITEM WHERE (TABITEM.TOTAL_PROJECTED_QTY = 0.0)",
        "SELECT NAME FROM TABITEM WHERE (TABITEM.TOTAL_PROJECTED_QTY = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1112,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENTTYPE = 'Quotation') AND (PARENT = '_T-Quotation-00004') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Quotation-00004') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (NAME NOT IN ('QUOD/00007', 'QUOD/00008'))",
        "SELECT NAME FROM TABQUOTATION ITEM WHERE (NAME IN ('QUOD/00007', 'QUOD/00008')) AND (PARENT = '_T-Quotation-00004') AND (PARENTTYPE = 'Quotation') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1113,
      "pathList": [
        "SELECT * FROM TABCUSTOM DOCPERM WHERE NOT (TABCUSTOM DOCPERM.PARENT = 'Industry Type')",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (TABCUSTOM DOCPERM.PARENT = 'Industry Type')",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (TABCUSTOM DOCPERM.PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1114,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = '_Test Product Bundle Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Product Bundle Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups')) AND NOT (ITEM_CODE = '_Test Product Bundle Item') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = '_Test Product Bundle Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = '_Test Product Bundle Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('_Test Item Group Desktops', 'All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER, '') NOT IN ('_Test Customer', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER_GROUP, '') NOT IN ('_Test Customer Group', 'All Customer Groups', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(TERRITORY, '') NOT IN ('_Test Territory', 'All Territories', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('Standard Selling', '')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ('2017-02-09' NOT BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31')) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((TERRITORY IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((TERRITORY IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_FROM IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_FROM IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_UPTO IS NOT NULL))) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_UPTO IS NULL)) AND ((ITEM_CODE = '_Test Product Bundle Item' OR IFNULL(ITEM_GROUP, '') IN ('_Test Item Group Desktops', 'All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))"
      ]
    },
    {
      "queryNo": 1115,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE NOT (NAME = 'Individual')",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (NAME = 'Individual')"
      ]
    },
    {
      "queryNo": 1116,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Administrator') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('840a017172', 'a8aeb4dda8', 'fb92eac658', '2f0b4f7942', '295edbfb91', 'ea3354d8bd', 'ae196db87f', '14607b04e4', 'ee65d39cdb', '9a873503c7', '63ddbbc65d', '550f629631', 'f88424d645', '93962fb409', '2776be196f', '767caf1a89', 'eef45bb10b', '8606e302fa', '0dc15b9feb', 'd07210c929', '15e0ff6ecd', '4dabbc20ab', 'bbd0220737', '8fc9cf07fb', '4e3bdaa967', 'ff26dd60d4', 'e6e009ef82', 'bb58f2d291', '0ae1a69f66', '27d84ccc37', '1953579051', 'e709bd7103', '5d9817f9d9', '9e29a83a26', 'd79f19b8c9', 'dcdf15a4fe', '1403958824', '713d246c3f', 'daa263b410', 'b28ba6a464', '875ae75ef7', 'ec9342c5c5', '9fe4d17ec6', '73e83c7986', '3ee9a82a34', '5e989bb458', 'ea6432dcc4', 'bd33659b90', 'e9ebc25909', '6c0b5d5cef')) AND (PARENT = 'Administrator') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1117,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABBUDGET WHERE NOT (AMENDED_FROM = '_Test Cost Center - _TC/_Test Fiscal Year 2013/001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABBUDGET WHERE (AMENDED_FROM = '_Test Cost Center - _TC/_Test Fiscal Year 2013/001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABBUDGET WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1118,
      "pathList": [
      ]
    },
    {
      "queryNo": 1119,
      "pathList": [
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE (PARENT = '_T-Purchase Receipt-00003') AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE NOT (PARENT = '_T-Purchase Receipt-00003') AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE (PARENT IS NULL) AND (EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1))",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE (NOT EXISTS (SELECT NAME FROM TABITEM WHERE NAME = PR_ITEM.ITEM_CODE AND IS_STOCK_ITEM = 1)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (NAME = PR_ITEM.ITEM_CODE) AND (IS_STOCK_ITEM = 1)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE NOT (NAME = PR_ITEM.ITEM_CODE) AND (IS_STOCK_ITEM = 1)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (PR_ITEM.ITEM_CODE IS NULL) AND (IS_STOCK_ITEM = 1)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 2) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 1) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = '_T-Purchase Receipt-00003')",
        "SELECT PR_ITEM.ITEM_CODE, PR_ITEM.DESCRIPTION, PR_ITEM.QTY, PR_ITEM.BASE_RATE, PR_ITEM.BASE_AMOUNT, PR_ITEM.NAME FROM TABPURCHASE RECEIPT ITEM PR_ITEM WHERE EXISTS (SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 0) AND (NAME = PR_ITEM.ITEM_CODE)) AND (PARENT = '_T-Purchase Receipt-00003')"
      ]
    },
    {
      "queryNo": 1120,
      "pathList": [
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE NOT ((SELECT COUNT(*) FROM TABTERRITORY T2 WHERE T2.LFT < T1.LFT AND T2.RGT > T1.RGT) = 0)",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE ((SELECT COUNT(*) FROM TABTERRITORY T2 WHERE T2.LFT < T1.LFT AND T2.RGT > T1.RGT) = 0)",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.LFT = T1.LFT + 1) AND (T2.RGT > T1.RGT))",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.LFT = T1.LFT) AND (T2.RGT > T1.RGT))",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.LFT = T1.LFT - 1) AND (T2.RGT > T1.RGT))",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.RGT = T1.RGT + 1) AND (T2.LFT < T1.LFT))",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.RGT = T1.RGT) AND (T2.LFT < T1.LFT))",
        "SELECT T1.NAME FROM TABTERRITORY T1 WHERE EXISTS (SELECT * FROM TABTERRITORY T2 WHERE (T2.RGT = T1.RGT - 1) AND (T2.LFT < T1.LFT))"
      ]
    },
    {
      "queryNo": 1121,
      "pathList": [
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY COST WHERE (EMPLOYEE = '_T-Employee-0001') AND (ACTIVITY_TYPE = '_Test Activity Type')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY COST WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (ACTIVITY_TYPE = '_Test Activity Type')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY COST WHERE (EMPLOYEE IS NULL) AND (ACTIVITY_TYPE = '_Test Activity Type')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY COST WHERE NOT (ACTIVITY_TYPE = '_Test Activity Type') AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT COSTING_RATE, BILLING_RATE FROM TABACTIVITY COST WHERE (ACTIVITY_TYPE IS NULL) AND (EMPLOYEE = '_T-Employee-0001')"
      ]
    },
    {
      "queryNo": 1122,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = 2)",
        "SELECT NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = 1)",
        "SELECT NAME FROM TABFILE WHERE (IS_ATTACHMENTS_FOLDER = 0)"
      ]
    },
    {
      "queryNo": 1123,
      "pathList": [
        "SELECT NAME, STATUS, COMMUNICATION, MESSAGE, SENDER, REFERENCE_DOCTYPE, REFERENCE_NAME, UNSUBSCRIBE_PARAM, UNSUBSCRIBE_METHOD, EXPOSE_RECIPIENTS, SHOW_AS_CC FROM TABEMAIL QUEUE WHERE NOT (NAME = '72d13119ac')",
        "SELECT NAME, STATUS, COMMUNICATION, MESSAGE, SENDER, REFERENCE_DOCTYPE, REFERENCE_NAME, UNSUBSCRIBE_PARAM, UNSUBSCRIBE_METHOD, EXPOSE_RECIPIENTS, SHOW_AS_CC FROM TABEMAIL QUEUE WHERE (NAME = '72d13119ac')"
      ]
    },
    {
      "queryNo": 1124,
      "pathList": [
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE NOT (TABFILE.FOLDER = '1bee6b5190')",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (TABFILE.FOLDER = '1bee6b5190')",
        "SELECT NAME, FILE_NAME FROM TABFILE WHERE (TABFILE.FOLDER IS NULL)"
      ]
    },
    {
      "queryNo": 1125,
      "pathList": [
        "SELECT FIXED_ASSET_ACCOUNT, ACCUMULATED_DEPRECIATION_ACCOUNT, DEPRECIATION_EXPENSE_ACCOUNT FROM TABASSET CATEGORY ACCOUNT WHERE (COMPANY_NAME = '_Test Company') AND (PARENT = 'Computers')",
        "SELECT FIXED_ASSET_ACCOUNT, ACCUMULATED_DEPRECIATION_ACCOUNT, DEPRECIATION_EXPENSE_ACCOUNT FROM TABASSET CATEGORY ACCOUNT WHERE NOT (COMPANY_NAME = '_Test Company') AND (PARENT = 'Computers')",
        "SELECT FIXED_ASSET_ACCOUNT, ACCUMULATED_DEPRECIATION_ACCOUNT, DEPRECIATION_EXPENSE_ACCOUNT FROM TABASSET CATEGORY ACCOUNT WHERE (COMPANY_NAME IS NULL) AND (PARENT = 'Computers')",
        "SELECT FIXED_ASSET_ACCOUNT, ACCUMULATED_DEPRECIATION_ACCOUNT, DEPRECIATION_EXPENSE_ACCOUNT FROM TABASSET CATEGORY ACCOUNT WHERE NOT (PARENT = 'Computers') AND (COMPANY_NAME = '_Test Company')",
        "SELECT FIXED_ASSET_ACCOUNT, ACCUMULATED_DEPRECIATION_ACCOUNT, DEPRECIATION_EXPENSE_ACCOUNT FROM TABASSET CATEGORY ACCOUNT WHERE (PARENT IS NULL) AND (COMPANY_NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 1126,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE NOT (NAME = '_Test Gateway - INR')",
        "SELECT NAME FROM TABPAYMENT GATEWAY ACCOUNT WHERE (NAME = '_Test Gateway - INR')"
      ]
    },
    {
      "queryNo": 1127,
      "pathList": [
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENTTYPE = 'User') AND (PARENT = 'test_scheduler@example.com') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test_scheduler@example.com') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test_scheduler@example.com') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE NOT (PARENT = 'test_scheduler@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE NOT (PARENTFIELD = 'block_modules') AND (PARENTTYPE = 'User') AND (PARENT = 'test_scheduler@example.com')",
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'User') AND (PARENT = 'test_scheduler@example.com')"
      ]
    },
    {
      "queryNo": 1128,
      "pathList": [
        "SELECT NAME FROM TABOPPORTUNITY WHERE (STATUS <> 'Lost') AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE NOT (STATUS <> 'Lost') AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (STATUS IS NULL) AND (LEAD = '_T-Lead-00001')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE NOT (LEAD = '_T-Lead-00001') AND (STATUS <> 'Lost')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (LEAD IS NULL) AND (STATUS <> 'Lost')"
      ]
    },
    {
      "queryNo": 1129,
      "pathList": [
        "SELECT MAX(char_length(PARENTFIELD)) FROM TABUSER HAVING COUNT(char_length(PARENTFIELD)) > COUNT(DISTINCT char_length(PARENTFIELD)) AND COUNT(DISTINCT char_length(PARENTFIELD)) > 1"
      ]
    },
    {
      "queryNo": 1130,
      "pathList": [
        "SELECT ENABLED FROM TABINTEGRATION SERVICE WHERE NOT (NAME = 'LDAP')",
        "SELECT ENABLED FROM TABINTEGRATION SERVICE WHERE (NAME = 'LDAP')"
      ]
    },
    {
      "queryNo": 1131,
      "pathList": [
        "SELECT STATUS FROM TABTASK WHERE NOT (NAME = 'TASK00010')",
        "SELECT STATUS FROM TABTASK WHERE (NAME = 'TASK00010')"
      ]
    },
    {
      "queryNo": 1132,
      "pathList": [
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE NOT (DOCTYPE = 'Notification Control')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (DOCTYPE = 'Notification Control')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1133,
      "pathList": [
        "SELECT PARENT FROM TABBOM ITEM WHERE NOT (BOM_NO = 'BOM-_Test PPT Item SC A-001')",
        "SELECT PARENT FROM TABBOM ITEM WHERE (BOM_NO = 'BOM-_Test PPT Item SC A-001')",
        "SELECT PARENT FROM TABBOM ITEM WHERE (BOM_NO IS NULL)"
      ]
    },
    {
      "queryNo": 1134,
      "pathList": [
        "SELECT TOLERANCE FROM TABITEM WHERE NOT (NAME = '_Test Product Bundle Item')",
        "SELECT TOLERANCE FROM TABITEM WHERE (NAME = '_Test Product Bundle Item')"
      ]
    },
    {
      "queryNo": 1135,
      "pathList": [
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABINTEGRATION REQUEST WHERE NOT (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABINTEGRATION REQUEST WHERE (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABINTEGRATION REQUEST WHERE (REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1136,
      "pathList": [
        "SELECT * FROM TABDESKTOP ICON WHERE NOT (NAME = 'a1d2a9f4b2')",
        "SELECT * FROM TABDESKTOP ICON WHERE (NAME = 'a1d2a9f4b2')"
      ]
    },
    {
      "queryNo": 1137,
      "pathList": [
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (PARENT = 'Salary Slip Test Holiday List') AND (HOLIDAY_DATE >= '2017-02-09') AND (HOLIDAY_DATE <= '2017-02-15')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE NOT (PARENT = 'Salary Slip Test Holiday List') AND (HOLIDAY_DATE >= '2017-02-09') AND (HOLIDAY_DATE <= '2017-02-15')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (PARENT IS NULL) AND (HOLIDAY_DATE >= '2017-02-09') AND (HOLIDAY_DATE <= '2017-02-15')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE NOT (HOLIDAY_DATE >= '2017-02-09') AND (PARENT = 'Salary Slip Test Holiday List') AND (HOLIDAY_DATE <= '2017-02-15')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (HOLIDAY_DATE IS NULL) AND (PARENT = 'Salary Slip Test Holiday List')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE NOT (HOLIDAY_DATE <= '2017-02-15') AND (PARENT = 'Salary Slip Test Holiday List') AND (HOLIDAY_DATE >= '2017-02-09')"
      ]
    },
    {
      "queryNo": 1138,
      "pathList": [
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (EMPLOYEE IS NULL) AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (LEAVE_TYPE = '_Test Leave Type') AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS = 'Approved') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (LEAVE_TYPE IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (STATUS = 'Approved') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (STATUS = 'Approved') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND ((FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR TO_DATE BETWEEN '2013-01-01' AND '2015-12-31' OR (FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')))",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND NOT ((FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE BETWEEN '2013-01-01' AND '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND NOT ((FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE IS NULL) AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND NOT ((TO_DATE > '2015-12-31')) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (TO_DATE BETWEEN '2013-01-01' AND '2015-12-31') AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND NOT ((FROM_DATE < '2013-01-01' AND TO_DATE > '2015-12-31')) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (TO_DATE IS NULL) AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND NOT ((FROM_DATE < '2013-01-01')) AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE < '2013-01-01') AND (TO_DATE > '2015-12-31') AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (FROM_DATE < '2013-01-01') AND (TO_DATE > '2015-12-31') AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (FROM_DATE IS NULL) AND (TO_DATE > '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE NOT (TO_DATE > '2015-12-31') AND (FROM_DATE < '2013-01-01') AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (TO_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT EMPLOYEE, LEAVE_TYPE, FROM_DATE, TO_DATE, TOTAL_LEAVE_DAYS FROM TABLEAVE APPLICATION WHERE (TO_DATE IS NULL) AND (FROM_DATE < '2013-01-01') AND (FROM_DATE NOT BETWEEN '2013-01-01' AND '2015-12-31') AND (EMPLOYEE = '_T-Employee-0002') AND (LEAVE_TYPE = '_Test Leave Type') AND (STATUS = 'Approved') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1139,
      "pathList": [
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE (DL.LINK_DOCTYPE = 'Customer') AND (DL.LINK_NAME = '_Test Customer') AND (DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE NOT (DL.LINK_DOCTYPE = 'Customer') AND (DL.LINK_NAME = '_Test Customer') AND (DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE (DL.LINK_DOCTYPE IS NULL) AND (DL.LINK_NAME = '_Test Customer') AND (DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE NOT (DL.LINK_NAME = '_Test Customer') AND (DL.LINK_DOCTYPE = 'Customer') AND (DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE (DL.LINK_NAME IS NULL) AND (DL.LINK_DOCTYPE = 'Customer') AND (DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE NOT (DL.PARENTTYPE = 'Contact') AND (DL.LINK_DOCTYPE = 'Customer') AND (DL.LINK_NAME = '_Test Customer')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE (DL.PARENTTYPE IS NULL) AND (DL.LINK_DOCTYPE = 'Customer') AND (DL.LINK_NAME = '_Test Customer')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE NOT (C.NAME = DL.PARENT)) AND (DL.LINK_DOCTYPE = 'Customer' AND DL.LINK_NAME = '_Test Customer' AND DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE (C.NAME = DL.PARENT)) AND (DL.LINK_DOCTYPE = 'Customer' AND DL.LINK_NAME = '_Test Customer' AND DL.PARENTTYPE = 'Contact')",
        "SELECT PARENT, (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE C.NAME = DL.PARENT) AS IS_PRIMARY_CONTACT FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_CONTACT FROM TABCONTACT C WHERE (DL.PARENT IS NULL)) AND (DL.LINK_DOCTYPE = 'Customer' AND DL.LINK_NAME = '_Test Customer' AND DL.PARENTTYPE = 'Contact')"
      ]
    },
    {
      "queryNo": 1140,
      "pathList": [
        "SELECT DELIVERED_BY_SUPPLIER FROM TABSALES ORDER ITEM WHERE NOT (NAME = '21b1167610')",
        "SELECT DELIVERED_BY_SUPPLIER FROM TABSALES ORDER ITEM WHERE (NAME = '21b1167610')"
      ]
    },
    {
      "queryNo": 1141,
      "pathList": [
        "SELECT LFT, RGT FROM TABCOST CENTER WHERE NOT (NAME = '_Test Cost Center - _TC')",
        "SELECT LFT, RGT FROM TABCOST CENTER WHERE (NAME = '_Test Cost Center - _TC')"
      ]
    },
    {
      "queryNo": 1143,
      "pathList": [
      ]
    },
    {
      "queryNo": 1144,
      "pathList": [
      ]
    },
    {
      "queryNo": 1146,
      "pathList": [
      ]
    },
    {
      "queryNo": 1147,
      "pathList": [
        "SELECT CUSTOMER_NAME FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer USD')",
        "SELECT CUSTOMER_NAME FROM TABCUSTOMER WHERE (NAME = '_Test Customer USD')"
      ]
    },
    {
      "queryNo": 1148,
      "pathList": [
        "SELECT NAME FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '_Test Customer 1 Renamed') AND (REFERENCE_DOCTYPE = 'Customer')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '_Test Customer 1 Renamed') AND (REFERENCE_DOCTYPE = 'Customer')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (REFERENCE_NAME = '_Test Customer 1 Renamed') AND (REFERENCE_DOCTYPE = 'Customer')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (REFERENCE_NAME = '_Test Customer 1 Renamed') AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Customer')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (REFERENCE_NAME IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_DOCTYPE = 'Customer')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (REFERENCE_DOCTYPE = 'Customer') AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '_Test Customer 1 Renamed')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE IS NULL) AND (COMMUNICATION_TYPE = 'Comment') AND (REFERENCE_NAME = '_Test Customer 1 Renamed')"
      ]
    },
    {
      "queryNo": 1149,
      "pathList": [
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'invoices')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE NOT (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'invoices')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'invoices')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE NOT (PARENT = 'Payment Reconciliation') AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENTFIELD = 'invoices')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENTFIELD = 'invoices')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE NOT (PARENTFIELD = 'invoices') AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation')",
        "SELECT * FROM TABPAYMENT RECONCILIATION INVOICE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation')"
      ]
    },
    {
      "queryNo": 1150,
      "pathList": [
        "SELECT PARENT FROM TABUSERROLE WHERE (ROLE = 'System Manager') AND (PARENT <> 'Administrator') AND (PARENT IN (SELECT EMAIL FROM TABUSER WHERE ENABLED = 1))",
        "SELECT PARENT FROM TABUSERROLE WHERE NOT (ROLE = 'System Manager') AND (PARENT <> 'Administrator') AND (PARENT IN (SELECT EMAIL FROM TABUSER WHERE ENABLED = 1))",
        "SELECT PARENT FROM TABUSERROLE WHERE (ROLE IS NULL) AND (PARENT <> 'Administrator') AND (PARENT IN (SELECT EMAIL FROM TABUSER WHERE ENABLED = 1))",
        "SELECT PARENT FROM TABUSERROLE WHERE NOT (PARENT <> 'Administrator') AND (ROLE = 'System Manager') AND (PARENT IN (SELECT EMAIL FROM TABUSER WHERE ENABLED = 1))",
        "SELECT PARENT FROM TABUSERROLE WHERE (PARENT IS NULL) AND (ROLE = 'System Manager')",
        "SELECT PARENT FROM TABUSERROLE WHERE (PARENT NOT IN (SELECT EMAIL FROM TABUSER WHERE ENABLED = 1)) AND (ROLE = 'System Manager') AND (PARENT <> 'Administrator')",
        "SELECT PARENT FROM TABUSERROLE WHERE EXISTS (SELECT EMAIL FROM TABUSER WHERE (ENABLED = 2)) AND (ROLE = 'System Manager' AND PARENT <> 'Administrator')",
        "SELECT PARENT FROM TABUSERROLE WHERE EXISTS (SELECT EMAIL FROM TABUSER WHERE (ENABLED = 1)) AND (ROLE = 'System Manager' AND PARENT <> 'Administrator')",
        "SELECT PARENT FROM TABUSERROLE WHERE EXISTS (SELECT EMAIL FROM TABUSER WHERE (ENABLED = 0)) AND (ROLE = 'System Manager' AND PARENT <> 'Administrator')"
      ]
    },
    {
      "queryNo": 1151,
      "pathList": [
        "SELECT * FROM TABITEM ATTRIBUTE WHERE NOT (NAME = 'Test Size')",
        "SELECT * FROM TABITEM ATTRIBUTE WHERE (NAME = 'Test Size')"
      ]
    },
    {
      "queryNo": 1152,
      "pathList": [
        "SELECT MAX(char_length(PARENT)) FROM TABEVENT HAVING COUNT(char_length(PARENT)) > COUNT(DISTINCT char_length(PARENT)) AND COUNT(DISTINCT char_length(PARENT)) > 1"
      ]
    },
    {
      "queryNo": 1153,
      "pathList": [
        "SELECT CUSTOMER, CUSTOMER_NAME FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00015')",
        "SELECT CUSTOMER, CUSTOMER_NAME FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00015')"
      ]
    },
    {
      "queryNo": 1154,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN ITEM WHERE NOT (SALES_ORDER = 'SO-00027')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN ITEM WHERE (SALES_ORDER = 'SO-00027')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPRODUCTION PLAN ITEM WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1155,
      "pathList": [
        "SELECT DOCSTATUS FROM TABREQUEST FOR QUOTATION WHERE NOT (NAME = 'RFQ-00002')",
        "SELECT DOCSTATUS FROM TABREQUEST FOR QUOTATION WHERE (NAME = 'RFQ-00002')"
      ]
    },
    {
      "queryNo": 1156,
      "pathList": [
        "SELECT MAX(char_length(FIRST_NAME)) FROM TABUSER HAVING COUNT(char_length(FIRST_NAME)) > COUNT(DISTINCT char_length(FIRST_NAME)) AND COUNT(DISTINCT char_length(FIRST_NAME)) > 1"
      ]
    },
    {
      "queryNo": 1157,
      "pathList": [
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE (REFERENCE_DOCTYPE = 'User') AND (EMAIL = 'test@example.com') AND (REFERENCE_NAME = 'Administrator')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (REFERENCE_DOCTYPE = 'User') AND (EMAIL = 'test@example.com') AND (REFERENCE_NAME = 'Administrator')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE (REFERENCE_DOCTYPE IS NULL) AND (EMAIL = 'test@example.com') AND (REFERENCE_NAME = 'Administrator')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (EMAIL = 'test@example.com') AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE (EMAIL IS NULL) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE NOT (REFERENCE_NAME = 'Administrator') AND (REFERENCE_DOCTYPE = 'User') AND (EMAIL = 'test@example.com')",
        "SELECT NAME FROM TABEMAIL UNSUBSCRIBE WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_DOCTYPE = 'User') AND (EMAIL = 'test@example.com')"
      ]
    },
    {
      "queryNo": 1158,
      "pathList": [
        "SELECT PASSWORD FROM __AUTH WHERE (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (FIELDNAME = 'password') AND (ENCRYPTED = 1)",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (FIELDNAME = 'password') AND (ENCRYPTED = 1)",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (NAME = '_Test Email Account 1') AND (DOCTYPE = 'Email Account') AND (FIELDNAME = 'password') AND (ENCRYPTED = 1)",
        "SELECT PASSWORD FROM __AUTH WHERE NOT (FIELDNAME = 'password') AND (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (ENCRYPTED = 1)",
        "SELECT PASSWORD FROM __AUTH WHERE (ENCRYPTED = 2) AND (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (FIELDNAME = 'password')",
        "SELECT PASSWORD FROM __AUTH WHERE (ENCRYPTED = 1) AND (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (FIELDNAME = 'password')",
        "SELECT PASSWORD FROM __AUTH WHERE (ENCRYPTED = 0) AND (DOCTYPE = 'Email Account') AND (NAME = '_Test Email Account 1') AND (FIELDNAME = 'password')"
      ]
    },
    {
      "queryNo": 1159,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE NOT (IFNULL(PARENT_ITEM_GROUP, '') = 'Services')",
        "SELECT NAME FROM TABITEM GROUP WHERE (IFNULL(PARENT_ITEM_GROUP, '') = 'Services')",
        "SELECT NAME FROM TABITEM GROUP WHERE ((PARENT_ITEM_GROUP IS NOT NULL))",
        "SELECT NAME FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP IS NULL)"
      ]
    },
    {
      "queryNo": 1160,
      "pathList": [
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00030')",
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Delivery Note') AND (VOUCHER_NO = 'DN-00030')",
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'DN-00030')",
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'DN-00030') AND (VOUCHER_TYPE = 'Delivery Note')",
        "SELECT NAME FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Delivery Note')"
      ]
    },
    {
      "queryNo": 1161,
      "pathList": [
        "SELECT _COMMENTS FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer 1')",
        "SELECT _COMMENTS FROM TABCUSTOMER WHERE (NAME = '_Test Customer 1')"
      ]
    },
    {
      "queryNo": 1162,
      "pathList": [
        "SELECT NAME FROM TABPROJECT WHERE (TABPROJECT.STATUS = 'Open') AND (TABPROJECT.CUSTOMER = '_Test Customer USD')",
        "SELECT NAME FROM TABPROJECT WHERE NOT (TABPROJECT.STATUS = 'Open') AND (TABPROJECT.CUSTOMER = '_Test Customer USD')",
        "SELECT NAME FROM TABPROJECT WHERE (TABPROJECT.STATUS IS NULL) AND (TABPROJECT.CUSTOMER = '_Test Customer USD')",
        "SELECT NAME FROM TABPROJECT WHERE NOT (TABPROJECT.CUSTOMER = '_Test Customer USD') AND (TABPROJECT.STATUS = 'Open')",
        "SELECT NAME FROM TABPROJECT WHERE (TABPROJECT.CUSTOMER IS NULL) AND (TABPROJECT.STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 1163,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENT = 'PO-00005') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENT = 'PO-00005') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00005') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PO-00005') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'PO-00005') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PO-00005') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('cac0a55433'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (NAME IN ('cac0a55433')) AND (PARENT = 'PO-00005') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1164,
      "pathList": [
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE (PARENTTYPE = 'Product Bundle') AND (PARENT = '_Test Product Bundle Item') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE NOT (PARENTTYPE = 'Product Bundle') AND (PARENT = '_Test Product Bundle Item') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Product Bundle Item') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE NOT (PARENT = '_Test Product Bundle Item') AND (PARENTTYPE = 'Product Bundle') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Product Bundle') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Product Bundle') AND (PARENT = '_Test Product Bundle Item')",
        "SELECT * FROM TABPRODUCT BUNDLE ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Product Bundle') AND (PARENT = '_Test Product Bundle Item')"
      ]
    },
    {
      "queryNo": 1165,
      "pathList": [
        "SELECT MAX(char_length(REFERENCE_NAME)) FROM TABTODO HAVING COUNT(char_length(REFERENCE_NAME)) > COUNT(DISTINCT char_length(REFERENCE_NAME)) AND COUNT(DISTINCT char_length(REFERENCE_NAME)) > 1"
      ]
    },
    {
      "queryNo": 1166,
      "pathList": [
        "SELECT MODULE, CUSTOM FROM TABDOCTYPE WHERE NOT (NAME = 'Property Setter')",
        "SELECT MODULE, CUSTOM FROM TABDOCTYPE WHERE (NAME = 'Property Setter')"
      ]
    },
    {
      "queryNo": 1167,
      "pathList": [
        "SELECT CODE FROM TABCOUNTRY WHERE NOT (NAME = 'India')",
        "SELECT CODE FROM TABCOUNTRY WHERE (NAME = 'India')"
      ]
    },
    {
      "queryNo": 1168,
      "pathList": [
        "SELECT TASK FROM TABTASK DEPENDS ON WHERE NOT (PARENT = 'TASK00010')",
        "SELECT TASK FROM TABTASK DEPENDS ON WHERE (PARENT = 'TASK00010')",
        "SELECT TASK FROM TABTASK DEPENDS ON WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1169,
      "pathList": [
        "SELECT * FROM TABPOS ITEM GROUP WHERE (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'item_groups')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE NOT (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'item_groups')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE (PARENTTYPE IS NULL) AND (PARENT = '6125d62f89') AND (PARENTFIELD = 'item_groups')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE NOT (PARENT = '6125d62f89') AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE (PARENT IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENTFIELD = 'item_groups')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE NOT (PARENTFIELD = 'item_groups') AND (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89')",
        "SELECT * FROM TABPOS ITEM GROUP WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'POS Profile') AND (PARENT = '6125d62f89')"
      ]
    },
    {
      "queryNo": 1170,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE >= '2013-01-01') AND (POSTING_DATE <= '2013-02-14') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (VOUCHER_TYPE <> 'Period Closing Voucher') AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (VOUCHER_TYPE IS NULL) AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (NOT EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.NAME = GLE.ACCOUNT) AND (AC.LFT >= 377) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE NOT (AC.NAME = GLE.ACCOUNT) AND (AC.LFT >= 377) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (GLE.ACCOUNT IS NULL) AND (AC.LFT >= 377) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.LFT = 378) AND (AC.NAME = GLE.ACCOUNT) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.LFT = 377) AND (AC.NAME = GLE.ACCOUNT) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.LFT = 376) AND (AC.NAME = GLE.ACCOUNT) AND (AC.RGT <= 386)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.RGT = 387) AND (AC.NAME = GLE.ACCOUNT) AND (AC.LFT >= 377)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.RGT = 386) AND (AC.NAME = GLE.ACCOUNT) AND (AC.LFT >= 377)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE (AC.RGT = 385) AND (AC.NAME = GLE.ACCOUNT) AND (AC.LFT >= 377)) AND (POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386) HAVING COUNT(DEBIT) > COUNT(DISTINCT DEBIT) AND COUNT(DISTINCT DEBIT) > 1",
        "SELECT SUM(DEBIT) - SUM(CREDIT) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND EXISTS (SELECT NAME FROM TABACCOUNT AC WHERE AC.NAME = GLE.ACCOUNT AND AC.LFT >= 377 AND AC.RGT <= 386) HAVING COUNT(CREDIT) > COUNT(DISTINCT CREDIT) AND COUNT(DISTINCT CREDIT) > 1"
      ]
    },
    {
      "queryNo": 1171,
      "pathList": [
        "SELECT NAME, TEMPLATE FROM TABADDRESS TEMPLATE WHERE NOT (COUNTRY = 'India')",
        "SELECT NAME, TEMPLATE FROM TABADDRESS TEMPLATE WHERE (COUNTRY = 'India')",
        "SELECT NAME, TEMPLATE FROM TABADDRESS TEMPLATE WHERE (COUNTRY IS NULL)"
      ]
    },
    {
      "queryNo": 1172,
      "pathList": [
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (PROJECT = NULL) AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE NOT (PROJECT = NULL) AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (PROJECT IS NULL) AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 3) AND (PROJECT = NULL) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 2) AND (PROJECT = NULL) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 1) AND (PROJECT = NULL) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE PROJECT = NULL AND DOCSTATUS < 2 GROUP BY ACTIVITY_TYPE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABTIMESHEET DETAIL WHERE PROJECT = NULL AND DOCSTATUS < 2 HAVING count(DISTINCT ACTIVITY_TYPE) > 1",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE PROJECT = NULL AND DOCSTATUS < 2 GROUP BY ACTIVITY_TYPE HAVING COUNT(HOURS) > COUNT(DISTINCT HOURS) AND COUNT(DISTINCT HOURS) > 1"
      ]
    },
    {
      "queryNo": 1173,
      "pathList": [
        "SELECT NAME FROM TABINTEGRATION SERVICE WHERE (TABINTEGRATION SERVICE.ENABLED = 1.0 + 1)",
        "SELECT NAME FROM TABINTEGRATION SERVICE WHERE (TABINTEGRATION SERVICE.ENABLED = 1.0)",
        "SELECT NAME FROM TABINTEGRATION SERVICE WHERE (TABINTEGRATION SERVICE.ENABLED = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 1174,
      "pathList": [
        "SELECT PRODUCTION_ITEM, QTY FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00002')",
        "SELECT PRODUCTION_ITEM, QTY FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00002')"
      ]
    },
    {
      "queryNo": 1175,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00008') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PO-00008') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE NOT (PARENTFIELD = 'supplied_items') AND (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('e79888f684', 'bbfeee98df'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM SUPPLIED WHERE (NAME IN ('e79888f684', 'bbfeee98df')) AND (PARENT = 'PO-00008') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'supplied_items')"
      ]
    },
    {
      "queryNo": 1176,
      "pathList": [
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.DOCSTATUS = 1) AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE NOT (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.DOCSTATUS = 1) AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR_ITEM.PURCHASE_ORDER_ITEM IS NULL) AND (PR.DOCSTATUS = 1) AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 2) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 1) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.DOCSTATUS = 0) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.IS_RETURN = 0)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.IS_RETURN = 1) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.DOCSTATUS = 1)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.IS_RETURN = 0) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.DOCSTATUS = 1)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM INNER JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE (PR.IS_RETURN = -1) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e') AND (PR.DOCSTATUS = 1)",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM LEFT JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE ((PR.NAME IS NULL) AND (PR_ITEM.PARENT IS NOT NULL)) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e')",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM LEFT JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE ((PR.NAME IS NULL) AND (PR_ITEM.PARENT IS NULL)) AND (PR_ITEM.PURCHASE_ORDER_ITEM = '20bb7cad4e')",
        "SELECT PR_ITEM.NAME, PR_ITEM.AMOUNT, PR_ITEM.PARENT FROM TABPURCHASE RECEIPT ITEM PR_ITEM RIGHT JOIN TABPURCHASE RECEIPT PR ON PR.NAME = PR_ITEM.PARENT WHERE ((PR_ITEM.PARENT IS NULL) AND (PR.NAME IS NOT NULL)) AND (PR.DOCSTATUS = 1 AND PR.IS_RETURN = 0)"
      ]
    },
    {
      "queryNo": 1177,
      "pathList": [
        "SELECT DEFAULT_CURRENCY FROM TABCOMPANY WHERE NOT (NAME = '_Test Company 1')",
        "SELECT DEFAULT_CURRENCY FROM TABCOMPANY WHERE (NAME = '_Test Company 1')"
      ]
    },
    {
      "queryNo": 1178,
      "pathList": [
        "SELECT MAX(char_length(RESTRICT_IP)) FROM TABUSER HAVING COUNT(char_length(RESTRICT_IP)) > COUNT(DISTINCT char_length(RESTRICT_IP)) AND COUNT(DISTINCT char_length(RESTRICT_IP)) > 1"
      ]
    },
    {
      "queryNo": 1179,
      "pathList": [
        "SELECT ADVANCE_PAID FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00032')",
        "SELECT ADVANCE_PAID FROM TABSALES ORDER WHERE (NAME = 'SO-00032')"
      ]
    },
    {
      "queryNo": 1180,
      "pathList": [
        "SELECT * FROM TABSALARY STRUCTURE WHERE NOT (NAME = 'Daily Salary Structure Test for Salary Slip')",
        "SELECT * FROM TABSALARY STRUCTURE WHERE (NAME = 'Daily Salary Structure Test for Salary Slip')"
      ]
    },
    {
      "queryNo": 1181,
      "pathList": [
        "SELECT NAME FROM TABHOLIDAY LIST WHERE NOT (NAME = '_Test Holiday List')",
        "SELECT NAME FROM TABHOLIDAY LIST WHERE (NAME = '_Test Holiday List')"
      ]
    },
    {
      "queryNo": 1182,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (NAME IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193', '8865760296')) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 1183,
      "pathList": [
        "SELECT OPTIONS FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Table') AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Table') AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL) AND (PARENT = 'DocType')",
        "SELECT OPTIONS FROM TABCUSTOM FIELD WHERE NOT (PARENT = 'DocType') AND (FIELDTYPE = 'Table')",
        "SELECT OPTIONS FROM TABCUSTOM FIELD WHERE (PARENT IS NULL) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 1184,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE NOT (AMENDED_FROM = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE (AMENDED_FROM = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1185,
      "pathList": [
        "SELECT CURRENCY FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00021')",
        "SELECT CURRENCY FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00021')"
      ]
    },
    {
      "queryNo": 1186,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME > 's')",
        "SELECT NAME FROM TABUSER WHERE (NAME > 's')"
      ]
    },
    {
      "queryNo": 1187,
      "pathList": [
        "SELECT TABAUTHORIZATION RULE.TRANSACTION, TABAUTHORIZATION RULE.BASED_ON, TABAUTHORIZATION RULE.MASTER_NAME, TABAUTHORIZATION RULE.COMPANY, TABAUTHORIZATION RULE.SYSTEM_ROLE, TABAUTHORIZATION RULE.NAME, TABAUTHORIZATION RULE.MODIFIED, TABAUTHORIZATION RULE.DOCSTATUS FROM TABAUTHORIZATION RULE WHERE NOT (TABAUTHORIZATION RULE.APPROVING_ROLE = 'System Manager')",
        "SELECT TABAUTHORIZATION RULE.TRANSACTION, TABAUTHORIZATION RULE.BASED_ON, TABAUTHORIZATION RULE.MASTER_NAME, TABAUTHORIZATION RULE.COMPANY, TABAUTHORIZATION RULE.SYSTEM_ROLE, TABAUTHORIZATION RULE.NAME, TABAUTHORIZATION RULE.MODIFIED, TABAUTHORIZATION RULE.DOCSTATUS FROM TABAUTHORIZATION RULE WHERE (TABAUTHORIZATION RULE.APPROVING_ROLE = 'System Manager')",
        "SELECT TABAUTHORIZATION RULE.TRANSACTION, TABAUTHORIZATION RULE.BASED_ON, TABAUTHORIZATION RULE.MASTER_NAME, TABAUTHORIZATION RULE.COMPANY, TABAUTHORIZATION RULE.SYSTEM_ROLE, TABAUTHORIZATION RULE.NAME, TABAUTHORIZATION RULE.MODIFIED, TABAUTHORIZATION RULE.DOCSTATUS FROM TABAUTHORIZATION RULE WHERE (TABAUTHORIZATION RULE.APPROVING_ROLE IS NULL)"
      ]
    },
    {
      "queryNo": 1188,
      "pathList": [
        "SELECT * FROM TABTASK WHERE NOT (TABTASK.PROJECT = '_Test Project 1')",
        "SELECT * FROM TABTASK WHERE (TABTASK.PROJECT = '_Test Project 1')",
        "SELECT * FROM TABTASK WHERE (TABTASK.PROJECT IS NULL)"
      ]
    },
    {
      "queryNo": 1189,
      "pathList": [
        "SELECT NAME FROM TABEXPENSE CLAIM TYPE WHERE NOT (NAME = 'Food')",
        "SELECT NAME FROM TABEXPENSE CLAIM TYPE WHERE (NAME = 'Food')"
      ]
    },
    {
      "queryNo": 1190,
      "pathList": [
        "SELECT GLOBAL_UNSUBSCRIBE FROM TABEMAIL UNSUBSCRIBE WHERE NOT (NAME = '5b6fee6b2a')",
        "SELECT GLOBAL_UNSUBSCRIBE FROM TABEMAIL UNSUBSCRIBE WHERE (NAME = '5b6fee6b2a')"
      ]
    },
    {
      "queryNo": 1192,
      "pathList": [
      ]
    },
    {
      "queryNo": 1193,
      "pathList": [
        "SELECT VALUATION_METHOD FROM TABITEM WHERE NOT (NAME = '_Test Regular Item')",
        "SELECT VALUATION_METHOD FROM TABITEM WHERE (NAME = '_Test Regular Item')"
      ]
    },
    {
      "queryNo": 1194,
      "pathList": [
        "SELECT * FROM TABCONTACT WHERE NOT (NAME = '_Test Contact for _Test Customer-_Test Customer')",
        "SELECT * FROM TABCONTACT WHERE (NAME = '_Test Contact for _Test Customer-_Test Customer')"
      ]
    },
    {
      "queryNo": 1195,
      "pathList": [
        "SELECT DISPOSAL_ACCOUNT, DEPRECIATION_COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT DISPOSAL_ACCOUNT, DEPRECIATION_COST_CENTER FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 1196,
      "pathList": [
        "SELECT NAME, MIN_ORDER_QTY FROM TABITEM WHERE (NAME NOT IN ('_Test Item Home Desktop 200', '_Test Item Home Desktop 100'))",
        "SELECT NAME, MIN_ORDER_QTY FROM TABITEM WHERE (NAME IN ('_Test Item Home Desktop 200', '_Test Item Home Desktop 100'))"
      ]
    },
    {
      "queryNo": 1198,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPROJECT WHERE NOT (SALES_ORDER = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPROJECT WHERE (SALES_ORDER = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPROJECT WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1199,
      "pathList": [
        "SELECT * FROM TABPORTAL MENU ITEM WHERE (PARENTTYPE = 'Portal Settings') AND (PARENT = 'Portal Settings') AND (PARENTFIELD = 'custom_menu')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE NOT (PARENTTYPE = 'Portal Settings') AND (PARENT = 'Portal Settings') AND (PARENTFIELD = 'custom_menu')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Portal Settings') AND (PARENTFIELD = 'custom_menu')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE NOT (PARENT = 'Portal Settings') AND (PARENTTYPE = 'Portal Settings') AND (PARENTFIELD = 'custom_menu')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Portal Settings') AND (PARENTFIELD = 'custom_menu')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE NOT (PARENTFIELD = 'custom_menu') AND (PARENTTYPE = 'Portal Settings') AND (PARENT = 'Portal Settings')",
        "SELECT * FROM TABPORTAL MENU ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Portal Settings') AND (PARENT = 'Portal Settings')"
      ]
    },
    {
      "queryNo": 1200,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE NOT (AMENDED_FROM = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE (AMENDED_FROM = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1201,
      "pathList": [
        "SELECT * FROM TABBOM SCRAP ITEM WHERE (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item SC B-001') AND (PARENTFIELD = 'scrap_items')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item SC B-001') AND (PARENTFIELD = 'scrap_items')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test PPT Item SC B-001') AND (PARENTFIELD = 'scrap_items')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item SC B-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE NOT (PARENTFIELD = 'scrap_items') AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item SC B-001')",
        "SELECT * FROM TABBOM SCRAP ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test PPT Item SC B-001')"
      ]
    },
    {
      "queryNo": 1202,
      "pathList": [
        "SELECT NAME FROM TABTODO WHERE NOT (NAME = '7e8272a7a9')",
        "SELECT NAME FROM TABTODO WHERE (NAME = '7e8272a7a9')"
      ]
    },
    {
      "queryNo": 1203,
      "pathList": [
        "SELECT NAME, EMAIL_SERVER, SMTP_PORT FROM TABEMAIL DOMAIN WHERE NOT (NAME = 'example.com')",
        "SELECT NAME, EMAIL_SERVER, SMTP_PORT FROM TABEMAIL DOMAIN WHERE (NAME = 'example.com')"
      ]
    },
    {
      "queryNo": 1204,
      "pathList": [
        "SELECT * FROM TABWEB FORM FIELD WHERE (PARENTTYPE = 'Web Form') AND (PARENT = 'manage-events') AND (PARENTFIELD = 'web_form_fields')",
        "SELECT * FROM TABWEB FORM FIELD WHERE NOT (PARENTTYPE = 'Web Form') AND (PARENT = 'manage-events') AND (PARENTFIELD = 'web_form_fields')",
        "SELECT * FROM TABWEB FORM FIELD WHERE (PARENTTYPE IS NULL) AND (PARENT = 'manage-events') AND (PARENTFIELD = 'web_form_fields')",
        "SELECT * FROM TABWEB FORM FIELD WHERE NOT (PARENT = 'manage-events') AND (PARENTTYPE = 'Web Form') AND (PARENTFIELD = 'web_form_fields')",
        "SELECT * FROM TABWEB FORM FIELD WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Web Form') AND (PARENTFIELD = 'web_form_fields')",
        "SELECT * FROM TABWEB FORM FIELD WHERE NOT (PARENTFIELD = 'web_form_fields') AND (PARENTTYPE = 'Web Form') AND (PARENT = 'manage-events')",
        "SELECT * FROM TABWEB FORM FIELD WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Web Form') AND (PARENT = 'manage-events')"
      ]
    },
    {
      "queryNo": 1205,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABLANDED COST VOUCHER WHERE NOT (NAME = 'LCV00001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABLANDED COST VOUCHER WHERE (NAME = 'LCV00001')"
      ]
    },
    {
      "queryNo": 1206,
      "pathList": [
        "SELECT DISTINCT REF_TYPE, PARENTTYPE FROM TABEVENT WHERE NOT (REF_TYPE = 'Role')",
        "SELECT DISTINCT REF_TYPE, PARENTTYPE FROM TABEVENT WHERE (REF_TYPE = 'Role')",
        "SELECT DISTINCT REF_TYPE, PARENTTYPE FROM TABEVENT WHERE (REF_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1207,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (NAME IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6')) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 1208,
      "pathList": [
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.STATUS NOT IN ('Completed', 'Closed')) AND (TABDELIVERY NOTE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.STATUS IN ('Completed', 'Closed')) AND (TABDELIVERY NOTE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.STATUS IS NULL) AND (TABDELIVERY NOTE.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.DOCSTATUS = 2.0 + 1) AND (TABDELIVERY NOTE.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.DOCSTATUS = 2.0) AND (TABDELIVERY NOTE.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABDELIVERY NOTE WHERE (TABDELIVERY NOTE.DOCSTATUS = 2.0 - 1) AND (TABDELIVERY NOTE.STATUS NOT IN ('Completed', 'Closed'))"
      ]
    },
    {
      "queryNo": 1209,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00011')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00011')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00011')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'STE-00011') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 1210,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT ITEM WHERE (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE RECEIPT ITEM WHERE (PURCHASE_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1212,
      "pathList": [
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'education')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'education')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'EMP-0005') AND (PARENTFIELD = 'education')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE NOT (PARENT = 'EMP-0005') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'education')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'education')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE NOT (PARENTFIELD = 'education') AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')",
        "SELECT * FROM TABEMPLOYEE EDUCATION WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENT = 'EMP-0005')"
      ]
    },
    {
      "queryNo": 1213,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PO_DETAIL = '1534b0ea94') AND (((PR_DETAIL IS NULL) OR PR_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PO_DETAIL = '1534b0ea94') AND (((PR_DETAIL IS NULL) OR PR_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PO_DETAIL IS NULL) AND (((PR_DETAIL IS NULL) OR PR_DETAIL = '')) AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE ((PR_DETAIL IS NOT NULL)) AND NOT (PR_DETAIL = '') AND (PO_DETAIL = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL IS NULL) AND (PO_DETAIL = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL = '') AND ((PR_DETAIL IS NOT NULL)) AND (PO_DETAIL = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (PO_DETAIL = '1534b0ea94') AND (((PR_DETAIL IS NULL) OR PR_DETAIL = ''))",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (PO_DETAIL = '1534b0ea94') AND (((PR_DETAIL IS NULL) OR PR_DETAIL = ''))",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (PO_DETAIL = '1534b0ea94') AND (((PR_DETAIL IS NULL) OR PR_DETAIL = ''))",
        "SELECT SUM(AMOUNT) FROM TABPURCHASE INVOICE ITEM WHERE PO_DETAIL = '1534b0ea94' AND ((PR_DETAIL IS NULL) OR PR_DETAIL = '') AND DOCSTATUS = 1 HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 1214,
      "pathList": [
        "SELECT OWNER FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier')",
        "SELECT OWNER FROM TABSUPPLIER WHERE (NAME = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 1215,
      "pathList": [
      ]
    },
    {
      "queryNo": 1216,
      "pathList": [
        "SELECT ITEM_CODE, WAREHOUSE, ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00010')",
        "SELECT ITEM_CODE, WAREHOUSE, ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00010')",
        "SELECT ITEM_CODE, WAREHOUSE, ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00010')",
        "SELECT ITEM_CODE, WAREHOUSE, ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'STE-00010') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT ITEM_CODE, WAREHOUSE, ACTUAL_QTY FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 1217,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSALES INVOICE WHERE NOT (NAME = 'SINV-00010')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSALES INVOICE WHERE (NAME = 'SINV-00010')"
      ]
    },
    {
      "queryNo": 1218,
      "pathList": [
        "SELECT NAME, RGT FROM TABITEM GROUP WHERE (NAME NOT IN ('_Test Item Group B', 'All Item Groups'))",
        "SELECT NAME, RGT FROM TABITEM GROUP WHERE (NAME IN ('_Test Item Group B', 'All Item Groups'))"
      ]
    },
    {
      "queryNo": 1219,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 3) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 2) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 1) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE = 'EMP-0002') AND (DOCSTATUS <> 2) AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (EMPLOYEE = 'EMP-0002') AND (DOCSTATUS <> 2) AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE IS NULL) AND (DOCSTATUS <> 2) AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (START_DATE >= '2016-11-01') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (START_DATE IS NULL) AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (END_DATE <= '2016-11-30') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (END_DATE <= '2016-11-30') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (END_DATE IS NULL) AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (COMPANY = 'Wind Power LLC') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (COMPANY IS NULL) AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0002') AND (START_DATE >= '2016-11-01') AND (END_DATE <= '2016-11-30')"
      ]
    },
    {
      "queryNo": 1220,
      "pathList": [
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item') AND (VALUATION_RATE > 0)",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = 1) AND (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = 0) AND (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT VALUATION_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VALUATION_RATE = -1) AND (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1221,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10', 'd31a77e597', 'fbddc04fbe')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1222,
      "pathList": [
        "SELECT NAME FROM TABITEM ITEM WHERE (VARIANT_OF = '_Test Variant Item') AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND PARENT <> '_Test Variant Item-S'))",
        "SELECT NAME FROM TABITEM ITEM WHERE NOT (VARIANT_OF = '_Test Variant Item') AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND PARENT <> '_Test Variant Item-S'))",
        "SELECT NAME FROM TABITEM ITEM WHERE (VARIANT_OF IS NULL) AND (EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND PARENT <> '_Test Variant Item-S'))",
        "SELECT NAME FROM TABITEM ITEM WHERE (NOT EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE IV_ATTRIBUTE.PARENT = ITEM.NAME AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small')) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small')) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.PARENT IS NULL) AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small'))) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small') AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (IV_ATTRIBUTE.ATTRIBUTE_VALUE IS NULL) AND (IV_ATTRIBUTE.ATTRIBUTE = 'Test Size') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND (PARENT <> '_Test Variant Item-S')) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE NOT (PARENT <> '_Test Variant Item-S') AND (IV_ATTRIBUTE.PARENT = ITEM.NAME) AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small'))) AND (VARIANT_OF = '_Test Variant Item')",
        "SELECT NAME FROM TABITEM ITEM WHERE EXISTS (SELECT NAME FROM TABITEM VARIANT ATTRIBUTE IV_ATTRIBUTE WHERE (PARENT IS NULL) AND ((IV_ATTRIBUTE.ATTRIBUTE = 'Test Size' AND IV_ATTRIBUTE.ATTRIBUTE_VALUE = 'Small'))) AND (VARIANT_OF = '_Test Variant Item')"
      ]
    },
    {
      "queryNo": 1223,
      "pathList": [
        "SELECT INSPECTION_REQUIRED_BEFORE_DELIVERY FROM TABITEM WHERE NOT (NAME = '_Test Item')",
        "SELECT INSPECTION_REQUIRED_BEFORE_DELIVERY FROM TABITEM WHERE (NAME = '_Test Item')"
      ]
    },
    {
      "queryNo": 1224,
      "pathList": [
      ]
    },
    {
      "queryNo": 1225,
      "pathList": [
        "SELECT RATE, PROJECT, ITEM_CODE FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (NAME = 'b2008c66cd')",
        "SELECT RATE, PROJECT, ITEM_CODE FROM TABSUPPLIER QUOTATION ITEM WHERE (NAME = 'b2008c66cd')"
      ]
    },
    {
      "queryNo": 1226,
      "pathList": [
        "SELECT ACCOUNT, DEBIT, CREDIT, AGAINST_VOUCHER FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Payment Entry') AND (VOUCHER_NO = 'PE-00006')",
        "SELECT ACCOUNT, DEBIT, CREDIT, AGAINST_VOUCHER FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Payment Entry') AND (VOUCHER_NO = 'PE-00006')",
        "SELECT ACCOUNT, DEBIT, CREDIT, AGAINST_VOUCHER FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PE-00006')",
        "SELECT ACCOUNT, DEBIT, CREDIT, AGAINST_VOUCHER FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'PE-00006') AND (VOUCHER_TYPE = 'Payment Entry')",
        "SELECT ACCOUNT, DEBIT, CREDIT, AGAINST_VOUCHER FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Payment Entry')"
      ]
    },
    {
      "queryNo": 1227,
      "pathList": [
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE = 'Sales Invoice') AND (AGAINST_VOUCHER = 'SINV-00013')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER_TYPE = 'Sales Invoice') AND (AGAINST_VOUCHER = 'SINV-00013')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (AGAINST_VOUCHER_TYPE IS NULL) AND (AGAINST_VOUCHER = 'SINV-00013')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE NOT (AGAINST_VOUCHER = 'SINV-00013') AND (AGAINST_VOUCHER_TYPE = 'Sales Invoice')",
        "SELECT NAME, DOCSTATUS FROM TABGL ENTRY WHERE (AGAINST_VOUCHER IS NULL) AND (AGAINST_VOUCHER_TYPE = 'Sales Invoice')"
      ]
    },
    {
      "queryNo": 1228,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00001') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00001') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PURPOSE = 'Material Transfer for Manufacture') AND (PRODUCTION_ORDER = 'PRO-00001')",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PURPOSE IS NULL) AND (PRODUCTION_ORDER = 'PRO-00001')"
      ]
    },
    {
      "queryNo": 1229,
      "pathList": [
        "SELECT NAME, ACCOUNT_NAME, PARENT_ACCOUNT, ACCOUNT_TYPE, IS_GROUP, ROOT_TYPE, TAX_RATE FROM TABACCOUNT WHERE NOT (TABACCOUNT.COMPANY = '_Test Company')",
        "SELECT NAME, ACCOUNT_NAME, PARENT_ACCOUNT, ACCOUNT_TYPE, IS_GROUP, ROOT_TYPE, TAX_RATE FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY = '_Test Company')",
        "SELECT NAME, ACCOUNT_NAME, PARENT_ACCOUNT, ACCOUNT_TYPE, IS_GROUP, ROOT_TYPE, TAX_RATE FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 1230,
      "pathList": [
        "SELECT * FROM TABEMAIL QUEUE WHERE (STATUS = 'Sent') AND (MONTH(CREATION) = MONTH(CURDATE()))",
        "SELECT * FROM TABEMAIL QUEUE WHERE NOT (STATUS = 'Sent') AND (MONTH(CREATION) = MONTH(CURDATE()))",
        "SELECT * FROM TABEMAIL QUEUE WHERE (STATUS IS NULL) AND (MONTH(CREATION) = MONTH(CURDATE()))",
        "SELECT * FROM TABEMAIL QUEUE WHERE NOT (MONTH(CREATION) = MONTH(CURDATE())) AND (STATUS = 'Sent')",
        "SELECT * FROM TABEMAIL QUEUE WHERE (CREATION IS NULL) AND (STATUS = 'Sent')",
        "SELECT COUNT(NAME) FROM TABEMAIL QUEUE WHERE STATUS = 'Sent' AND MONTH(CREATION) = MONTH(CURDATE()) HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 1231,
      "pathList": [
        "SELECT ROUTE FROM TABBLOG POST WHERE (IFNULL(PUBLISHED, 0) = 2)",
        "SELECT ROUTE FROM TABBLOG POST WHERE (IFNULL(PUBLISHED, 0) = 1)",
        "SELECT ROUTE FROM TABBLOG POST WHERE (IFNULL(PUBLISHED, 0) = 0)",
        "SELECT ROUTE FROM TABBLOG POST WHERE ((PUBLISHED IS NOT NULL))",
        "SELECT ROUTE FROM TABBLOG POST WHERE (PUBLISHED IS NULL)"
      ]
    },
    {
      "queryNo": 1233,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE NOT (RETURN_AGAINST = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE (RETURN_AGAINST = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE WHERE (RETURN_AGAINST IS NULL)"
      ]
    },
    {
      "queryNo": 1234,
      "pathList": [
        "SELECT NAME FROM TABLEAD WHERE NOT (NAME = '_T-Lead-00002')",
        "SELECT NAME FROM TABLEAD WHERE (NAME = '_T-Lead-00002')"
      ]
    },
    {
      "queryNo": 1235,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE NOT (NAME = '_Test Product Bundle Item')",
        "SELECT NAME FROM TABITEM WHERE (NAME = '_Test Product Bundle Item')"
      ]
    },
    {
      "queryNo": 1236,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00010')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00010')"
      ]
    },
    {
      "queryNo": 1237,
      "pathList": [
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE NOT (IFNULL(TABBLOG POST.BLOG_CATEGORY, '') = '') AND (TABBLOG POST.BLOG_CATEGORY NOT IN ('_Test Blog Category 1'))",
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE (IFNULL(TABBLOG POST.BLOG_CATEGORY, '') = '') AND (TABBLOG POST.BLOG_CATEGORY NOT IN ('_Test Blog Category 1'))",
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE (TABBLOG POST.BLOG_CATEGORY IN ('_Test Blog Category 1')) AND NOT (IFNULL(TABBLOG POST.BLOG_CATEGORY, '') = '')",
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE (TABBLOG POST.BLOG_CATEGORY IS NULL) AND NOT (IFNULL(TABBLOG POST.BLOG_CATEGORY, '') = '')",
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE (((TABBLOG POST.BLOG_CATEGORY IS NOT NULL))) AND ((TABBLOG POST.BLOG_CATEGORY IN ('_Test Blog Category 1')))",
        "SELECT NAME, BLOG_CATEGORY FROM TABBLOG POST WHERE (TABBLOG POST.BLOG_CATEGORY IS NULL)"
      ]
    },
    {
      "queryNo": 1238,
      "pathList": [
      ]
    },
    {
      "queryNo": 1239,
      "pathList": [
        "SELECT CURRENCY FROM TABPRICE LIST WHERE NOT (NAME = 'Standard Selling')",
        "SELECT CURRENCY FROM TABPRICE LIST WHERE (NAME = 'Standard Selling')"
      ]
    },
    {
      "queryNo": 1240,
      "pathList": [
        "SELECT OWNER FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00010')",
        "SELECT OWNER FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00010')"
      ]
    },
    {
      "queryNo": 1241,
      "pathList": [
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABPAYMENT ENTRY WHERE NOT (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABPAYMENT ENTRY WHERE (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABPAYMENT ENTRY WHERE (PARTY_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1242,
      "pathList": [
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier 1') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier 1') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_DOCTYPE IS NULL) AND (LINK_NAME = '_Test Supplier 1') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (LINK_NAME = '_Test Supplier 1') AND (LINK_DOCTYPE = 'Supplier') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_NAME IS NULL) AND (LINK_DOCTYPE = 'Supplier') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (PARENTTYPE = 'Address') AND (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier 1')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE (PARENTTYPE IS NULL) AND (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier 1')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE NOT (A.NAME = DL.PARENT)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier 1' AND PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE (A.NAME = DL.PARENT)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier 1' AND PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_SHIPPING_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_SHIPPING_ADDRESS FROM TABADDRESS A WHERE (DL.PARENT IS NULL)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier 1' AND PARENTTYPE = 'Address')"
      ]
    },
    {
      "queryNo": 1244,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT = 'MREQ-00003') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENT = 'MREQ-00003') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTTYPE = 'Material Request') AND (PARENT = 'MREQ-00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'MREQ-00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'MREQ-00003') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'MREQ-00003') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('51f0693e95'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (NAME IN ('51f0693e95')) AND (PARENT = 'MREQ-00003') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1246,
      "pathList": [
        "SELECT ABBR FROM TABCOMPANY WHERE (NAME <> 'India - Chart of Accounts') AND (ABBR = '7cQ')",
        "SELECT ABBR FROM TABCOMPANY WHERE NOT (NAME <> 'India - Chart of Accounts') AND (ABBR = '7cQ')",
        "SELECT ABBR FROM TABCOMPANY WHERE NOT (ABBR = '7cQ') AND (NAME <> 'India - Chart of Accounts')",
        "SELECT ABBR FROM TABCOMPANY WHERE (ABBR IS NULL) AND (NAME <> 'India - Chart of Accounts')"
      ]
    },
    {
      "queryNo": 1247,
      "pathList": [
        "SELECT MAX(char_length(MODIFIED_BY)) FROM TABTODO HAVING COUNT(char_length(MODIFIED_BY)) > COUNT(DISTINCT char_length(MODIFIED_BY)) AND COUNT(DISTINCT char_length(MODIFIED_BY)) > 1"
      ]
    },
    {
      "queryNo": 1248,
      "pathList": [
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (REFERENCE_DOCTYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00015') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (REFERENCE_DOCTYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00015') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (REFERENCE_DOCTYPE IS NULL) AND (REFERENCE_NAME = 'JV-00015') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE NOT (REFERENCE_NAME = 'JV-00015') AND (REFERENCE_DOCTYPE = 'Journal Entry') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_DOCTYPE = 'Journal Entry') AND (DOCSTATUS < 2)",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (DOCSTATUS = 3) AND (REFERENCE_DOCTYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00015')",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (DOCSTATUS = 2) AND (REFERENCE_DOCTYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00015')",
        "SELECT PARENT FROM TABPAYMENT ENTRY REFERENCE WHERE (DOCSTATUS = 1) AND (REFERENCE_DOCTYPE = 'Journal Entry') AND (REFERENCE_NAME = 'JV-00015')"
      ]
    },
    {
      "queryNo": 1249,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE WHERE NOT (USER_ID = 'Weekly_test_employee@salary.com')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (USER_ID = 'Weekly_test_employee@salary.com')",
        "SELECT NAME FROM TABEMPLOYEE WHERE (USER_ID IS NULL)"
      ]
    },
    {
      "queryNo": 1250,
      "pathList": [
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00008') AND (PARENTFIELD = 'required_items')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00008') AND (PARENTFIELD = 'required_items')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PRO-00008') AND (PARENTFIELD = 'required_items')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENT = 'PRO-00008') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'required_items')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE NOT (PARENTFIELD = 'required_items') AND (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00008')",
        "SELECT * FROM TABPRODUCTION ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00008')"
      ]
    },
    {
      "queryNo": 1251,
      "pathList": [
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE (PO.DOCSTATUS = 2) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE (PO.DOCSTATUS = 1) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE (PO.DOCSTATUS = 0) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1) AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE NOT (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping') AND (PO.DOCSTATUS = 1) AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE (PO_ITEM.ITEM_CODE IS NULL) AND (PO.DOCSTATUS = 1) AND (PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO INNER JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE NOT (PO.NAME <> 'PO-00013') AND (PO.DOCSTATUS = 1) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO LEFT JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE ((PO_ITEM.PARENT IS NULL) AND (PO.NAME IS NOT NULL)) AND (PO.DOCSTATUS = 1 AND PO.NAME <> 'PO-00013')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO RIGHT JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE ((PO.NAME IS NULL) AND (PO_ITEM.PARENT IS NOT NULL)) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping')",
        "SELECT PO.NAME, PO.TRANSACTION_DATE, PO.CONVERSION_RATE, PO_ITEM.CONVERSION_FACTOR, PO_ITEM.BASE_PRICE_LIST_RATE, PO_ITEM.DISCOUNT_PERCENTAGE, PO_ITEM.BASE_RATE FROM TABPURCHASE ORDER PO RIGHT JOIN TABPURCHASE ORDER ITEM PO_ITEM ON PO.NAME = PO_ITEM.PARENT WHERE ((PO.NAME IS NULL) AND (PO_ITEM.PARENT IS NULL)) AND (PO_ITEM.ITEM_CODE = '_Test Item for Drop Shipping')"
      ]
    },
    {
      "queryNo": 1252,
      "pathList": [
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 2) AND (ENABLED = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 1) AND (ENABLED = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (SELLING = 0) AND (ENABLED = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 2) AND (SELLING = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 1) AND (SELLING = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (ENABLED = 0) AND (SELLING = 1) AND (NAME = '_Test Price List')",
        "SELECT NAME FROM TABPRICE LIST WHERE (NAME = '_Test Price List') AND (SELLING = 1) AND (ENABLED = 1)",
        "SELECT NAME FROM TABPRICE LIST WHERE NOT (NAME = '_Test Price List') AND (SELLING = 1) AND (ENABLED = 1)"
      ]
    },
    {
      "queryNo": 1253,
      "pathList": [
        "SELECT TOTAL_EXPENSE_CLAIM FROM TABPROJECT WHERE NOT (NAME = '_Test Project 1')",
        "SELECT TOTAL_EXPENSE_CLAIM FROM TABPROJECT WHERE (NAME = '_Test Project 1')"
      ]
    },
    {
      "queryNo": 1254,
      "pathList": [
        "SELECT NAME FROM TABLEAVE TYPE WHERE NOT (NAME = '_Test Leave Type')",
        "SELECT NAME FROM TABLEAVE TYPE WHERE (NAME = '_Test Leave Type')"
      ]
    },
    {
      "queryNo": 1255,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (NAME = '409c143c61')",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (NAME = '409c143c61')"
      ]
    },
    {
      "queryNo": 1256,
      "pathList": [
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE NOT (NAME = '6b9370559b')",
        "SELECT * FROM TABPURCHASE TAXES AND CHARGES WHERE (NAME = '6b9370559b')"
      ]
    },
    {
      "queryNo": 1258,
      "pathList": [
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTFIELD = 'deductions') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE NOT (PARENTFIELD = 'deductions') AND (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTTYPE = 'Salary Slip') AND (NAME NOT IN ('b9798ace74', '5f8c7f25d7'))",
        "SELECT NAME FROM TABSALARY DETAIL WHERE (NAME IN ('b9798ace74', '5f8c7f25d7')) AND (PARENT = 'Sal Slip/EMP-0001/00003') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions')"
      ]
    },
    {
      "queryNo": 1259,
      "pathList": [
        "SELECT NAME FROM TABTASK WHERE NOT (PROJECT = '_Test Project 1')",
        "SELECT NAME FROM TABTASK WHERE (PROJECT = '_Test Project 1')",
        "SELECT NAME FROM TABTASK WHERE (PROJECT IS NULL)"
      ]
    },
    {
      "queryNo": 1260,
      "pathList": [
        "SELECT NAME FROM TABSHIPPING RULE WHERE NOT (NAME = '_Test Shipping Rule - India')",
        "SELECT NAME FROM TABSHIPPING RULE WHERE (NAME = '_Test Shipping Rule - India')"
      ]
    },
    {
      "queryNo": 1261,
      "pathList": [
        "SELECT NAME FROM TABEMAIL ALERT WHERE (EVENT IN ('Days Before', 'Days After')) AND (ENABLED = 1)",
        "SELECT NAME FROM TABEMAIL ALERT WHERE (EVENT NOT IN ('Days Before', 'Days After')) AND (ENABLED = 1)",
        "SELECT NAME FROM TABEMAIL ALERT WHERE (EVENT IS NULL) AND (ENABLED = 1)",
        "SELECT NAME FROM TABEMAIL ALERT WHERE (ENABLED = 2) AND (EVENT IN ('Days Before', 'Days After'))",
        "SELECT NAME FROM TABEMAIL ALERT WHERE (ENABLED = 1) AND (EVENT IN ('Days Before', 'Days After'))",
        "SELECT NAME FROM TABEMAIL ALERT WHERE (ENABLED = 0) AND (EVENT IN ('Days Before', 'Days After'))"
      ]
    },
    {
      "queryNo": 1262,
      "pathList": [
      ]
    },
    {
      "queryNo": 1263,
      "pathList": [
        "SELECT NAME FROM TABOPPORTUNITY WHERE NOT (TABOPPORTUNITY.STATUS = 'Open')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.STATUS = 'Open')",
        "SELECT NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1264,
      "pathList": [
        "SELECT RGT FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group B')",
        "SELECT RGT FROM TABITEM GROUP WHERE (NAME = '_Test Item Group B')"
      ]
    },
    {
      "queryNo": 1265,
      "pathList": [
        "SELECT EXPENSES_INCLUDED_IN_VALUATION FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT EXPENSES_INCLUDED_IN_VALUATION FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 1266,
      "pathList": [
        "SELECT DOCSTATUS FROM TABLEAVE APPLICATION WHERE NOT (NAME = 'LAP/00007')",
        "SELECT DOCSTATUS FROM TABLEAVE APPLICATION WHERE (NAME = 'LAP/00007')"
      ]
    },
    {
      "queryNo": 1267,
      "pathList": [
        "SELECT * FROM TABSALES ORDER WHERE (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE NOT (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (CUSTOMER IS NULL) AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (DOCSTATUS = 2) AND (CUSTOMER = '_Test Customer') AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (DOCSTATUS = 1) AND (CUSTOMER = '_Test Customer') AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (DOCSTATUS = 0) AND (CUSTOMER = '_Test Customer') AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE NOT (COMPANY = '_Test Company 1') AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (COMPANY IS NULL) AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (PER_BILLED < 100) AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (PER_BILLED = 101) AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (PER_BILLED = 100) AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE (PER_BILLED = 99) AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (STATUS <> 'Closed')",
        "SELECT * FROM TABSALES ORDER WHERE NOT (STATUS <> 'Closed') AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100)",
        "SELECT * FROM TABSALES ORDER WHERE (STATUS IS NULL) AND (CUSTOMER = '_Test Customer') AND (DOCSTATUS = 1) AND (COMPANY = '_Test Company 1') AND (PER_BILLED < 100)",
        "SELECT SUM(BASE_GRAND_TOTAL * (100 - PER_BILLED) / 100) FROM TABSALES ORDER WHERE CUSTOMER = '_Test Customer' AND DOCSTATUS = 1 AND COMPANY = '_Test Company 1' AND PER_BILLED < 100 AND STATUS <> 'Closed' HAVING COUNT(BASE_GRAND_TOTAL * (100 - PER_BILLED) / 100) > COUNT(DISTINCT BASE_GRAND_TOTAL * (100 - PER_BILLED) / 100) AND COUNT(DISTINCT BASE_GRAND_TOTAL * (100 - PER_BILLED) / 100) > 1"
      ]
    },
    {
      "queryNo": 1268,
      "pathList": [
        "SELECT ITEM_CODE, WAREHOUSE, IDX FROM TABMATERIAL REQUEST ITEM WHERE (NAME = '409c143c61') AND (PARENT = '_T-Material Request-00003')",
        "SELECT ITEM_CODE, WAREHOUSE, IDX FROM TABMATERIAL REQUEST ITEM WHERE NOT (NAME = '409c143c61') AND (PARENT = '_T-Material Request-00003')",
        "SELECT ITEM_CODE, WAREHOUSE, IDX FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENT = '_T-Material Request-00003') AND (NAME = '409c143c61')",
        "SELECT ITEM_CODE, WAREHOUSE, IDX FROM TABMATERIAL REQUEST ITEM WHERE (PARENT IS NULL) AND (NAME = '409c143c61')"
      ]
    },
    {
      "queryNo": 1269,
      "pathList": [
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENT = 'SR/00003') AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENT = 'SR/00003') AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENTTYPE = 'Stock Reconciliation') AND (PARENT = 'SR/00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SR/00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'SR/00003') AND (PARENTTYPE = 'Stock Reconciliation') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'SR/00003') AND (PARENTTYPE = 'Stock Reconciliation') AND (NAME NOT IN ('7dc6966353'))",
        "SELECT NAME FROM TABSTOCK RECONCILIATION ITEM WHERE (NAME IN ('7dc6966353')) AND (PARENT = 'SR/00003') AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1270,
      "pathList": [
        "SELECT USERNAME, COUNT(*) FROM TABUSER GROUP BY USERNAME HAVING (COUNT(*) = 2)",
        "SELECT USERNAME, COUNT(*) FROM TABUSER GROUP BY USERNAME HAVING (COUNT(*) = 1)",
        "SELECT USERNAME, COUNT(*) FROM TABUSER GROUP BY USERNAME HAVING (COUNT(*) = 0)",
        "SELECT USERNAME, COUNT(*) FROM TABUSER GROUP BY USERNAME HAVING (count(*) > 1) AND (COUNT(*) > 1)",
        "SELECT COUNT(*) FROM TABUSER HAVING (count(DISTINCT USERNAME) > 1) AND (COUNT(*) > 1)"
      ]
    },
    {
      "queryNo": 1271,
      "pathList": [
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TSD.OPERATION_ID = 'd41f644502') AND (TS.DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE NOT (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TSD.OPERATION_ID = 'd41f644502') AND (TS.DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TS.PRODUCTION_ORDER IS NULL) AND (TSD.OPERATION_ID = 'd41f644502') AND (TS.DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE NOT (TSD.OPERATION_ID = 'd41f644502') AND (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TS.DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TSD.OPERATION_ID IS NULL) AND (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TS.DOCSTATUS = 1)",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TS.DOCSTATUS = 2) AND (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TSD.OPERATION_ID = 'd41f644502')",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TS.DOCSTATUS = 1) AND (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TSD.OPERATION_ID = 'd41f644502')",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE (TS.DOCSTATUS = 0) AND (TS.PRODUCTION_ORDER = 'PRO-00001') AND (TSD.OPERATION_ID = 'd41f644502')",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD LEFT JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NOT NULL)) AND (TSD.OPERATION_ID = 'd41f644502')",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD LEFT JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NULL)) AND (TSD.OPERATION_ID = 'd41f644502')",
        "SELECT * FROM TABTIMESHEET DETAIL AS TSD RIGHT JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE ((TSD.PARENT IS NULL) AND (TS.NAME IS NOT NULL)) AND (TS.PRODUCTION_ORDER = 'PRO-00001' AND TS.DOCSTATUS = 1)",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING COUNT(TSD.HOURS * 60) > COUNT(DISTINCT TSD.HOURS * 60) AND COUNT(DISTINCT TSD.HOURS * 60) > 1",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING COUNT(TSD.COMPLETED_QTY) > COUNT(DISTINCT TSD.COMPLETED_QTY) AND COUNT(DISTINCT TSD.COMPLETED_QTY) > 1",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING COUNT(TSD.FROM_TIME) > COUNT(DISTINCT TSD.FROM_TIME) AND COUNT(DISTINCT TSD.FROM_TIME) > 1",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING count(*) > COUNT(TSD.FROM_TIME) AND COUNT(DISTINCT TSD.FROM_TIME) > 1",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING COUNT(TSD.TO_TIME) > COUNT(DISTINCT TSD.TO_TIME) AND COUNT(DISTINCT TSD.TO_TIME) > 1",
        "SELECT SUM(TSD.HOURS * 60) AS MINS, SUM(TSD.COMPLETED_QTY) AS COMPLETED_QTY, MIN(TSD.FROM_TIME) AS FROM_TIME, MAX(TSD.TO_TIME) AS TO_TIME FROM TABTIMESHEET DETAIL AS TSD INNER JOIN TABTIMESHEET AS TS ON TS.NAME = TSD.PARENT WHERE TS.PRODUCTION_ORDER = 'PRO-00001' AND TSD.OPERATION_ID = 'd41f644502' AND TS.DOCSTATUS = 1 HAVING count(*) > COUNT(TSD.TO_TIME) AND COUNT(DISTINCT TSD.TO_TIME) > 1"
      ]
    },
    {
      "queryNo": 1272,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT = '_T-Material Request-00011') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENT = '_T-Material Request-00011') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTTYPE = 'Material Request') AND (PARENT = '_T-Material Request-00011') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Material Request-00011') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = '_T-Material Request-00011') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Material Request-00011') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('93cd71fd22', '4928026fec'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (NAME IN ('93cd71fd22', '4928026fec')) AND (PARENT = '_T-Material Request-00011') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1273,
      "pathList": [
        "SELECT COST_CENTER FROM TABPROJECT WHERE NOT (NAME = '_Test Project')",
        "SELECT COST_CENTER FROM TABPROJECT WHERE (NAME = '_Test Project')"
      ]
    },
    {
      "queryNo": 1274,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABJOURNAL ENTRY WHERE NOT (NAME = 'JV-00018')",
        "SELECT MODIFIED, DOCSTATUS FROM TABJOURNAL ENTRY WHERE (NAME = 'JV-00018')"
      ]
    },
    {
      "queryNo": 1275,
      "pathList": [
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENT = '_Test Variant Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENT = '_Test Variant Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test Variant Item') AND (PARENTFIELD = 'attributes') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Variant Item') AND (PARENTFIELD = 'attributes') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE NOT (PARENTFIELD = 'attributes') AND (PARENT = '_Test Variant Item') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test Variant Item') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('66de29c1e4'))",
        "SELECT NAME FROM TABITEM VARIANT ATTRIBUTE WHERE (NAME IN ('66de29c1e4')) AND (PARENT = '_Test Variant Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'attributes')"
      ]
    },
    {
      "queryNo": 1276,
      "pathList": [
        "SELECT NAME FROM TABBOM OPERATION WHERE (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE NOT (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE NOT (PARENTFIELD = 'operations') AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('99c05808b2'))",
        "SELECT NAME FROM TABBOM OPERATION WHERE (NAME IN ('99c05808b2')) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'operations')"
      ]
    },
    {
      "queryNo": 1277,
      "pathList": [
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE = '_T-Employee-0001') AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL)))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL)))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (EMPLOYEE IS NULL) AND (PARENT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL)))",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT NOT IN (SELECT NAME FROM TABSALARY STRUCTURE WHERE IS_ACTIVE = 'Yes' AND (FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01') AND ((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE (PARENT IS NULL) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (IS_ACTIVE IS NULL) AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01')) AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE NOT (FROM_DATE <= '2017-02-09') AND NOT (FROM_DATE <= '2010-01-01') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE <= '2017-02-09') AND NOT (FROM_DATE <= '2010-01-01') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE IS NULL) AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (FROM_DATE <= '2010-01-01') AND NOT (FROM_DATE <= '2017-02-09') AND (IS_ACTIVE = 'Yes') AND (((TO_DATE IS NULL) OR TO_DATE >= '2017-02-09' OR TO_DATE >= NULL))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= '2017-02-09') AND NOT (TO_DATE >= NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01'))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE IS NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01'))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE >= '2017-02-09') AND ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= NULL) AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01'))) AND (EMPLOYEE = '_T-Employee-0001')",
        "SELECT PARENT FROM TABSALARY STRUCTURE EMPLOYEE WHERE EXISTS (SELECT NAME FROM TABSALARY STRUCTURE WHERE (TO_DATE >= NULL) AND ((TO_DATE IS NOT NULL)) AND NOT (TO_DATE >= '2017-02-09') AND (IS_ACTIVE = 'Yes') AND ((FROM_DATE <= '2017-02-09' OR FROM_DATE <= '2010-01-01'))) AND (EMPLOYEE = '_T-Employee-0001')"
      ]
    },
    {
      "queryNo": 1278,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE (PUBLISHED = 2) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE (PUBLISHED = 1) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE (PUBLISHED = 0) AND (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE NOT (ROUTE = 'blog/-test-blog-category-1/-test-blog-post-1') AND (PUBLISHED = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABBLOG POST WHERE (ROUTE IS NULL) AND (PUBLISHED = 1)"
      ]
    },
    {
      "queryNo": 1279,
      "pathList": [
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENT = 'test@example.com') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE NOT (PARENT = 'test@example.com') AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENT IS NULL) AND (PARENTFIELD = 'block_modules')",
        "SELECT * FROM TABBLOCK MODULE WHERE NOT (PARENTFIELD = 'block_modules') AND (PARENT = 'test@example.com')",
        "SELECT * FROM TABBLOCK MODULE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com')"
      ]
    },
    {
      "queryNo": 1280,
      "pathList": [
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENT = 'STE-00017') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENT = 'STE-00017') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTTYPE = 'Stock Entry') AND (PARENT = 'STE-00017') AND (PARENTFIELD = 'additional_costs') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTTYPE IS NULL) AND (PARENT = 'STE-00017') AND (PARENTFIELD = 'additional_costs') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE NOT (PARENTFIELD = 'additional_costs') AND (PARENT = 'STE-00017') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (PARENTFIELD IS NULL) AND (PARENT = 'STE-00017') AND (PARENTTYPE = 'Stock Entry') AND (NAME NOT IN ('382ffe360f', '0ed3aedda2'))",
        "SELECT NAME FROM TABLANDED COST TAXES AND CHARGES WHERE (NAME IN ('382ffe360f', '0ed3aedda2')) AND (PARENT = 'STE-00017') AND (PARENTTYPE = 'Stock Entry') AND (PARENTFIELD = 'additional_costs')"
      ]
    },
    {
      "queryNo": 1281,
      "pathList": [
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE (PBI.PARENT = '_Test Mix Product Bundle') AND (I.IS_STOCK_ITEM = 1)",
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE NOT (PBI.PARENT = '_Test Mix Product Bundle') AND (I.IS_STOCK_ITEM = 1)",
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE (PBI.PARENT IS NULL) AND (I.IS_STOCK_ITEM = 1)",
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE (I.IS_STOCK_ITEM = 2) AND (PBI.PARENT = '_Test Mix Product Bundle')",
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE (I.IS_STOCK_ITEM = 1) AND (PBI.PARENT = '_Test Mix Product Bundle')",
        "SELECT I.NAME FROM TABITEM I INNER JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE (I.IS_STOCK_ITEM = 0) AND (PBI.PARENT = '_Test Mix Product Bundle')",
        "SELECT I.NAME FROM TABITEM I LEFT JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE ((PBI.ITEM_CODE IS NULL) AND (I.NAME IS NOT NULL)) AND (I.IS_STOCK_ITEM = 1)",
        "SELECT I.NAME FROM TABITEM I RIGHT JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE ((I.NAME IS NULL) AND (PBI.ITEM_CODE IS NOT NULL)) AND (PBI.PARENT = '_Test Mix Product Bundle')",
        "SELECT I.NAME FROM TABITEM I RIGHT JOIN TABPRODUCT BUNDLE ITEM PBI ON PBI.ITEM_CODE = I.NAME WHERE ((I.NAME IS NULL) AND (PBI.ITEM_CODE IS NULL)) AND (PBI.PARENT = '_Test Mix Product Bundle')"
      ]
    },
    {
      "queryNo": 1282,
      "pathList": [
      ]
    },
    {
      "queryNo": 1283,
      "pathList": [
        "SELECT OPERATION, DESCRIPTION, WORKSTATION, IDX, BASE_HOUR_RATE AS HOUR_RATE, TIME_IN_MINS, 'Pending' AS STATUS FROM TABBOM OPERATION WHERE NOT (PARENT = 'BOM-_Test Variant Item-001')",
        "SELECT OPERATION, DESCRIPTION, WORKSTATION, IDX, BASE_HOUR_RATE AS HOUR_RATE, TIME_IN_MINS, 'Pending' AS STATUS FROM TABBOM OPERATION WHERE (PARENT = 'BOM-_Test Variant Item-001')",
        "SELECT OPERATION, DESCRIPTION, WORKSTATION, IDX, BASE_HOUR_RATE AS HOUR_RATE, TIME_IN_MINS, 'Pending' AS STATUS FROM TABBOM OPERATION WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1284,
      "pathList": [
        "SELECT * FROM TABPROJECT WHERE NOT (NAME = '_Test Project 1')",
        "SELECT * FROM TABPROJECT WHERE (NAME = '_Test Project 1')"
      ]
    },
    {
      "queryNo": 1285,
      "pathList": [
      ]
    },
    {
      "queryNo": 1286,
      "pathList": [
        "SELECT OWNER FROM TABSUPPLIER QUOTATION WHERE NOT (NAME = 'SQTN-00003')",
        "SELECT OWNER FROM TABSUPPLIER QUOTATION WHERE (NAME = 'SQTN-00003')"
      ]
    },
    {
      "queryNo": 1287,
      "pathList": [
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (USER = 'Administrator') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER = 'Administrator') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 2) AND NOT (USER = 'Administrator') AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 1) AND NOT (USER = 'Administrator') AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 0) AND NOT (USER = 'Administrator') AND (SHARE_DOCTYPE = 'Custom Field') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Custom Field') AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Custom Field') AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 2) AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Custom Field')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 1) AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Custom Field')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 0) AND ((USER = 'Administrator' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'Custom Field')"
      ]
    },
    {
      "queryNo": 1289,
      "pathList": [
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABQUOTATION WHERE (TABQUOTATION.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1290,
      "pathList": [
        "SELECT * FROM TABEMPLOYEE WHERE NOT (NAME = 'EMP-0001')",
        "SELECT * FROM TABEMPLOYEE WHERE (NAME = 'EMP-0001')"
      ]
    },
    {
      "queryNo": 1291,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABROLE WHERE NOT (NAME = 'Academics User')",
        "SELECT MODIFIED, DOCSTATUS FROM TABROLE WHERE (NAME = 'Academics User')"
      ]
    },
    {
      "queryNo": 1292,
      "pathList": [
        "SELECT MAX(char_length(OWNER)) FROM TABEVENT HAVING COUNT(char_length(OWNER)) > COUNT(DISTINCT char_length(OWNER)) AND COUNT(DISTINCT char_length(OWNER)) > 1"
      ]
    },
    {
      "queryNo": 1293,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (START_DATE IS NULL) AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (END_DATE = '2017-02-09') AND (START_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (END_DATE IS NULL) AND (START_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 3) AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 2) AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 1) AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (EMPLOYEE = 'EMP-0006') AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (EMPLOYEE = 'EMP-0006') AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (EMPLOYEE IS NULL) AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (NAME <> 'Sal Slip/EMP-0006/00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (NAME <> 'Sal Slip/EMP-0006/00001') AND (START_DATE = '2017-02-09') AND (END_DATE = '2017-02-09') AND (DOCSTATUS <> 2) AND (EMPLOYEE = 'EMP-0006')"
      ]
    },
    {
      "queryNo": 1295,
      "pathList": [
      ]
    },
    {
      "queryNo": 1296,
      "pathList": [
        "SELECT NAME FROM TABITEM REORDER WHERE (PARENT = '_Test Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE NOT (PARENT = '_Test Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test Item') AND (PARENTFIELD = 'reorder_levels') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Item') AND (PARENTFIELD = 'reorder_levels') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE NOT (PARENTFIELD = 'reorder_levels') AND (PARENT = '_Test Item') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test Item') AND (PARENTTYPE = 'Item') AND (NAME NOT IN ('876358622c'))",
        "SELECT NAME FROM TABITEM REORDER WHERE (NAME IN ('876358622c')) AND (PARENT = '_Test Item') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'reorder_levels')"
      ]
    },
    {
      "queryNo": 1297,
      "pathList": [
        "SELECT MAX(char_length(LAST_IP)) FROM TABUSER HAVING COUNT(char_length(LAST_IP)) > COUNT(DISTINCT char_length(LAST_IP)) AND COUNT(DISTINCT char_length(LAST_IP)) > 1"
      ]
    },
    {
      "queryNo": 1298,
      "pathList": [
        "SELECT MAX(char_length(PARENTTYPE)) FROM TABTODO HAVING COUNT(char_length(PARENTTYPE)) > COUNT(DISTINCT char_length(PARENTTYPE)) AND COUNT(DISTINCT char_length(PARENTTYPE)) > 1"
      ]
    },
    {
      "queryNo": 1299,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.POSTING_DATE IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.FISCAL_YEAR IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.COMPANY = '_Test Company') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.COMPANY IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 2) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 1) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 0) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (NOT EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.POSTING_DATE <= '2013-02-28') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE NOT (NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE (NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE (GLE.PROJECT IS NULL)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT) HAVING COUNT(GLE.DEBIT) > COUNT(DISTINCT GLE.DEBIT) AND COUNT(DISTINCT GLE.DEBIT) > 1",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.POSTING_DATE <= '2013-02-28' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT) HAVING COUNT(GLE.CREDIT) > COUNT(DISTINCT GLE.CREDIT) AND COUNT(DISTINCT GLE.CREDIT) > 1"
      ]
    },
    {
      "queryNo": 1300,
      "pathList": [
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_TYPE = 'ToDo') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'ToDo') AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = '9b6df46a09') AND (STATUS = 'Open')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE NOT (REFERENCE_NAME = '9b6df46a09') AND (REFERENCE_TYPE = 'ToDo') AND (STATUS = 'Open')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'ToDo') AND (STATUS = 'Open')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE NOT (STATUS = 'Open') AND (REFERENCE_TYPE = 'ToDo') AND (REFERENCE_NAME = '9b6df46a09')",
        "SELECT OWNER, DESCRIPTION FROM TABTODO WHERE (STATUS IS NULL) AND (REFERENCE_TYPE = 'ToDo') AND (REFERENCE_NAME = '9b6df46a09')"
      ]
    },
    {
      "queryNo": 1301,
      "pathList": [
      ]
    },
    {
      "queryNo": 1302,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE NOT (RECURRING_ID = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE (RECURRING_ID = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE (RECURRING_ID IS NULL)"
      ]
    },
    {
      "queryNo": 1303,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER WHERE (DOCSTATUS = 2) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (DOCSTATUS = 1) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (DOCSTATUS = 0) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (BASE_NET_TOTAL = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSALES ORDER WHERE (BASE_NET_TOTAL = 0) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABSALES ORDER WHERE (BASE_NET_TOTAL = -1) AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1304,
      "pathList": [
        "SELECT INSTRUCTOR_NAME FROM TABINSTRUCTOR WHERE NOT (NAME = '_T-Instructor-00002')",
        "SELECT INSTRUCTOR_NAME FROM TABINSTRUCTOR WHERE (NAME = '_T-Instructor-00002')"
      ]
    },
    {
      "queryNo": 1305,
      "pathList": [
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1306,
      "pathList": [
        "SELECT DESCRIPTION, STOCK_UOM, ITEM_NAME FROM TABITEM WHERE NOT (NAME = '_Test PPT Item Sub C')",
        "SELECT DESCRIPTION, STOCK_UOM, ITEM_NAME FROM TABITEM WHERE (NAME = '_Test PPT Item Sub C')"
      ]
    },
    {
      "queryNo": 1307,
      "pathList": [
      ]
    },
    {
      "queryNo": 1308,
      "pathList": [
        "SELECT FIELDNAME FROM TABCUSTOM FIELD WHERE NOT (TABCUSTOM FIELD.DT = 'Project Task')",
        "SELECT FIELDNAME FROM TABCUSTOM FIELD WHERE (TABCUSTOM FIELD.DT = 'Project Task')",
        "SELECT FIELDNAME FROM TABCUSTOM FIELD WHERE (TABCUSTOM FIELD.DT IS NULL)"
      ]
    },
    {
      "queryNo": 1309,
      "pathList": [
      ]
    },
    {
      "queryNo": 1310,
      "pathList": [
        "SELECT * FROM TABSERIAL NO WHERE (NAME NOT IN ('ABCD00005'))",
        "SELECT * FROM TABSERIAL NO WHERE (NAME IN ('ABCD00005'))",
        "SELECT SUM(PURCHASE_RATE) FROM TABSERIAL NO WHERE NAME IN ('ABCD00005') HAVING COUNT(PURCHASE_RATE) > COUNT(DISTINCT PURCHASE_RATE) AND COUNT(DISTINCT PURCHASE_RATE) > 1"
      ]
    },
    {
      "queryNo": 1311,
      "pathList": [
        "SELECT * FROM TABFILE WHERE (CONTENT_HASH = '012c41297324929dee9081dc18c9f0f3') AND (NAME <> '1bee6b5190')",
        "SELECT * FROM TABFILE WHERE NOT (CONTENT_HASH = '012c41297324929dee9081dc18c9f0f3') AND (NAME <> '1bee6b5190')",
        "SELECT * FROM TABFILE WHERE (CONTENT_HASH IS NULL) AND (NAME <> '1bee6b5190')",
        "SELECT * FROM TABFILE WHERE NOT (NAME <> '1bee6b5190') AND (CONTENT_HASH = '012c41297324929dee9081dc18c9f0f3')"
      ]
    },
    {
      "queryNo": 1312,
      "pathList": [
        "SELECT * FROM TABSTOCK ENTRY WHERE NOT (NAME = 'STE-00009')",
        "SELECT * FROM TABSTOCK ENTRY WHERE (NAME = 'STE-00009')"
      ]
    },
    {
      "queryNo": 1313,
      "pathList": [
        "SELECT NAME, YEAR_START_DATE, YEAR_END_DATE FROM TABFISCAL YEAR WHERE NOT (NAME <> '_Test Fiscal Year 2017')",
        "SELECT NAME, YEAR_START_DATE, YEAR_END_DATE FROM TABFISCAL YEAR WHERE (NAME <> '_Test Fiscal Year 2017')"
      ]
    },
    {
      "queryNo": 1314,
      "pathList": [
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENT = 'LCV00002') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENT = 'LCV00002') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENTTYPE = 'Landed Cost Voucher') AND (PARENT = 'LCV00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'LCV00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'LCV00002') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'LCV00002') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('b8f5121122'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (NAME IN ('b8f5121122')) AND (PARENT = 'LCV00002') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1315,
      "pathList": [
        "SELECT _COMMENTS FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00034')",
        "SELECT _COMMENTS FROM TABSALES ORDER WHERE (NAME = 'SO-00034')"
      ]
    },
    {
      "queryNo": 1316,
      "pathList": [
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'website_specifications')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'website_specifications')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test PPT Item Raw C') AND (PARENTFIELD = 'website_specifications')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE NOT (PARENT = '_Test PPT Item Raw C') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'website_specifications')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'website_specifications')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE NOT (PARENTFIELD = 'website_specifications') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C')",
        "SELECT * FROM TABITEM WEBSITE SPECIFICATION WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test PPT Item Raw C')"
      ]
    },
    {
      "queryNo": 1317,
      "pathList": [
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0 + 1)",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0)",
        "SELECT MODULE_NAME, HIDDEN, LABEL, LINK, TYPE, ICON, COLOR, _DOCTYPE, IDX, FORCE_SHOW, REVERSE, CUSTOM, STANDARD, BLOCKED FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 1318,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (IS_GROUP = 1) AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (IS_GROUP = 1) AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND (COMPANY = '_Test Company') AND (IS_GROUP = 1) AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (COMPANY = '_Test Company') AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 1) AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE (COMPANY IS NULL) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 1) AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 2) AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (((WAREHOUSE IS NULL) OR WAREHOUSE = ''))",
        "SELECT NAME FROM TABACCOUNT WHERE ((WAREHOUSE IS NOT NULL)) AND NOT (WAREHOUSE = '') AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (IS_GROUP = 1)",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE IS NULL) AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (IS_GROUP = 1)",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE = '') AND ((WAREHOUSE IS NOT NULL)) AND (ACCOUNT_TYPE = 'Stock') AND (COMPANY = '_Test Company') AND (IS_GROUP = 1)"
      ]
    },
    {
      "queryNo": 1319,
      "pathList": [
        "SELECT * FROM TABVEHICLE SERVICE WHERE (PARENTTYPE = 'Vehicle Log') AND (PARENT = 'VLOG00001') AND (PARENTFIELD = 'service_detail')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE NOT (PARENTTYPE = 'Vehicle Log') AND (PARENT = 'VLOG00001') AND (PARENTFIELD = 'service_detail')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'VLOG00001') AND (PARENTFIELD = 'service_detail')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE NOT (PARENT = 'VLOG00001') AND (PARENTTYPE = 'Vehicle Log') AND (PARENTFIELD = 'service_detail')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Vehicle Log') AND (PARENTFIELD = 'service_detail')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE NOT (PARENTFIELD = 'service_detail') AND (PARENTTYPE = 'Vehicle Log') AND (PARENT = 'VLOG00001')",
        "SELECT * FROM TABVEHICLE SERVICE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Vehicle Log') AND (PARENT = 'VLOG00001')"
      ]
    },
    {
      "queryNo": 1320,
      "pathList": [
        "SELECT STATUS FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00006')",
        "SELECT STATUS FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00006')"
      ]
    },
    {
      "queryNo": 1321,
      "pathList": [
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT IS NULL) AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY_TYPE = 'Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY_TYPE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY = '_Test Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.IS_ADVANCE = 'Yes') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.IS_ADVANCE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = -1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT ((IFNULL(T2.REFERENCE_NAME, '') = '')) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 LEFT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1 AND (IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (IFNULL(T2.REFERENCE_NAME, '') = ''))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (((T2.REFERENCE_NAME IS NOT NULL))) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.REFERENCE_NAME IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0)"
      ]
    },
    {
      "queryNo": 1322,
      "pathList": [
        "SELECT MAX(char_length(RESET_PASSWORD_KEY)) FROM TABUSER HAVING COUNT(char_length(RESET_PASSWORD_KEY)) > COUNT(DISTINCT char_length(RESET_PASSWORD_KEY)) AND COUNT(DISTINCT char_length(RESET_PASSWORD_KEY)) > 1"
      ]
    },
    {
      "queryNo": 1323,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET MOVEMENT WHERE NOT (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET MOVEMENT WHERE (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET MOVEMENT WHERE (ASSET IS NULL)"
      ]
    },
    {
      "queryNo": 1324,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group')) AND NOT (ITEM_CODE = '_Test Item') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = '_Test Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER, '') NOT IN ('_Test Customer 1', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CAMPAIGN, '') NOT IN ('_Test Campaign', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER_GROUP, '') NOT IN ('_Test Customer Group', 'All Customer Groups', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(TERRITORY, '') NOT IN ('_Test Territory', 'All Territories', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('_Test Price List', '')) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '')) AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((TERRITORY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((TERRITORY IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = '_Test Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer 1', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') IN ('_Test Campaign', '') AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))"
      ]
    },
    {
      "queryNo": 1325,
      "pathList": [
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 2) AND (ENABLE_OUTGOING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 1) AND (ENABLE_OUTGOING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_INCOMING = 0) AND (ENABLE_OUTGOING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 2) AND (ENABLE_INCOMING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 1) AND (ENABLE_INCOMING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (ENABLE_OUTGOING = 0) AND (ENABLE_INCOMING = 1) AND (APPEND_TO = 'Event')",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (APPEND_TO = 'Event') AND (ENABLE_INCOMING = 1) AND (ENABLE_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE NOT (APPEND_TO = 'Event') AND (ENABLE_INCOMING = 1) AND (ENABLE_OUTGOING = 1)",
        "SELECT NAME FROM TABEMAIL ACCOUNT WHERE (APPEND_TO IS NULL) AND (ENABLE_INCOMING = 1) AND (ENABLE_OUTGOING = 1)"
      ]
    },
    {
      "queryNo": 1326,
      "pathList": [
        "SELECT DOCSTATUS FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00032')",
        "SELECT DOCSTATUS FROM TABSALES ORDER WHERE (NAME = 'SO-00032')"
      ]
    },
    {
      "queryNo": 1327,
      "pathList": [
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENT = 'Salary Structure Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENT = 'Salary Structure Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENTTYPE = 'Holiday List') AND (PARENT = 'Salary Structure Test Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Salary Structure Test Holiday List') AND (PARENTFIELD = 'holidays') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE NOT (PARENTFIELD = 'holidays') AND (PARENT = 'Salary Structure Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Salary Structure Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (NAME NOT IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0'))",
        "SELECT NAME FROM TABHOLIDAY WHERE (NAME IN ('727c08c6e0', '56d431f452', '306f233327', '995c515360', '9a7f4da953', 'e1389fce0e', 'b51d0f1250', '2804ea82d7', 'f1fcf5aa19', '8a3970b44d', '000be7619c', '231b246a76', '53cfcdf1fc', '63eb13f815', '9404ba9e57', '70e0e133e1', '017f4082ef', '31c668d43e', 'f4cbd8ad72', 'd0cefa83e0', '7bc478748e', 'b16ccf47cd', '280ad40bd1', '88b456f237', '3586b57cce', '96b67aa426', '444ffe39c7', 'c46ff02f29', 'e2182769be', '31b6f243a8', 'bf6cd39b51', '00880228cf', '3897e9311a', '8bb40fd78b', 'a21dd5c3f3', 'e237a1fc69', 'c297a6dba3', 'ff3981f0cc', '754b3d2a66', '1ee2bd80d1', 'e585a5024f', '00ae1a2520', '56651604d0', '45733c03d4', '1464aa135e', 'dc58d41e17', 'efc1a3c1b9', '96527f9136', '693a2f84fb', '39f6571c4e', '982820d718', '73d8d6f4c0')) AND (PARENT = 'Salary Structure Test Holiday List') AND (PARENTTYPE = 'Holiday List') AND (PARENTFIELD = 'holidays')"
      ]
    },
    {
      "queryNo": 1328,
      "pathList": [
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL = 'dca5ce203a') AND (DOCSTATUS = 1) AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PR_DETAIL = 'dca5ce203a') AND (DOCSTATUS = 1) AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PR_DETAIL IS NULL) AND (DOCSTATUS = 1) AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 2) AND (PR_DETAIL = 'dca5ce203a') AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 1) AND (PR_DETAIL = 'dca5ce203a') AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (DOCSTATUS = 0) AND (PR_DETAIL = 'dca5ce203a') AND (PARENT <> 'PINV-00003')",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE NOT (PARENT <> 'PINV-00003') AND (PR_DETAIL = 'dca5ce203a') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE INVOICE ITEM WHERE (PARENT IS NULL) AND (PR_DETAIL = 'dca5ce203a') AND (DOCSTATUS = 1)",
        "SELECT SUM(AMOUNT) FROM TABPURCHASE INVOICE ITEM WHERE PR_DETAIL = 'dca5ce203a' AND DOCSTATUS = 1 AND PARENT <> 'PINV-00003' HAVING COUNT(AMOUNT) > COUNT(DISTINCT AMOUNT) AND COUNT(DISTINCT AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 1329,
      "pathList": [
        "SELECT YEAR_START_DATE, YEAR_END_DATE FROM TABFISCAL YEAR WHERE NOT (NAME = '2011')",
        "SELECT YEAR_START_DATE, YEAR_END_DATE FROM TABFISCAL YEAR WHERE (NAME = '2011')"
      ]
    },
    {
      "queryNo": 1330,
      "pathList": [
        "SELECT NAME FROM TABINTEGRATION SERVICE WHERE NOT (NAME = 'Dropbox')",
        "SELECT NAME FROM TABINTEGRATION SERVICE WHERE (NAME = 'Dropbox')"
      ]
    },
    {
      "queryNo": 1331,
      "pathList": [
        "SELECT NAME FROM TABCOUNTRY WHERE NOT (NAME = 'India')",
        "SELECT NAME FROM TABCOUNTRY WHERE (NAME = 'India')"
      ]
    },
    {
      "queryNo": 1332,
      "pathList": [
        "SELECT ACCOUNT_CURRENCY, ACCOUNT_TYPE FROM TABACCOUNT WHERE NOT (NAME = '_Test Cash - _TC')",
        "SELECT ACCOUNT_CURRENCY, ACCOUNT_TYPE FROM TABACCOUNT WHERE (NAME = '_Test Cash - _TC')"
      ]
    },
    {
      "queryNo": 1333,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABCONTACT WHERE NOT (NAME = '_Test Contact for _Test Customer-_Test Customer')",
        "SELECT MODIFIED, DOCSTATUS FROM TABCONTACT WHERE (NAME = '_Test Contact for _Test Customer-_Test Customer')"
      ]
    },
    {
      "queryNo": 1334,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.STATUS NOT IN ('Completed', 'Closed')) AND (TABPURCHASE RECEIPT.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.STATUS IN ('Completed', 'Closed')) AND (TABPURCHASE RECEIPT.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.STATUS IS NULL) AND (TABPURCHASE RECEIPT.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.DOCSTATUS = 2.0 + 1) AND (TABPURCHASE RECEIPT.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.DOCSTATUS = 2.0) AND (TABPURCHASE RECEIPT.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (TABPURCHASE RECEIPT.DOCSTATUS = 2.0 - 1) AND (TABPURCHASE RECEIPT.STATUS NOT IN ('Completed', 'Closed'))"
      ]
    },
    {
      "queryNo": 1335,
      "pathList": [
        "SELECT NAME FROM TABPOS PROFILE WHERE NOT (NAME = '_Test POS Profile')",
        "SELECT NAME FROM TABPOS PROFILE WHERE (NAME = '_Test POS Profile')"
      ]
    },
    {
      "queryNo": 1337,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (NAME = 'Test Warehouse for Renaming 2 - _TC')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (NAME = 'Test Warehouse for Renaming 2 - _TC')"
      ]
    },
    {
      "queryNo": 1338,
      "pathList": [
        "SELECT NAME FROM TABITEM GROUP WHERE NOT (PARENT_ITEM_GROUP = '_Test Item Group A')",
        "SELECT NAME FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP = '_Test Item Group A')",
        "SELECT NAME FROM TABITEM GROUP WHERE (PARENT_ITEM_GROUP IS NULL)"
      ]
    },
    {
      "queryNo": 1339,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABEMAIL ACCOUNT WHERE NOT (NAME = 'Test Email Account Password')",
        "SELECT MODIFIED, DOCSTATUS FROM TABEMAIL ACCOUNT WHERE (NAME = 'Test Email Account Password')"
      ]
    },
    {
      "queryNo": 1340,
      "pathList": [
        "SELECT * FROM TABCUSTOMER GROUP WHERE NOT (NAME = '_Test Customer Group 1')",
        "SELECT * FROM TABCUSTOMER GROUP WHERE (NAME = '_Test Customer Group 1')"
      ]
    },
    {
      "queryNo": 1341,
      "pathList": [
        "SELECT PROJECT, UOM, ITEM_CODE FROM TABPURCHASE ORDER ITEM WHERE NOT (NAME = 'e82e694e0b')",
        "SELECT PROJECT, UOM, ITEM_CODE FROM TABPURCHASE ORDER ITEM WHERE (NAME = 'e82e694e0b')"
      ]
    },
    {
      "queryNo": 1342,
      "pathList": [
        "SELECT * FROM TABUSER WHERE NOT (NAME = 'test@example.com')",
        "SELECT * FROM TABUSER WHERE (NAME = 'test@example.com')"
      ]
    },
    {
      "queryNo": 1343,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE NOT (DELIVERY_NOTE_NO = 'DN-00029')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (DELIVERY_NOTE_NO = 'DN-00029')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSTOCK ENTRY WHERE (DELIVERY_NOTE_NO IS NULL)"
      ]
    },
    {
      "queryNo": 1344,
      "pathList": [
        "SELECT HAS_VARIANTS FROM TABITEM WHERE NOT (NAME = '_Test Variant Item-L')",
        "SELECT HAS_VARIANTS FROM TABITEM WHERE (NAME = '_Test Variant Item-L')"
      ]
    },
    {
      "queryNo": 1345,
      "pathList": [
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE (IVA.ATTRIBUTE = 'Test Colour') AND (I.HAS_VARIANTS = 0)",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE NOT (IVA.ATTRIBUTE = 'Test Colour') AND (I.HAS_VARIANTS = 0)",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE (IVA.ATTRIBUTE IS NULL) AND (I.HAS_VARIANTS = 0)",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE (I.HAS_VARIANTS = 1) AND (IVA.ATTRIBUTE = 'Test Colour')",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE (I.HAS_VARIANTS = 0) AND (IVA.ATTRIBUTE = 'Test Colour')",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA INNER JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE (I.HAS_VARIANTS = -1) AND (IVA.ATTRIBUTE = 'Test Colour')",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA LEFT JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE ((I.NAME IS NULL) AND (IVA.PARENT IS NOT NULL)) AND (IVA.ATTRIBUTE = 'Test Colour')",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA LEFT JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE ((I.NAME IS NULL) AND (IVA.PARENT IS NULL)) AND (IVA.ATTRIBUTE = 'Test Colour')",
        "SELECT I.NAME, IVA.ATTRIBUTE_VALUE AS VALUE FROM TABITEM VARIANT ATTRIBUTE IVA RIGHT JOIN TABITEM I ON IVA.PARENT = I.NAME WHERE ((IVA.PARENT IS NULL) AND (I.NAME IS NOT NULL)) AND (I.HAS_VARIANTS = 0)"
      ]
    },
    {
      "queryNo": 1346,
      "pathList": [
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE NOT (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.ITEM IS NULL) AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.DOCSTATUS = 2) AND (T1.ITEM = '_Test FG Item') AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.DOCSTATUS = 1) AND (T1.ITEM = '_Test FG Item') AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.DOCSTATUS = 0) AND (T1.ITEM = '_Test FG Item') AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.IS_ACTIVE = 2) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.IS_ACTIVE = 1) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T1.IS_ACTIVE = 0) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.NAME = 'BOM-_Test FG Item-001') AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE NOT (T1.NAME = 'BOM-_Test FG Item-001') AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T3.IS_STOCK_ITEM = 2) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T3.IS_STOCK_ITEM = 1) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (T3.IS_STOCK_ITEM = 0) AND (T1.ITEM = '_Test FG Item') AND (T1.DOCSTATUS = 1) AND (T1.IS_ACTIVE = 1) AND (T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 LEFT JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME LEFT JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.ITEM = '_Test FG Item' AND T1.DOCSTATUS = 1 AND T1.IS_ACTIVE = 1 AND T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 RIGHT JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 RIGHT JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME LEFT JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T3.NAME IS NULL) AND (T2.ITEM_CODE IS NOT NULL)) AND (T1.ITEM = '_Test FG Item' AND T1.DOCSTATUS = 1 AND T1.IS_ACTIVE = 1 AND T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME LEFT JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T3.NAME IS NULL) AND (T2.ITEM_CODE IS NULL)) AND (T1.ITEM = '_Test FG Item' AND T1.DOCSTATUS = 1 AND T1.IS_ACTIVE = 1 AND T1.NAME = 'BOM-_Test FG Item-001')",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 RIGHT JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME RIGHT JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T2.ITEM_CODE IS NULL) AND (T3.NAME IS NOT NULL)) AND (T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE (((T1.QUANTITY IS NOT NULL))) AND (T1.ITEM = '_Test FG Item' AND T1.DOCSTATUS = 1 AND T1.IS_ACTIVE = 1 AND T1.NAME = 'BOM-_Test FG Item-001' AND T3.IS_STOCK_ITEM = 1)",
        "SELECT T2.ITEM_CODE, T2.QTY / IFNULL(T1.QUANTITY, 1) AS QTY_CONSUMED_PER_UNIT, T2.RATE, T2.STOCK_UOM, T2.NAME, T2.DESCRIPTION FROM TABBOM T1 INNER JOIN TABBOM ITEM T2 ON T2.PARENT = T1.NAME INNER JOIN TABITEM T3 ON T2.ITEM_CODE = T3.NAME WHERE ((T1.QUANTITY IS NULL)) AND (T1.ITEM = '_Test FG Item' AND T1.DOCSTATUS = 1 AND T1.IS_ACTIVE = 1 AND T1.NAME = 'BOM-_Test FG Item-001' AND T3.IS_STOCK_ITEM = 1)"
      ]
    },
    {
      "queryNo": 1347,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.FISCAL_YEAR IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.COMPANY = '_Test Company') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.COMPANY IS NULL) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 2) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 1) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.DOCSTATUS = 0) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT))",
        "SELECT * FROM TABGL ENTRY GLE WHERE (NOT EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (GLE.FISCAL_YEAR = '_Test Fiscal Year 2013') AND (GLE.COMPANY = '_Test Company') AND (GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE NOT (NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE (NAME = GLE.PROJECT)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE EXISTS (SELECT NAME FROM TABPROJECT WHERE (GLE.PROJECT IS NULL)) AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1)",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT) HAVING COUNT(GLE.DEBIT) > COUNT(DISTINCT GLE.DEBIT) AND COUNT(DISTINCT GLE.DEBIT) > 1",
        "SELECT SUM(GLE.DEBIT) - SUM(GLE.CREDIT) FROM TABGL ENTRY GLE WHERE GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' AND GLE.FISCAL_YEAR = '_Test Fiscal Year 2013' AND GLE.COMPANY = '_Test Company' AND GLE.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABPROJECT WHERE NAME = GLE.PROJECT) HAVING COUNT(GLE.CREDIT) > COUNT(DISTINCT GLE.CREDIT) AND COUNT(DISTINCT GLE.CREDIT) > 1"
      ]
    },
    {
      "queryNo": 1348,
      "pathList": [
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST ITEM WHERE (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt') AND (RECEIPT_DOCUMENT = 'PREC-00012')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST ITEM WHERE NOT (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt') AND (RECEIPT_DOCUMENT = 'PREC-00012')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST ITEM WHERE (RECEIPT_DOCUMENT_TYPE IS NULL) AND (RECEIPT_DOCUMENT = 'PREC-00012')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST ITEM WHERE NOT (RECEIPT_DOCUMENT = 'PREC-00012') AND (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt')",
        "SELECT NAME, DOCSTATUS, PARENT, PARENTTYPE, IDX FROM TABLANDED COST ITEM WHERE (RECEIPT_DOCUMENT IS NULL) AND (RECEIPT_DOCUMENT_TYPE = 'Purchase Receipt')"
      ]
    },
    {
      "queryNo": 1349,
      "pathList": [
        "SELECT DEFAULT_PRICE_LIST FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier')",
        "SELECT DEFAULT_PRICE_LIST FROM TABSUPPLIER WHERE (NAME = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 1350,
      "pathList": [
        "SELECT LFT, RGT FROM TABTERRITORY WHERE NOT (NAME = 'All Territories')",
        "SELECT LFT, RGT FROM TABTERRITORY WHERE (NAME = 'All Territories')"
      ]
    },
    {
      "queryNo": 1351,
      "pathList": [
        "SELECT * FROM TABUSER EMAIL WHERE (PARENTTYPE = 'User') AND (PARENT = 'test@erpnext.com') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@erpnext.com') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@erpnext.com') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE NOT (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE NOT (PARENTFIELD = 'user_emails') AND (PARENTTYPE = 'User') AND (PARENT = 'test@erpnext.com')",
        "SELECT * FROM TABUSER EMAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'User') AND (PARENT = 'test@erpnext.com')"
      ]
    },
    {
      "queryNo": 1352,
      "pathList": [
        "SELECT OWNER FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00004')",
        "SELECT OWNER FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00004')"
      ]
    },
    {
      "queryNo": 1353,
      "pathList": [
        "SELECT * FROM TABEXPENSE CLAIM WHERE (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE NOT (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (PROJECT IS NULL) AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE NOT (TASK = 'TASK00014') AND (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (TASK IS NULL) AND (PROJECT = '_Test Project 1') AND (APPROVAL_STATUS = 'Approved') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE NOT (APPROVAL_STATUS = 'Approved') AND (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (APPROVAL_STATUS IS NULL) AND (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT * FROM TABEXPENSE CLAIM WHERE (DOCSTATUS = 0) AND (PROJECT = '_Test Project 1') AND (TASK = 'TASK00014') AND (APPROVAL_STATUS = 'Approved')",
        "SELECT SUM(TOTAL_SANCTIONED_AMOUNT) FROM TABEXPENSE CLAIM WHERE PROJECT = '_Test Project 1' AND TASK = 'TASK00014' AND APPROVAL_STATUS = 'Approved' AND DOCSTATUS = 1 HAVING COUNT(TOTAL_SANCTIONED_AMOUNT) > COUNT(DISTINCT TOTAL_SANCTIONED_AMOUNT) AND COUNT(DISTINCT TOTAL_SANCTIONED_AMOUNT) > 1"
      ]
    },
    {
      "queryNo": 1354,
      "pathList": [
        "SELECT LEAVE_BLOCK_LIST FROM TABDEPARTMENT WHERE NOT (NAME = '_Test Department 1')",
        "SELECT LEAVE_BLOCK_LIST FROM TABDEPARTMENT WHERE (NAME = '_Test Department 1')"
      ]
    },
    {
      "queryNo": 1355,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE (TABBOM.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABBOM WHERE (TABBOM.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABBOM WHERE (TABBOM.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1356,
      "pathList": [
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENTTYPE = 'Landed Cost Voucher') AND (PARENT = 'LCV00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'LCV00003') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (NAME NOT IN ('628be0d3d8', '7660d873e6'))",
        "SELECT NAME FROM TABLANDED COST ITEM WHERE (NAME IN ('628be0d3d8', '7660d873e6')) AND (PARENT = 'LCV00003') AND (PARENTTYPE = 'Landed Cost Voucher') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1357,
      "pathList": [
        "SELECT COMPANY FROM TABACCOUNT WHERE NOT (NAME = 'Sales - WP')",
        "SELECT COMPANY FROM TABACCOUNT WHERE (NAME = 'Sales - WP')"
      ]
    },
    {
      "queryNo": 1358,
      "pathList": [
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder')) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE NOT IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder')) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder'))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE NOT (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder'))",
        "SELECT ITEM_CODE, WAREHOUSE, PROJECTED_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE IN ('_Test Item', '_Test Item Warehouse Group Wise Reorder'))"
      ]
    },
    {
      "queryNo": 1359,
      "pathList": [
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00009')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00009')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00009')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'STE-00009') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 1360,
      "pathList": [
        "SELECT * FROM TABNEWSLETTER WHERE NOT (NAME = '_Test Newsletter')",
        "SELECT * FROM TABNEWSLETTER WHERE (NAME = '_Test Newsletter')"
      ]
    },
    {
      "queryNo": 1361,
      "pathList": [
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.SUBJECT LIKE '_Test Event%%') AND (((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.SUBJECT NOT LIKE '_Test Event%%') AND (((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.SUBJECT IS NULL) AND (((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE NOT (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'test1@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'test1@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.EVENT_TYPE IS NULL) AND NOT (TABEVENT.OWNER = 'test1@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.OWNER = 'test1@example.com') AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (TABEVENT.OWNER IS NULL) AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND NOT (TABEVENT.EVENT_TYPE = 'Public') AND NOT (TABEVENT.OWNER = 'test1@example.com') AND ((TABEVENT.NAME NOT IN ('EV00003'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE ((TABEVENT.NAME NOT IN ('EV00003'))) AND NOT ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest')))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE ((TABEVENT.NAME IN ('EV00003'))) AND NOT ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest')))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%')",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%' AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com') OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%' AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com') OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND (TABEVENT.SUBJECT LIKE '_Test Event%%' AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com') OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Employee', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND (TABEVENT.SUBJECT LIKE '_Test Event%%' AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com') OR (TABEVENT.NAME IN ('EV00003'))))",
        "SELECT NAME, SUBJECT FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND (TABEVENT.SUBJECT LIKE '_Test Event%%' AND ((TABEVENT.EVENT_TYPE = 'Public' OR TABEVENT.OWNER = 'test1@example.com') OR (TABEVENT.NAME IN ('EV00003'))))"
      ]
    },
    {
      "queryNo": 1362,
      "pathList": [
        "SELECT NAME FROM TABACADEMIC TERM WHERE (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (DOCSTATUS < 2) AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE NOT (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (DOCSTATUS < 2) AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (ACADEMIC_YEAR IS NULL) AND (TERM_NAME = '_Test Academic Term 1') AND (DOCSTATUS < 2) AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE NOT (TERM_NAME = '_Test Academic Term 1') AND (ACADEMIC_YEAR = '2014-2015') AND (DOCSTATUS < 2) AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (TERM_NAME IS NULL) AND (ACADEMIC_YEAR = '2014-2015') AND (DOCSTATUS < 2) AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (DOCSTATUS = 3) AND (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (DOCSTATUS = 2) AND (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (DOCSTATUS = 1) AND (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (NAME <> '2014-2015 (_Test Academic Term 1)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE NOT (NAME <> '2014-2015 (_Test Academic Term 1)') AND (ACADEMIC_YEAR = '2014-2015') AND (TERM_NAME = '_Test Academic Term 1') AND (DOCSTATUS < 2)"
      ]
    },
    {
      "queryNo": 1363,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item')) AND (IS_STOCK_ITEM = 1)",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 2) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 1) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (IS_STOCK_ITEM = 0) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))"
      ]
    },
    {
      "queryNo": 1364,
      "pathList": [
        "SELECT DT FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Table') AND (OPTIONS = 'Role')",
        "SELECT DT FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Table') AND (OPTIONS = 'Role')",
        "SELECT DT FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'Role')",
        "SELECT DT FROM TABCUSTOM FIELD WHERE NOT (OPTIONS = 'Role') AND (FIELDTYPE = 'Table')",
        "SELECT DT FROM TABCUSTOM FIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Table')"
      ]
    },
    {
      "queryNo": 1365,
      "pathList": [
        "SELECT OWNER FROM TABWEB PAGE WHERE NOT (NAME = 'test-web-page-3')",
        "SELECT OWNER FROM TABWEB PAGE WHERE (NAME = 'test-web-page-3')"
      ]
    },
    {
      "queryNo": 1366,
      "pathList": [
        "SELECT IS_STANDARD FROM TABREPORT WHERE NOT (NAME = 'User Activity Report')",
        "SELECT IS_STANDARD FROM TABREPORT WHERE (NAME = 'User Activity Report')"
      ]
    },
    {
      "queryNo": 1367,
      "pathList": [
        "SELECT * FROM TABCUSTOMER WHERE NOT (NAME = 'test_cart_user')",
        "SELECT * FROM TABCUSTOMER WHERE (NAME = 'test_cart_user')"
      ]
    },
    {
      "queryNo": 1369,
      "pathList": [
        "SELECT MAX(char_length(FULL_NAME)) FROM TABUSER HAVING COUNT(char_length(FULL_NAME)) > COUNT(DISTINCT char_length(FULL_NAME)) AND COUNT(DISTINCT char_length(FULL_NAME)) > 1"
      ]
    },
    {
      "queryNo": 1370,
      "pathList": [
        "SELECT NAME FROM TABPROJECT WHERE NOT (TABPROJECT.STATUS = 'Open')",
        "SELECT NAME FROM TABPROJECT WHERE (TABPROJECT.STATUS = 'Open')",
        "SELECT NAME FROM TABPROJECT WHERE (TABPROJECT.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1371,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE (START_DATE = '2016-11-01') AND (END_DATE = '2016-11-30')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (START_DATE = '2016-11-01') AND (END_DATE = '2016-11-30')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (START_DATE IS NULL) AND (END_DATE = '2016-11-30')",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (END_DATE = '2016-11-30') AND (START_DATE = '2016-11-01')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (END_DATE IS NULL) AND (START_DATE = '2016-11-01')"
      ]
    },
    {
      "queryNo": 1372,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE NOT (NAME = 'Test Item for Merging 2')",
        "SELECT NAME FROM TABITEM WHERE (NAME = 'Test Item for Merging 2')"
      ]
    },
    {
      "queryNo": 1373,
      "pathList": [
        "SELECT OWNER FROM TABTODO WHERE (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_NAME = 'TASK00009') AND (TABTODO.REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE NOT (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_NAME = 'TASK00009') AND (TABTODO.REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE (TABTODO.STATUS IS NULL) AND (TABTODO.REFERENCE_NAME = 'TASK00009') AND (TABTODO.REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE NOT (TABTODO.REFERENCE_NAME = 'TASK00009') AND (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE (TABTODO.REFERENCE_NAME IS NULL) AND (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_TYPE = 'Task')",
        "SELECT OWNER FROM TABTODO WHERE NOT (TABTODO.REFERENCE_TYPE = 'Task') AND (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_NAME = 'TASK00009')",
        "SELECT OWNER FROM TABTODO WHERE (TABTODO.REFERENCE_TYPE IS NULL) AND (TABTODO.STATUS = 'Open') AND (TABTODO.REFERENCE_NAME = 'TASK00009')"
      ]
    },
    {
      "queryNo": 1374,
      "pathList": [
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE NOT (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (PARTY_TYPE = 'Role')",
        "SELECT DISTINCT PARTY_TYPE, PARENTTYPE FROM TABGL ENTRY WHERE (PARTY_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1375,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE (COMPANY = '_Test Company') AND (NAME = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (COMPANY = '_Test Company') AND (NAME = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (COMPANY IS NULL) AND (NAME = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (NAME = '_Test Warehouse - _TC') AND (COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 1376,
      "pathList": [
        "SELECT OWNER FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00008')",
        "SELECT OWNER FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00008')"
      ]
    },
    {
      "queryNo": 1377,
      "pathList": [
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 2) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 0) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 2) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 1) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 0) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST = 'SINV-00017') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE NOT (PAR.RETURN_AGAINST = 'SINV-00017') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST IS NULL) AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD LEFT JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NOT NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD LEFT JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD RIGHT JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE ((CHILD.PARENT IS NULL) AND (PAR.NAME IS NOT NULL)) AND (PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'SINV-00017') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'SINV-00017' GROUP BY CHILD.ITEM_CODE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'SINV-00017' HAVING count(DISTINCT CHILD.ITEM_CODE) > 1",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY FROM TABSALES INVOICE ITEM CHILD INNER JOIN TABSALES INVOICE PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'SINV-00017' GROUP BY CHILD.ITEM_CODE HAVING COUNT(ABS(CHILD.QTY)) > COUNT(DISTINCT ABS(CHILD.QTY)) AND COUNT(DISTINCT ABS(CHILD.QTY)) > 1"
      ]
    },
    {
      "queryNo": 1378,
      "pathList": [
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 2) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.DOCSTATUS = 0) AND (PAR.IS_RETURN = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 2) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 1) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.IS_RETURN = 0) AND (PAR.DOCSTATUS = 1) AND (PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST = 'PREC-00006') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE NOT (PAR.RETURN_AGAINST = 'PREC-00006') AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.RETURN_AGAINST IS NULL) AND (PAR.DOCSTATUS = 1) AND (PAR.IS_RETURN = 1) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD LEFT JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NOT NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD LEFT JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE (PAR.NAME IS NULL) AND (CHILD.PARENT IS NULL) GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD RIGHT JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE ((CHILD.PARENT IS NULL) AND (PAR.NAME IS NOT NULL)) AND (PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006') GROUP BY CHILD.ITEM_CODE",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006' GROUP BY CHILD.ITEM_CODE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006' HAVING count(DISTINCT CHILD.ITEM_CODE) > 1",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006' GROUP BY CHILD.ITEM_CODE HAVING COUNT(ABS(CHILD.QTY)) > COUNT(DISTINCT ABS(CHILD.QTY)) AND COUNT(DISTINCT ABS(CHILD.QTY)) > 1",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006' GROUP BY CHILD.ITEM_CODE HAVING COUNT(ABS(CHILD.REJECTED_QTY)) > COUNT(DISTINCT ABS(CHILD.REJECTED_QTY)) AND COUNT(DISTINCT ABS(CHILD.REJECTED_QTY)) > 1",
        "SELECT CHILD.ITEM_CODE, SUM(ABS(CHILD.QTY)) AS QTY, SUM(ABS(CHILD.REJECTED_QTY)) AS REJECTED_QTY, SUM(ABS(CHILD.RECEIVED_QTY)) AS RECEIVED_QTY FROM TABPURCHASE RECEIPT ITEM CHILD INNER JOIN TABPURCHASE RECEIPT PAR ON CHILD.PARENT = PAR.NAME WHERE PAR.DOCSTATUS = 1 AND PAR.IS_RETURN = 1 AND PAR.RETURN_AGAINST = 'PREC-00006' GROUP BY CHILD.ITEM_CODE HAVING COUNT(ABS(CHILD.RECEIVED_QTY)) > COUNT(DISTINCT ABS(CHILD.RECEIVED_QTY)) AND COUNT(DISTINCT ABS(CHILD.RECEIVED_QTY)) > 1"
      ]
    },
    {
      "queryNo": 1379,
      "pathList": [
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE (T2.SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE NOT (T2.SALES_ORDER = 'SO-00027') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE (T2.SALES_ORDER IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 2) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 1) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 INNER JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 0) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 LEFT JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 RIGHT JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.SALES_ORDER = 'SO-00027')",
        "SELECT T1.NAME FROM TABMAINTENANCE SCHEDULE T1 RIGHT JOIN TABMAINTENANCE SCHEDULE ITEM T2 ON T2.PARENT = T1.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.SALES_ORDER = 'SO-00027')"
      ]
    },
    {
      "queryNo": 1380,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (LFT = 2) AND (RGT >= 8)",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (LFT = 1) AND (RGT >= 8)",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (LFT = 0) AND (RGT >= 8)",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (RGT = 9) AND (LFT <= 1)",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (RGT = 8) AND (LFT <= 1)",
        "SELECT NAME FROM TABCUSTOMER GROUP WHERE (RGT = 7) AND (LFT <= 1)"
      ]
    },
    {
      "queryNo": 1381,
      "pathList": [
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (ACCOUNT IS NULL) AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 2) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 1) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (DOCSTATUS = 0) AND (ACCOUNT = '_Test Receivable - _TC') AND (PARENT = '_T-Journal Entry-00004') AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENT = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENT IS NULL) AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (((REFERENCE_TYPE IS NULL) OR REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')))",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE ((REFERENCE_TYPE IS NOT NULL)) AND (REFERENCE_TYPE NOT IN ('', 'Sales Order', 'Purchase Order')) AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')",
        "SELECT * FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IN ('', 'Sales Order', 'Purchase Order')) AND ((REFERENCE_TYPE IS NOT NULL)) AND (ACCOUNT = '_Test Receivable - _TC') AND (DOCSTATUS = 1) AND (PARENT = '_T-Journal Entry-00004')"
      ]
    },
    {
      "queryNo": 1382,
      "pathList": [
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (DOCSTATUS = 1) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (DOCSTATUS = -1) AND (IFNULL(PERMLEVEL, 0) = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (IFNULL(PERMLEVEL, 0) = 1) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (IFNULL(PERMLEVEL, 0) = 0) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (IFNULL(PERMLEVEL, 0) = -1) AND (DOCSTATUS = 0) AND (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (ROLE NOT IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (ROLE IS NULL) AND (DOCSTATUS = 0) AND (IFNULL(PERMLEVEL, 0) = 0)",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE (((PERMLEVEL IS NOT NULL))) AND (DOCSTATUS = 0 AND ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))",
        "SELECT * FROM TABCUSTOM DOCPERM WHERE ((PERMLEVEL IS NULL)) AND (DOCSTATUS = 0 AND ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))"
      ]
    },
    {
      "queryNo": 1383,
      "pathList": [
        "SELECT * FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00003')",
        "SELECT * FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00003')"
      ]
    },
    {
      "queryNo": 1384,
      "pathList": [
        "SELECT MAX(char_length(MIDDLE_NAME)) FROM TABUSER HAVING COUNT(char_length(MIDDLE_NAME)) > COUNT(DISTINCT char_length(MIDDLE_NAME)) AND COUNT(DISTINCT char_length(MIDDLE_NAME)) > 1"
      ]
    },
    {
      "queryNo": 1385,
      "pathList": [
        "SELECT ITEM_GROUP, BRAND FROM TABITEM WHERE NOT (NAME = '_Test Regular Item')",
        "SELECT ITEM_GROUP, BRAND FROM TABITEM WHERE (NAME = '_Test Regular Item')"
      ]
    },
    {
      "queryNo": 1386,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT WHERE NOT (TYPE = 'Cash')",
        "SELECT NAME FROM TABMODE OF PAYMENT WHERE (TYPE = 'Cash')",
        "SELECT NAME FROM TABMODE OF PAYMENT WHERE (TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1387,
      "pathList": [
        "SELECT ITEM_CODE FROM TABITEM WHERE NOT (TABITEM.VARIANT_OF = '_Test Variant Item')",
        "SELECT ITEM_CODE FROM TABITEM WHERE (TABITEM.VARIANT_OF = '_Test Variant Item')",
        "SELECT ITEM_CODE FROM TABITEM WHERE (TABITEM.VARIANT_OF IS NULL)"
      ]
    },
    {
      "queryNo": 1388,
      "pathList": [
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Regular Item')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Regular Item')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Regular Item')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Regular Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT ACTUAL_QTY FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1389,
      "pathList": [
        "SELECT STATUS FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00001')",
        "SELECT STATUS FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00001')"
      ]
    },
    {
      "queryNo": 1390,
      "pathList": [
        "SELECT DISTINCT ITEM_CODE, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00004')",
        "SELECT DISTINCT ITEM_CODE, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Reconciliation') AND (VOUCHER_NO = 'SR/00004')",
        "SELECT DISTINCT ITEM_CODE, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SR/00004')",
        "SELECT DISTINCT ITEM_CODE, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'SR/00004') AND (VOUCHER_TYPE = 'Stock Reconciliation')",
        "SELECT DISTINCT ITEM_CODE, WAREHOUSE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Reconciliation')"
      ]
    },
    {
      "queryNo": 1391,
      "pathList": [
      ]
    },
    {
      "queryNo": 1392,
      "pathList": [
      ]
    },
    {
      "queryNo": 1393,
      "pathList": [
        "SELECT SUPPLIER_PART_NO FROM TABITEM SUPPLIER WHERE (SUPPLIER = '_Test Supplier') AND (PARENT = '_Test Item')",
        "SELECT SUPPLIER_PART_NO FROM TABITEM SUPPLIER WHERE NOT (SUPPLIER = '_Test Supplier') AND (PARENT = '_Test Item')",
        "SELECT SUPPLIER_PART_NO FROM TABITEM SUPPLIER WHERE (SUPPLIER IS NULL) AND (PARENT = '_Test Item')",
        "SELECT SUPPLIER_PART_NO FROM TABITEM SUPPLIER WHERE NOT (PARENT = '_Test Item') AND (SUPPLIER = '_Test Supplier')",
        "SELECT SUPPLIER_PART_NO FROM TABITEM SUPPLIER WHERE (PARENT IS NULL) AND (SUPPLIER = '_Test Supplier')"
      ]
    },
    {
      "queryNo": 1394,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENT = 'PREC-00013') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENT = 'PREC-00013') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00013') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PREC-00013') AND (PARENTFIELD = 'supplied_items') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENTFIELD = 'supplied_items') AND (PARENT = 'PREC-00013') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PREC-00013') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('a9bb4be126', '2c307ec3bb'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (NAME IN ('a9bb4be126', '2c307ec3bb')) AND (PARENT = 'PREC-00013') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items')"
      ]
    },
    {
      "queryNo": 1395,
      "pathList": [
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENTTYPE = 'Address') AND (LINK_NAME = '_Test Lead') AND (LINK_DOCTYPE = 'Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (PARENTTYPE = 'Address') AND (LINK_NAME = '_Test Lead') AND (LINK_DOCTYPE = 'Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENTTYPE IS NULL) AND (LINK_NAME = '_Test Lead') AND (LINK_DOCTYPE = 'Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (LINK_NAME = '_Test Lead') AND (PARENTTYPE = 'Address') AND (LINK_DOCTYPE = 'Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (LINK_NAME IS NULL) AND (PARENTTYPE = 'Address') AND (LINK_DOCTYPE = 'Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (LINK_DOCTYPE = 'Lead') AND (PARENTTYPE = 'Address') AND (LINK_NAME = '_Test Lead')",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (LINK_DOCTYPE IS NULL) AND (PARENTTYPE = 'Address') AND (LINK_NAME = '_Test Lead')"
      ]
    },
    {
      "queryNo": 1396,
      "pathList": [
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE NOT (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.ITEM_CODE IS NULL) AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE NOT (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.WAREHOUSE IS NULL) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.QTY = PO_ITEM.RECEIVED_QTY + 1) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.QTY = PO_ITEM.RECEIVED_QTY) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.QTY = PO_ITEM.RECEIVED_QTY - 1) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO.STATUS IN ('Closed', 'Delivered')) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO.STATUS IS NULL) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.DOCSTATUS = 1) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 2) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 1) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO.DOCSTATUS = 0) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.DELIVERED_BY_SUPPLIER = 1) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.DELIVERED_BY_SUPPLIER = 0) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE (PO_ITEM.DELIVERED_BY_SUPPLIER = -1) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100') AND (PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC') AND (PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY) AND (PO.STATUS NOT IN ('Closed', 'Delivered')) AND (PO.DOCSTATUS = 1)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM LEFT JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE ((PO.NAME IS NULL) AND (PO_ITEM.PARENT IS NOT NULL)) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100' AND PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY AND PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM LEFT JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE ((PO.NAME IS NULL) AND (PO_ITEM.PARENT IS NULL)) AND (PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100' AND PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY AND PO_ITEM.DELIVERED_BY_SUPPLIER = 0)",
        "SELECT * FROM TABPURCHASE ORDER ITEM PO_ITEM RIGHT JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE ((PO_ITEM.PARENT IS NULL) AND (PO.NAME IS NOT NULL)) AND (PO.STATUS NOT IN ('Closed', 'Delivered') AND PO.DOCSTATUS = 1)",
        "SELECT SUM((PO_ITEM.QTY - PO_ITEM.RECEIVED_QTY) * PO_ITEM.CONVERSION_FACTOR) FROM TABPURCHASE ORDER ITEM PO_ITEM INNER JOIN TABPURCHASE ORDER PO ON PO_ITEM.PARENT = PO.NAME WHERE PO_ITEM.ITEM_CODE = '_Test Item Home Desktop 100' AND PO_ITEM.WAREHOUSE = '_Test Warehouse - _TC' AND PO_ITEM.QTY > PO_ITEM.RECEIVED_QTY AND PO.STATUS NOT IN ('Closed', 'Delivered') AND PO.DOCSTATUS = 1 AND PO_ITEM.DELIVERED_BY_SUPPLIER = 0 HAVING COUNT((PO_ITEM.QTY - PO_ITEM.RECEIVED_QTY) * PO_ITEM.CONVERSION_FACTOR) > COUNT(DISTINCT (PO_ITEM.QTY - PO_ITEM.RECEIVED_QTY) * PO_ITEM.CONVERSION_FACTOR) AND COUNT(DISTINCT (PO_ITEM.QTY - PO_ITEM.RECEIVED_QTY) * PO_ITEM.CONVERSION_FACTOR) > 1"
      ]
    },
    {
      "queryNo": 1397,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER TYPE WHERE NOT (NAME = '_Test Supplier Type')",
        "SELECT NAME FROM TABSUPPLIER TYPE WHERE (NAME = '_Test Supplier Type')"
      ]
    },
    {
      "queryNo": 1398,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'Administrator') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'Administrator') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'Administrator')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'Administrator') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Manufacturing User', 'Sales User', 'Instructor', 'Knowledge Base Contributor', 'Stock User', 'HR Manager', 'Purchase User', 'Item Manager', 'Accounts User', 'Auditor', 'Supplier', 'Newsletter Manager', 'Leave Approver', 'Maintenance User', '_Test Role', '_Test Role 3', 'Customer', 'Report Manager', '_Test Role 2', 'Administrator', 'Sales Master Manager', 'Manufacturing Manager', 'Purchase Master Manager', 'Maintenance Manager', 'Expense Approver', 'System Manager', 'Analytics', 'HR User', 'Stock Manager', 'Website Manager', '_Test Role 4', 'Quality Manager', 'Student', 'Support Team', 'Projects Manager', 'Fleet Manager', 'Blogger', 'Knowledge Base Editor', 'Sales Manager', 'Purchase Manager', 'Accounts Manager', 'Projects User', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'Administrator' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'Administrator')))"
      ]
    },
    {
      "queryNo": 1399,
      "pathList": [
        "SELECT ENABLED FROM TABUSER WHERE NOT (NAME = 'test_deactivate_additional_users@example.com')",
        "SELECT ENABLED FROM TABUSER WHERE (NAME = 'test_deactivate_additional_users@example.com')"
      ]
    },
    {
      "queryNo": 1400,
      "pathList": [
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 2) AND (NAME <> 'TR0003')",
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 1) AND (NAME <> 'TR0003')",
        "SELECT NAME FROM TABTAX RULE WHERE (USE_FOR_SHOPPING_CART = 0) AND (NAME <> 'TR0003')",
        "SELECT NAME FROM TABTAX RULE WHERE (NAME <> 'TR0003') AND (USE_FOR_SHOPPING_CART = 1)",
        "SELECT NAME FROM TABTAX RULE WHERE NOT (NAME <> 'TR0003') AND (USE_FOR_SHOPPING_CART = 1)"
      ]
    },
    {
      "queryNo": 1401,
      "pathList": [
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE NOT (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE NOT (PARENT = 'RFQ-00001') AND (PARENTTYPE = 'Request for Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Request for Quotation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001')",
        "SELECT * FROM TABREQUEST FOR QUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001')"
      ]
    },
    {
      "queryNo": 1402,
      "pathList": [
        "SELECT COMPANY FROM TABWAREHOUSE WHERE NOT (NAME = 'Stores - _TC')",
        "SELECT COMPANY FROM TABWAREHOUSE WHERE (NAME = 'Stores - _TC')"
      ]
    },
    {
      "queryNo": 1403,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Journal Entry') AND (REFERENCE_NAME = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = '_T-Journal Entry-00004')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_NAME = '_T-Journal Entry-00004') AND (REFERENCE_TYPE = 'Journal Entry')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Journal Entry')"
      ]
    },
    {
      "queryNo": 1404,
      "pathList": [
        "SELECT NAME FROM TABEVENT WHERE NOT (NAME = 'EV00016')",
        "SELECT NAME FROM TABEVENT WHERE (NAME = 'EV00016')"
      ]
    },
    {
      "queryNo": 1405,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENT = 'JV-00012') AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENT = 'JV-00012') AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENTTYPE = 'Journal Entry') AND (PARENT = 'JV-00012') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'JV-00012') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'JV-00012') AND (PARENTTYPE = 'Journal Entry') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'JV-00012') AND (PARENTTYPE = 'Journal Entry') AND (NAME NOT IN ('0881ce0dd9', 'f7a303a61e'))",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (NAME IN ('0881ce0dd9', 'f7a303a61e')) AND (PARENT = 'JV-00012') AND (PARENTTYPE = 'Journal Entry') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 1406,
      "pathList": [
        "SELECT NAME FROM TABCOST CENTER WHERE (LFT = 6) AND (RGT >= 8)",
        "SELECT NAME FROM TABCOST CENTER WHERE (LFT = 5) AND (RGT >= 8)",
        "SELECT NAME FROM TABCOST CENTER WHERE (LFT = 4) AND (RGT >= 8)",
        "SELECT NAME FROM TABCOST CENTER WHERE (RGT = 9) AND (LFT <= 5)",
        "SELECT NAME FROM TABCOST CENTER WHERE (RGT = 8) AND (LFT <= 5)",
        "SELECT NAME FROM TABCOST CENTER WHERE (RGT = 7) AND (LFT <= 5)"
      ]
    },
    {
      "queryNo": 1407,
      "pathList": [
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Event') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Event') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND (SHARE_DOCTYPE = 'Event') AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Event') AND ((USER = 'Guest')) AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND ((USER = 'Guest')) AND (READ = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 2) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Event')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 1) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Event')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (READ = 0) AND ((USER = 'Guest')) AND (SHARE_DOCTYPE = 'Event')"
      ]
    },
    {
      "queryNo": 1408,
      "pathList": [
        "SELECT INSPECTION_REQUIRED_BEFORE_PURCHASE FROM TABITEM WHERE NOT (NAME = '_Test Serialized Item With Series')",
        "SELECT INSPECTION_REQUIRED_BEFORE_PURCHASE FROM TABITEM WHERE (NAME = '_Test Serialized Item With Series')"
      ]
    },
    {
      "queryNo": 1409,
      "pathList": [
        "SELECT SCRAP_WAREHOUSE, QTY, PRODUCED_QTY, BOM_NO FROM TABPRODUCTION ORDER WHERE NOT (NAME = 'PRO-00010')",
        "SELECT SCRAP_WAREHOUSE, QTY, PRODUCED_QTY, BOM_NO FROM TABPRODUCTION ORDER WHERE (NAME = 'PRO-00010')"
      ]
    },
    {
      "queryNo": 1410,
      "pathList": [
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (QTY = RECEIVED_QTY + 1) AND (NAME = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (QTY = RECEIVED_QTY) AND (NAME = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (QTY = RECEIVED_QTY - 1) AND (NAME = '1534b0ea94') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (NAME = '1534b0ea94') AND (QTY < RECEIVED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE NOT (NAME = '1534b0ea94') AND (QTY < RECEIVED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 2) AND (QTY < RECEIVED_QTY) AND (NAME = '1534b0ea94')",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 1) AND (QTY < RECEIVED_QTY) AND (NAME = '1534b0ea94')",
        "SELECT ITEM_CODE, QTY, RECEIVED_QTY, PARENTTYPE, PARENT FROM TABPURCHASE ORDER ITEM WHERE (DOCSTATUS = 0) AND (QTY < RECEIVED_QTY) AND (NAME = '1534b0ea94')"
      ]
    },
    {
      "queryNo": 1411,
      "pathList": [
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'sales_orders')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE NOT (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'sales_orders')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'sales_orders')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE NOT (PARENT = 'Production Planning Tool') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'sales_orders')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'sales_orders')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE NOT (PARENTFIELD = 'sales_orders') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')",
        "SELECT * FROM TABPRODUCTION PLAN SALES ORDER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')"
      ]
    },
    {
      "queryNo": 1412,
      "pathList": [
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'suppliers')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE NOT (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'suppliers')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE (PARENTTYPE IS NULL) AND (PARENT = 'RFQ-00001') AND (PARENTFIELD = 'suppliers')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE NOT (PARENT = 'RFQ-00001') AND (PARENTTYPE = 'Request for Quotation') AND (PARENTFIELD = 'suppliers')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Request for Quotation') AND (PARENTFIELD = 'suppliers')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE NOT (PARENTFIELD = 'suppliers') AND (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001')",
        "SELECT * FROM TABREQUEST FOR QUOTATION SUPPLIER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Request for Quotation') AND (PARENT = 'RFQ-00001')"
      ]
    },
    {
      "queryNo": 1413,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE NOT (NAME = '_T-Material Request-00009')",
        "SELECT NAME FROM TABMATERIAL REQUEST WHERE (NAME = '_T-Material Request-00009')"
      ]
    },
    {
      "queryNo": 1414,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE NOT (AMENDED_FROM = 'PO-00014')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE (AMENDED_FROM = 'PO-00014')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE ORDER WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1415,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00007') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE NOT (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00007') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SINV-00007') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE NOT (PARENT = 'SINV-00007') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE NOT (PARENTFIELD = 'payments') AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00007')",
        "SELECT * FROM TABSALES INVOICE PAYMENT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00007')"
      ]
    },
    {
      "queryNo": 1416,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (COMPANY = 'Wind Power LLC')",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 1417,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@erpnext.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@erpnext.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('7b30e900a1', '59d95bd292', 'b444c1e880', 'cd89003e89', 'f03e2c7c05', 'f63793e6bc', 'f94ad98652', '07b2ef596e', '812e5ca9dd', 'e8059e4180', 'edff6111cc', 'ffd2cef4d4', 'b1af3e03ea', 'a9b7693679', 'd01b1293b3', 'ea2d1137d6', '82ae1a39ae', '71825e66b8', 'd37be6c148', '21ab88db6a', '5e10abc8b6', 'bae9c55e5a', 'c295a67d32', '313eb36ee8', '9f1e316d28', 'f7310205c3', '5be3ecae94', 'aff3c6c432', '5a857c3f13', 'd071c344a0', '32ee429964', '8c875a2d2f', 'd97ba93d5c', 'b0defe0a18', '0b6815e387', '2490097f42')) AND (PARENT = 'test@erpnext.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1418,
      "pathList": [
        "SELECT * FROM TABSALARY COMPONENT WHERE NOT (NAME = 'HRA')",
        "SELECT * FROM TABSALARY COMPONENT WHERE (NAME = 'HRA')"
      ]
    },
    {
      "queryNo": 1419,
      "pathList": [
        "SELECT NAME, CURRENCY FROM TABPRICE LIST WHERE (NAME NOT IN ('Standard Selling'))",
        "SELECT NAME, CURRENCY FROM TABPRICE LIST WHERE (NAME IN ('Standard Selling'))"
      ]
    },
    {
      "queryNo": 1420,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE NOT (RECURRING_ID = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE (RECURRING_ID = 'SO-00026')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES ORDER WHERE (RECURRING_ID IS NULL)"
      ]
    },
    {
      "queryNo": 1421,
      "pathList": [
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENT = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENT = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENT = 'Daily Work Summary Settings') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENTFIELD = 'companies')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE NOT (PARENTFIELD = 'companies') AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENT = 'Daily Work Summary Settings')",
        "SELECT * FROM TABDAILY WORK SUMMARY SETTINGS COMPANY WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Daily Work Summary Settings') AND (PARENT = 'Daily Work Summary Settings')"
      ]
    },
    {
      "queryNo": 1422,
      "pathList": [
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (NAME = 'fb8c4feea4')",
        "SELECT * FROM TABCOMMUNICATION WHERE (NAME = 'fb8c4feea4')"
      ]
    },
    {
      "queryNo": 1423,
      "pathList": [
        "SELECT MAX(char_length(PARENTFIELD)) FROM TABEVENT HAVING COUNT(char_length(PARENTFIELD)) > COUNT(DISTINCT char_length(PARENTFIELD)) AND COUNT(DISTINCT char_length(PARENTFIELD)) > 1"
      ]
    },
    {
      "queryNo": 1424,
      "pathList": [
      ]
    },
    {
      "queryNo": 1425,
      "pathList": [
        "SELECT VARIANT_OF FROM TABITEM WHERE NOT (NAME = '_Test Item Home Desktop 100')",
        "SELECT VARIANT_OF FROM TABITEM WHERE (NAME = '_Test Item Home Desktop 100')"
      ]
    },
    {
      "queryNo": 1426,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME))) AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME))) AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (INSTRUCTOR IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME))) AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (INSTRUCTOR = '_T-Instructor-00001') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME))) AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (SCHEDULE_DATE IS NULL) AND (INSTRUCTOR = '_T-Instructor-00001') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME))) AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME > '4:00:00') AND (FROM_TIME < '5:00:00') AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME > '4:00:00') AND (FROM_TIME < '5:00:00') AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' < TO_TIME)) AND NOT (('5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME < '5:00:00') AND (FROM_TIME > '4:00:00') AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME > '4:00:00') AND (TO_TIME < '5:00:00') AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME > '4:00:00') AND (TO_TIME < '5:00:00') AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME)) AND NOT (('4:00:00' = FROM_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME < '5:00:00') AND (TO_TIME > '4:00:00') AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('4:00:00' > FROM_TIME) AND ('4:00:00' < TO_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('4:00:00' > FROM_TIME) AND ('4:00:00' < TO_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('4:00:00' < TO_TIME) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('4:00:00' < TO_TIME) AND ('4:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('4:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' = FROM_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('4:00:00' = FROM_TIME) AND ('5:00:00' = TO_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('4:00:00' = FROM_TIME) AND ('5:00:00' = TO_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('5:00:00' = TO_TIME) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' < TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('5:00:00' = TO_TIME) AND ('4:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT ((TO_TIME > '4:00:00' AND TO_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('4:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00')) AND NOT (('4:00:00' > FROM_TIME)) AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00043')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (NAME <> 'SH00043') AND (INSTRUCTOR = '_T-Instructor-00001') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '4:00:00' AND FROM_TIME < '5:00:00') OR (TO_TIME > '4:00:00' AND TO_TIME < '5:00:00') OR ('4:00:00' > FROM_TIME AND '4:00:00' < TO_TIME) OR ('4:00:00' = FROM_TIME AND '5:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 1427,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 2) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 1) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 0) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Item', '_Test Item Home Desktop 100')) AND (HAS_SERIAL_NO = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Item', '_Test Item Home Desktop 100')) AND (HAS_SERIAL_NO = 1)"
      ]
    },
    {
      "queryNo": 1428,
      "pathList": [
        "SELECT TABOPPORTUNITY.NAME FROM TABOPPORTUNITY WHERE NOT (TABOPPORTUNITY.LEAD = '_T-Lead-00001')",
        "SELECT TABOPPORTUNITY.NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.LEAD = '_T-Lead-00001')",
        "SELECT TABOPPORTUNITY.NAME FROM TABOPPORTUNITY WHERE (TABOPPORTUNITY.LEAD IS NULL)"
      ]
    },
    {
      "queryNo": 1429,
      "pathList": [
        "SELECT NAME FROM TABBUDGET WHERE (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (PROJECT IS NULL) AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 3) AND (PROJECT = '_Test Project') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (COMPANY = '_Test Company') AND (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (COMPANY IS NULL) AND (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (FISCAL_YEAR = '_Test Fiscal Year 2013') AND (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE (FISCAL_YEAR IS NULL) AND (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (NAME <> '_Test Project/_Test Fiscal Year 2013/001')",
        "SELECT NAME FROM TABBUDGET WHERE NOT (NAME <> '_Test Project/_Test Fiscal Year 2013/001') AND (PROJECT = '_Test Project') AND (DOCSTATUS <> 2) AND (COMPANY = '_Test Company') AND (FISCAL_YEAR = '_Test Fiscal Year 2013')"
      ]
    },
    {
      "queryNo": 1430,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTTYPE = 'Purchase Order') AND (PARENT = 'PO-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PO-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (NAME NOT IN ('c8c0b3ee72', 'ab62ad5a18'))",
        "SELECT NAME FROM TABPURCHASE ORDER ITEM WHERE (NAME IN ('c8c0b3ee72', 'ab62ad5a18')) AND (PARENT = 'PO-00001') AND (PARENTTYPE = 'Purchase Order') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1431,
      "pathList": [
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Reserves and Surplus - _TC')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Reserves and Surplus - _TC')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PCE/001') AND (ACCOUNT = '_Test Account Reserves and Surplus - _TC')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'PCE/001') AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (ACCOUNT = '_Test Account Reserves and Surplus - _TC')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (ACCOUNT = '_Test Account Reserves and Surplus - _TC')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE NOT (ACCOUNT = '_Test Account Reserves and Surplus - _TC') AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001')",
        "SELECT DEBIT - CREDIT FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (VOUCHER_TYPE = 'Period Closing Voucher') AND (VOUCHER_NO = 'PCE/001')"
      ]
    },
    {
      "queryNo": 1432,
      "pathList": [
        "SELECT MAX(char_length(LANGUAGE)) FROM TABUSER HAVING COUNT(char_length(LANGUAGE)) > COUNT(DISTINCT char_length(LANGUAGE)) AND COUNT(DISTINCT char_length(LANGUAGE)) > 1"
      ]
    },
    {
      "queryNo": 1433,
      "pathList": [
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project') AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 0) AND (PROJECT = '_Test Project') AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (PROJECT = '_Test Project') AND (DOCSTATUS = 1) AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE NOT (PROJECT = '_Test Project') AND (DOCSTATUS = 1) AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (PROJECT IS NULL) AND (DOCSTATUS = 1) AND (BILLABLE = 1) AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (BILLABLE = 2) AND (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (BILLABLE = 1) AND (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE (BILLABLE = 0) AND (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND ((SALES_INVOICE IS NULL))",
        "SELECT NAME, PARENT, BILLING_HOURS, BILLING_AMOUNT AS BILLING_AMT FROM TABTIMESHEET DETAIL WHERE ((SALES_INVOICE IS NOT NULL)) AND (DOCSTATUS = 1) AND (PROJECT = '_Test Project') AND (BILLABLE = 1)"
      ]
    },
    {
      "queryNo": 1434,
      "pathList": [
        "SELECT * FROM TABLEAD WHERE NOT (NAME = '_T-Lead-00001')",
        "SELECT * FROM TABLEAD WHERE (NAME = '_T-Lead-00001')"
      ]
    },
    {
      "queryNo": 1435,
      "pathList": [
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((date(STARTS_ON) <= TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND ((date(ENDS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (ENDS_ON IS NULL) AND (date(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND ((date(STARTS_ON) NOT BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09'))) AND NOT ((TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (STARTS_ON IS NULL) AND (REPEAT_THIS_EVENT = 1) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 2) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 1) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (REPEAT_THIS_EVENT = 0) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')) AND (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09')) AND (REPEAT_THIS_EVENT = 1) AND NOT (((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 2) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 1) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (IFNULL(SEND_REMINDER, 0) = 0) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND ((EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test2@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test2@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EVENT_TYPE IS NULL) AND NOT (OWNER = 'test2@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER = 'test2@example.com') AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (OWNER IS NULL) AND NOT (EVENT_TYPE = 'Public') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test2@example.com') AND (NOT EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND NOT (EVENT_TYPE = 'Public') AND NOT (OWNER = 'test2@example.com') AND (NOT EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09')))) AND (IFNULL(SEND_REMINDER, 0) = 1)",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((REPEAT_TILL IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((REPEAT_TILL IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1)) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE (((SEND_REMINDER IS NOT NULL))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE ((SEND_REMINDER IS NULL)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com') OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_DOCTYPE IS NULL) AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.SHARE_NAME IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.USER = 'test2@example.com')) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE NOT (TABDOCSHARE.USER = 'test2@example.com') AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT NAME FROM TABDOCSHARE WHERE (TABDOCSHARE.USER IS NULL) AND (TABDOCSHARE.SHARE_DOCTYPE = 'Event') AND (TABDOCSHARE.SHARE_NAME = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT * FROM TABEVENT ROLE WHERE TABEVENT ROLE.PARENT = TABEVENT.NAME AND TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE NOT (TABEVENT ROLE.PARENT = TABEVENT.NAME) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.PARENT IS NULL) AND (TABEVENT ROLE.ROLE IN ('Employee', 'All', 'Guest'))) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE NOT IN ('Employee', 'All', 'Guest')) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')))",
        "SELECT NAME, SUBJECT, DESCRIPTION, STARTS_ON, ENDS_ON, OWNER, ALL_DAY, EVENT_TYPE, REPEAT_THIS_EVENT, REPEAT_ON, REPEAT_TILL, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY FROM TABEVENT WHERE EXISTS (SELECT * FROM TABEVENT ROLE WHERE (TABEVENT ROLE.ROLE IS NULL) AND (TABEVENT ROLE.PARENT = TABEVENT.NAME)) AND ((((date(STARTS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(ENDS_ON) BETWEEN TIMESTAMP('2017-02-09') AND TIMESTAMP('2017-02-09')) OR (date(STARTS_ON) <= TIMESTAMP('2017-02-09') AND TIMESTAMP(ENDS_ON) >= TIMESTAMP('2017-02-09'))) OR (TIMESTAMP(STARTS_ON) <= TIMESTAMP('2017-02-09') AND REPEAT_THIS_EVENT = 1 AND IFNULL(REPEAT_TILL, '3000-01-01') > TIMESTAMP('2017-02-09'))) AND IFNULL(SEND_REMINDER, 0) = 1 AND (EVENT_TYPE = 'Public' OR OWNER = 'test2@example.com' OR EXISTS (SELECT NAME FROM TABDOCSHARE WHERE TABDOCSHARE.SHARE_DOCTYPE = 'Event' AND TABDOCSHARE.SHARE_NAME = TABEVENT.NAME AND TABDOCSHARE.USER = 'test2@example.com')))"
      ]
    },
    {
      "queryNo": 1436,
      "pathList": [
        "SELECT * FROM TABVERSION WHERE NOT (NAME = '4b313b3a14')",
        "SELECT * FROM TABVERSION WHERE (NAME = '4b313b3a14')"
      ]
    },
    {
      "queryNo": 1437,
      "pathList": [
        "SELECT NAME FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE NOT (NAME = '_Test Sales Taxes and Charges Template 1')",
        "SELECT NAME FROM TABSALES TAXES AND CHARGES TEMPLATE WHERE (NAME = '_Test Sales Taxes and Charges Template 1')"
      ]
    },
    {
      "queryNo": 1438,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSUPPLIER WHERE NOT (NAME = '_Test Supplier USD')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSUPPLIER WHERE (NAME = '_Test Supplier USD')"
      ]
    },
    {
      "queryNo": 1439,
      "pathList": [
        "SELECT * FROM TABSALARY DETAIL WHERE (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0001/00005') AND (PARENTFIELD = 'deductions')",
        "SELECT * FROM TABSALARY DETAIL WHERE NOT (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0001/00005') AND (PARENTFIELD = 'deductions')",
        "SELECT * FROM TABSALARY DETAIL WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Sal Slip/EMP-0001/00005') AND (PARENTFIELD = 'deductions')",
        "SELECT * FROM TABSALARY DETAIL WHERE NOT (PARENT = 'Sal Slip/EMP-0001/00005') AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions')",
        "SELECT * FROM TABSALARY DETAIL WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENTFIELD = 'deductions')",
        "SELECT * FROM TABSALARY DETAIL WHERE NOT (PARENTFIELD = 'deductions') AND (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0001/00005')",
        "SELECT * FROM TABSALARY DETAIL WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Salary Slip') AND (PARENT = 'Sal Slip/EMP-0001/00005')"
      ]
    },
    {
      "queryNo": 1440,
      "pathList": [
        "SELECT NAME FROM TABWEB PAGE WHERE NOT (NAME = 'test-web-page-3')",
        "SELECT NAME FROM TABWEB PAGE WHERE (NAME = 'test-web-page-3')"
      ]
    },
    {
      "queryNo": 1441,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY WHERE NOT (NAME = 'JV-00007')",
        "SELECT NAME FROM TABJOURNAL ENTRY WHERE (NAME = 'JV-00007')"
      ]
    },
    {
      "queryNo": 1442,
      "pathList": [
        "SELECT * FROM TABWEBSITE THEME WHERE NOT (NAME = 'Standard')",
        "SELECT * FROM TABWEBSITE THEME WHERE (NAME = 'Standard')"
      ]
    },
    {
      "queryNo": 1443,
      "pathList": [
        "SELECT MODULE_NAME FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0 + 1)",
        "SELECT MODULE_NAME FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0)",
        "SELECT MODULE_NAME FROM TABDESKTOP ICON WHERE (TABDESKTOP ICON.STANDARD = 1.0 - 1)"
      ]
    },
    {
      "queryNo": 1444,
      "pathList": [
        "SELECT NAME, RECIPIENT, STATUS FROM TABEMAIL QUEUE RECIPIENT WHERE NOT (PARENT = '72d13119ac')",
        "SELECT NAME, RECIPIENT, STATUS FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENT = '72d13119ac')",
        "SELECT NAME, RECIPIENT, STATUS FROM TABEMAIL QUEUE RECIPIENT WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1445,
      "pathList": [
        "SELECT * FROM TABTASK WHERE NOT (PROJECT = '_Test Project 1')",
        "SELECT * FROM TABTASK WHERE (PROJECT = '_Test Project 1')",
        "SELECT * FROM TABTASK WHERE (PROJECT IS NULL)",
        "SELECT COUNT(NAME) FROM TABTASK WHERE PROJECT = '_Test Project 1' HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 1446,
      "pathList": [
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE = 'Link') AND (OPTIONS = 'Role') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Link') AND (OPTIONS = 'Role') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'Role') AND NOT ((OPTIONS = 'link:Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE NOT (OPTIONS = 'Role') AND (FIELDTYPE = 'Link') AND NOT ((FIELDTYPE = 'Select' AND OPTIONS = 'link:Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Link') AND NOT ((FIELDTYPE = 'Select'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE = 'Select') AND (OPTIONS = 'link:Role') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE NOT (FIELDTYPE = 'Select') AND (OPTIONS = 'link:Role') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (FIELDTYPE IS NULL) AND (OPTIONS = 'link:Role') AND NOT ((OPTIONS = 'Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE NOT (OPTIONS = 'link:Role') AND (FIELDTYPE = 'Select') AND NOT ((FIELDTYPE = 'Link' AND OPTIONS = 'Role'))",
        "SELECT PARENT, FIELDNAME FROM TABDOCFIELD WHERE (OPTIONS IS NULL) AND (FIELDTYPE = 'Select') AND NOT ((FIELDTYPE = 'Link'))"
      ]
    },
    {
      "queryNo": 1447,
      "pathList": [
        "SELECT OWNER FROM TABBLOG POST WHERE NOT (NAME = '-test-blog-post-2')",
        "SELECT OWNER FROM TABBLOG POST WHERE (NAME = '-test-blog-post-2')"
      ]
    },
    {
      "queryNo": 1448,
      "pathList": [
        "SELECT IS_GROUP FROM TABITEM GROUP WHERE NOT (NAME = '_Test Item Group C')",
        "SELECT IS_GROUP FROM TABITEM GROUP WHERE (NAME = '_Test Item Group C')"
      ]
    },
    {
      "queryNo": 1449,
      "pathList": [
        "SELECT LFT, RGT FROM TABFILE WHERE NOT (NAME = 'Home/Attachments')",
        "SELECT LFT, RGT FROM TABFILE WHERE (NAME = 'Home/Attachments')"
      ]
    },
    {
      "queryNo": 1450,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE = 'Stock') AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL))) AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Stock') AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL))) AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL))) AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (WAREHOUSE <> '') AND ((WAREHOUSE IS NOT NULL)) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE IS NULL) AND (ACCOUNT_TYPE = 'Stock') AND (IS_GROUP = 0)",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 1) AND (ACCOUNT_TYPE = 'Stock') AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = 0) AND (ACCOUNT_TYPE = 'Stock') AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))",
        "SELECT NAME FROM TABACCOUNT WHERE (IS_GROUP = -1) AND (ACCOUNT_TYPE = 'Stock') AND ((WAREHOUSE <> '' AND (WAREHOUSE IS NOT NULL)))"
      ]
    },
    {
      "queryNo": 1451,
      "pathList": [
        "SELECT NAME FROM TABDEPARTMENT WHERE NOT (NAME = '_Test Department 1')",
        "SELECT NAME FROM TABDEPARTMENT WHERE (NAME = '_Test Department 1')"
      ]
    },
    {
      "queryNo": 1452,
      "pathList": [
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.FISCAL_YEAR IS NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE NOT (BA.ACCOUNT = '_Test Write Off - _TC') AND (B.FISCAL_YEAR = NULL) AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (BA.ACCOUNT IS NULL) AND (B.FISCAL_YEAR = NULL) AND (B.DOCSTATUS = 1) AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 2) AND (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 1) AND (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (B.DOCSTATUS = 0) AND (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE (NOT EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL) AND (BA.ACCOUNT = '_Test Write Off - _TC') AND (B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B LEFT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((BA.PARENT IS NULL) AND (B.NAME IS NOT NULL)) AND (B.FISCAL_YEAR = NULL AND B.DOCSTATUS = 1 AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NOT NULL)) AND (BA.ACCOUNT = '_Test Write Off - _TC' AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B RIGHT JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE ((B.NAME IS NULL) AND (BA.PARENT IS NULL)) AND (BA.ACCOUNT = '_Test Write Off - _TC' AND EXISTS (SELECT NAME FROM TABCOST CENTER WHERE LFT <= 8 AND RGT >= 9 AND NAME = B.COST_CENTER))",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 9) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 8) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (LFT = 7) AND (RGT >= 9) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 10) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 9) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (RGT = 8) AND (LFT <= 8) AND (NAME = B.COST_CENTER)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (NAME = B.COST_CENTER) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE NOT (NAME = B.COST_CENTER) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)",
        "SELECT B.COST_CENTER, BA.BUDGET_AMOUNT, B.MONTHLY_DISTRIBUTION, B.ACTION_IF_ANNUAL_BUDGET_EXCEEDED, B.ACTION_IF_ACCUMULATED_MONTHLY_BUDGET_EXCEEDED FROM TABBUDGET B INNER JOIN TABBUDGET ACCOUNT BA ON B.NAME = BA.PARENT WHERE EXISTS (SELECT NAME FROM TABCOST CENTER WHERE (B.COST_CENTER IS NULL) AND (LFT <= 8) AND (RGT >= 9)) AND (B.FISCAL_YEAR = NULL AND BA.ACCOUNT = '_Test Write Off - _TC' AND B.DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1453,
      "pathList": [
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE NOT (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.CUSTOMER IS NULL) AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0) AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) = 2.0 + 1) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) = 2.0) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) = 2.0 - 1) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0 + 1) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (TABSALES INVOICE.OUTSTANDING_AMOUNT = 0.0 - 1) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test') AND (IFNULL(TABSALES INVOICE.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE (((TABSALES INVOICE.DOCSTATUS IS NOT NULL))) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test' AND TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)",
        "SELECT NAME FROM TABSALES INVOICE WHERE ((TABSALES INVOICE.DOCSTATUS IS NULL)) AND (TABSALES INVOICE.CUSTOMER = 'Party Status Test' AND TABSALES INVOICE.OUTSTANDING_AMOUNT > 0.0)"
      ]
    },
    {
      "queryNo": 1454,
      "pathList": [
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT IS NULL) AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY_TYPE = 'Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY_TYPE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY = '_Test Customer') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.IS_ADVANCE = 'Yes') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.IS_ADVANCE IS NULL) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (CREDIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = 0) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (CREDIT_IN_ACCOUNT_CURRENCY = -1) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE = 'Sales Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_TYPE = 'Sales Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE IS NULL) AND (IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')) AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') NOT IN ('SO-00003')) AND (T2.REFERENCE_TYPE = 'Sales Order') AND (T2.ACCOUNT = 'Debtors - _TC') AND (T2.PARTY_TYPE = 'Customer') AND (T2.PARTY = '_Test Customer') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (CREDIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 LEFT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1 AND (IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Sales Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('SO-00003')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (((T2.REFERENCE_NAME IS NOT NULL))) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Sales Order'))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.CREDIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.REFERENCE_NAME IS NULL)) AND (T2.ACCOUNT = 'Debtors - _TC' AND T2.PARTY_TYPE = 'Customer' AND T2.PARTY = '_Test Customer' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND CREDIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Sales Order'))"
      ]
    },
    {
      "queryNo": 1455,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABQUOTATION WHERE NOT (AMENDED_FROM = 'QTN-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABQUOTATION WHERE (AMENDED_FROM = 'QTN-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABQUOTATION WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1456,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE >= '2012-12-26') AND (VOUCHER_NO IN ('STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE NOT (POSTING_DATE >= '2012-12-26') AND (VOUCHER_NO IN ('STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE (POSTING_DATE IS NULL) AND (VOUCHER_NO IN ('STE-00007', 'STE-00010'))",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO NOT IN ('STE-00007', 'STE-00010')) AND (POSTING_DATE >= '2012-12-26')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (POSTING_DATE >= '2012-12-26')"
      ]
    },
    {
      "queryNo": 1457,
      "pathList": [
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE (TABDOCFIELD.PARENT = 'DocType') AND ((TABDOCFIELD.FIELDTYPE = 'Table' OR TABDOCFIELD.FIELDTYPE = 'Select'))",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE NOT (TABDOCFIELD.PARENT = 'DocType') AND ((TABDOCFIELD.FIELDTYPE = 'Table' OR TABDOCFIELD.FIELDTYPE = 'Select'))",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE (TABDOCFIELD.PARENT IS NULL) AND ((TABDOCFIELD.FIELDTYPE = 'Table' OR TABDOCFIELD.FIELDTYPE = 'Select'))",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE NOT (TABDOCFIELD.FIELDTYPE = 'Table') AND NOT (TABDOCFIELD.FIELDTYPE = 'Select') AND (TABDOCFIELD.PARENT = 'DocType')",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE (TABDOCFIELD.FIELDTYPE = 'Table') AND NOT (TABDOCFIELD.FIELDTYPE = 'Select') AND (TABDOCFIELD.PARENT = 'DocType')",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE (TABDOCFIELD.FIELDTYPE IS NULL) AND (TABDOCFIELD.PARENT = 'DocType')",
        "SELECT FIELDNAME, FIELDTYPE FROM TABDOCFIELD WHERE (TABDOCFIELD.FIELDTYPE = 'Select') AND NOT (TABDOCFIELD.FIELDTYPE = 'Table') AND (TABDOCFIELD.PARENT = 'DocType')"
      ]
    },
    {
      "queryNo": 1458,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE NOT (WAREHOUSE = 'Test Warehouse for Renaming 3 - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE = 'Test Warehouse for Renaming 3 - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE IS NULL)"
      ]
    },
    {
      "queryNo": 1459,
      "pathList": [
        "SELECT DT AS PARENT, FIELDNAME, OPTIONS FROM TABCUSTOM FIELD WHERE NOT (FIELDTYPE = 'Dynamic Link')",
        "SELECT DT AS PARENT, FIELDNAME, OPTIONS FROM TABCUSTOM FIELD WHERE (FIELDTYPE = 'Dynamic Link')",
        "SELECT DT AS PARENT, FIELDNAME, OPTIONS FROM TABCUSTOM FIELD WHERE (FIELDTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1460,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABBATCH WHERE NOT (NAME = '_test Batch')",
        "SELECT MODIFIED, DOCSTATUS FROM TABBATCH WHERE (NAME = '_test Batch')"
      ]
    },
    {
      "queryNo": 1462,
      "pathList": [
        "SELECT PARENT FROM TABTASK DEPENDS ON WHERE NOT (TASK = 'TASK00002')",
        "SELECT PARENT FROM TABTASK DEPENDS ON WHERE (TASK = 'TASK00002')",
        "SELECT PARENT FROM TABTASK DEPENDS ON WHERE (TASK IS NULL)"
      ]
    },
    {
      "queryNo": 1463,
      "pathList": [
        "SELECT FRACTION FROM TABCURRENCY WHERE NOT (NAME = 'INR')",
        "SELECT FRACTION FROM TABCURRENCY WHERE (NAME = 'INR')"
      ]
    },
    {
      "queryNo": 1464,
      "pathList": [
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENT = '_T-Supplier Quotation-00002') AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENT = '_T-Supplier Quotation-00002') AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENTTYPE = 'Supplier Quotation') AND (PARENT = '_T-Supplier Quotation-00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Supplier Quotation-00002') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = '_T-Supplier Quotation-00002') AND (PARENTTYPE = 'Supplier Quotation') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Supplier Quotation-00002') AND (PARENTTYPE = 'Supplier Quotation') AND (NAME NOT IN ('b2008c66cd'))",
        "SELECT NAME FROM TABSUPPLIER QUOTATION ITEM WHERE (NAME IN ('b2008c66cd')) AND (PARENT = '_T-Supplier Quotation-00002') AND (PARENTTYPE = 'Supplier Quotation') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1465,
      "pathList": [
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTTYPE = 'Mode of Payment') AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Cash') AND (PARENTFIELD = 'accounts') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE NOT (PARENTFIELD = 'accounts') AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (PARENTFIELD IS NULL) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (NAME NOT IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193'))",
        "SELECT NAME FROM TABMODE OF PAYMENT ACCOUNT WHERE (NAME IN ('c6ddfd123b', '3a91ce4b16', 'bbb59610f6', '2219838193')) AND (PARENT = 'Cash') AND (PARENTTYPE = 'Mode of Payment') AND (PARENTFIELD = 'accounts')"
      ]
    },
    {
      "queryNo": 1466,
      "pathList": [
        "SELECT OWNER FROM TABPROJECT WHERE NOT (NAME = '_Test Project')",
        "SELECT OWNER FROM TABPROJECT WHERE (NAME = '_Test Project')"
      ]
    },
    {
      "queryNo": 1467,
      "pathList": [
        "SELECT OWNER, STATUS FROM TABTODO WHERE (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_TYPE = 'Task') AND (DESCRIPTION = 'Close this task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE NOT (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_TYPE = 'Task') AND (DESCRIPTION = 'Close this task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Task') AND (DESCRIPTION = 'Close this task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Task') AND (REFERENCE_NAME = 'TASK00009') AND (DESCRIPTION = 'Close this task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'TASK00009') AND (DESCRIPTION = 'Close this task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE NOT (DESCRIPTION = 'Close this task') AND (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_TYPE = 'Task')",
        "SELECT OWNER, STATUS FROM TABTODO WHERE (DESCRIPTION IS NULL) AND (REFERENCE_NAME = 'TASK00009') AND (REFERENCE_TYPE = 'Task')"
      ]
    },
    {
      "queryNo": 1468,
      "pathList": [
        "SELECT ITEM_NAME, DESCRIPTION, STOCK_UOM, EXPENSE_ACCOUNT, BUYING_COST_CENTER, NAME, DEFAULT_WAREHOUSE FROM TABITEM WHERE NOT (NAME = '_Test Variant Item-S')",
        "SELECT ITEM_NAME, DESCRIPTION, STOCK_UOM, EXPENSE_ACCOUNT, BUYING_COST_CENTER, NAME, DEFAULT_WAREHOUSE FROM TABITEM WHERE (NAME = '_Test Variant Item-S')"
      ]
    },
    {
      "queryNo": 1469,
      "pathList": [
        "SELECT CURRENCY FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00004')",
        "SELECT CURRENCY FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00004')"
      ]
    },
    {
      "queryNo": 1470,
      "pathList": [
        "SELECT * FROM TABPAYMENT REQUEST WHERE NOT (NAME = 'PR00002')",
        "SELECT * FROM TABPAYMENT REQUEST WHERE (NAME = 'PR00002')"
      ]
    },
    {
      "queryNo": 1471,
      "pathList": [
        "SELECT MAX(char_length(PHONE)) FROM TABUSER HAVING COUNT(char_length(PHONE)) > COUNT(DISTINCT char_length(PHONE)) AND COUNT(DISTINCT char_length(PHONE)) > 1"
      ]
    },
    {
      "queryNo": 1472,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Stock User'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Stock User')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role', 'System Manager', 'Employee', 'Blogger', '_Test Role 3', '_Test Role 2', 'Website Manager', 'Sales User', 'Stock User')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 1473,
      "pathList": [
        "SELECT * FROM TABNOTE SEEN BY WHERE (PARENTTYPE = 'Note') AND (PARENT = 'test note') AND (PARENTFIELD = 'seen_by')",
        "SELECT * FROM TABNOTE SEEN BY WHERE NOT (PARENTTYPE = 'Note') AND (PARENT = 'test note') AND (PARENTFIELD = 'seen_by')",
        "SELECT * FROM TABNOTE SEEN BY WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test note') AND (PARENTFIELD = 'seen_by')",
        "SELECT * FROM TABNOTE SEEN BY WHERE NOT (PARENT = 'test note') AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by')",
        "SELECT * FROM TABNOTE SEEN BY WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Note') AND (PARENTFIELD = 'seen_by')",
        "SELECT * FROM TABNOTE SEEN BY WHERE NOT (PARENTFIELD = 'seen_by') AND (PARENTTYPE = 'Note') AND (PARENT = 'test note')",
        "SELECT * FROM TABNOTE SEEN BY WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Note') AND (PARENT = 'test note')"
      ]
    },
    {
      "queryNo": 1474,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.PARTY = '_Test Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.PARTY = '_Test Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.PARTY = '_Test Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.PARTY_TYPE = 'Customer') AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY = '_Test Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.PARTY_TYPE IS NULL) AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY = '_Test Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.PARTY = '_Test Customer') AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.PARTY IS NULL) AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.COMPANY = '_Test Company')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.COMPANY = '_Test Company') AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.COMPANY IS NULL) AND (POSTING_DATE <= '2017-02-09') AND (GLE.PARTY_TYPE = 'Customer') AND (GLE.PARTY = '_Test Customer')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09' AND GLE.PARTY_TYPE = 'Customer' AND GLE.PARTY = '_Test Customer' AND GLE.COMPANY = '_Test Company' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09' AND GLE.PARTY_TYPE = 'Customer' AND GLE.PARTY = '_Test Customer' AND GLE.COMPANY = '_Test Company' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 1475,
      "pathList": [
        "SELECT NAME FROM TABLEAD WHERE (EMAIL_ID = 'test_lead3@example.com') AND (NAME <> '_T-Lead-00004')",
        "SELECT NAME FROM TABLEAD WHERE NOT (EMAIL_ID = 'test_lead3@example.com') AND (NAME <> '_T-Lead-00004')",
        "SELECT NAME FROM TABLEAD WHERE (EMAIL_ID IS NULL) AND (NAME <> '_T-Lead-00004')",
        "SELECT NAME FROM TABLEAD WHERE NOT (NAME <> '_T-Lead-00004') AND (EMAIL_ID = 'test_lead3@example.com')"
      ]
    },
    {
      "queryNo": 1476,
      "pathList": [
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT INNER JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE NOT (TABEMAIL ALERT RECIPIENT.EMAIL_BY_ROLE = 'System Manager')",
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT INNER JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE (TABEMAIL ALERT RECIPIENT.EMAIL_BY_ROLE = 'System Manager')",
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT INNER JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE (TABEMAIL ALERT RECIPIENT.EMAIL_BY_ROLE IS NULL)",
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT LEFT JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE (TABEMAIL ALERT RECIPIENT.PARENT IS NULL) AND (TABEMAIL ALERT.NAME IS NOT NULL)",
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT RIGHT JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE ((TABEMAIL ALERT.NAME IS NULL) AND (TABEMAIL ALERT RECIPIENT.PARENT IS NOT NULL)) AND (TABEMAIL ALERT RECIPIENT.EMAIL_BY_ROLE = 'System Manager')",
        "SELECT TABEMAIL ALERT.SUBJECT, TABEMAIL ALERT.DOCUMENT_TYPE, TABEMAIL ALERT.EVENT, TABEMAIL ALERT.CONDITION, TABEMAIL ALERT.NAME, TABEMAIL ALERT.MODIFIED, TABEMAIL ALERT.DOCSTATUS FROM TABEMAIL ALERT RIGHT JOIN TABEMAIL ALERT RECIPIENT ON (TABEMAIL ALERT RECIPIENT.PARENT = TABEMAIL ALERT.NAME) WHERE ((TABEMAIL ALERT.NAME IS NULL) AND (TABEMAIL ALERT RECIPIENT.PARENT IS NULL)) AND (TABEMAIL ALERT RECIPIENT.EMAIL_BY_ROLE = 'System Manager')"
      ]
    },
    {
      "queryNo": 1477,
      "pathList": [
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST ITEM WHERE NOT (RECEIPT_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST ITEM WHERE (RECEIPT_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT RECEIPT_DOCUMENT_TYPE, PARENTTYPE FROM TABLANDED COST ITEM WHERE (RECEIPT_DOCUMENT_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1478,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPROJECT WHERE NOT (NAME = '_Test Project')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPROJECT WHERE (NAME = '_Test Project')"
      ]
    },
    {
      "queryNo": 1479,
      "pathList": [
        "SELECT SUPPLIER, SUPPLIER_NAME FROM TABPURCHASE RECEIPT WHERE NOT (NAME = '_T-Purchase Receipt-00006')",
        "SELECT SUPPLIER, SUPPLIER_NAME FROM TABPURCHASE RECEIPT WHERE (NAME = '_T-Purchase Receipt-00006')"
      ]
    },
    {
      "queryNo": 1480,
      "pathList": [
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE NOT (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.CUSTOMER IS NULL) AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE NOT (DN.COMPANY = '_Test Company') AND (DN.CUSTOMER = '_Test Customer') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.COMPANY IS NULL) AND (DN.CUSTOMER = '_Test Customer') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 2) AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 1) AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.DOCSTATUS = 0) AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.STATUS IN ('Closed', 'Stopped')) AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (DN.STATUS IS NULL) AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE NOT (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '') AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE NOT (IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '') AND (DN.CUSTOMER = '_Test Customer') AND (DN.COMPANY = '_Test Company') AND (DN.DOCSTATUS = 1) AND (DN.STATUS NOT IN ('Closed', 'Stopped')) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN LEFT JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE ((DN_ITEM.PARENT IS NULL) AND (DN.NAME IS NOT NULL)) AND (DN.CUSTOMER = '_Test Customer' AND DN.COMPANY = '_Test Company' AND DN.DOCSTATUS = 1 AND DN.STATUS NOT IN ('Closed', 'Stopped') AND IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '' AND IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN RIGHT JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE ((DN.NAME IS NULL) AND (DN_ITEM.PARENT IS NOT NULL)) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '' AND IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN RIGHT JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE ((DN.NAME IS NULL) AND (DN_ITEM.PARENT IS NULL)) AND (IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '' AND IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (((DN_ITEM.AGAINST_SALES_ORDER IS NOT NULL))) AND (DN.CUSTOMER = '_Test Customer' AND DN.COMPANY = '_Test Company' AND DN.DOCSTATUS = 1 AND DN.STATUS NOT IN ('Closed', 'Stopped') AND IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE ((DN_ITEM.AGAINST_SALES_ORDER IS NULL)) AND (DN.CUSTOMER = '_Test Customer' AND DN.COMPANY = '_Test Company' AND DN.DOCSTATUS = 1 AND DN.STATUS NOT IN ('Closed', 'Stopped') AND IFNULL(DN_ITEM.AGAINST_SALES_INVOICE, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE (((DN_ITEM.AGAINST_SALES_INVOICE IS NOT NULL))) AND (DN.CUSTOMER = '_Test Customer' AND DN.COMPANY = '_Test Company' AND DN.DOCSTATUS = 1 AND DN.STATUS NOT IN ('Closed', 'Stopped') AND IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '')",
        "SELECT DN_ITEM.NAME, DN_ITEM.AMOUNT, DN.BASE_NET_TOTAL, DN.BASE_GRAND_TOTAL FROM TABDELIVERY NOTE DN INNER JOIN TABDELIVERY NOTE ITEM DN_ITEM ON DN.NAME = DN_ITEM.PARENT WHERE ((DN_ITEM.AGAINST_SALES_INVOICE IS NULL)) AND (DN.CUSTOMER = '_Test Customer' AND DN.COMPANY = '_Test Company' AND DN.DOCSTATUS = 1 AND DN.STATUS NOT IN ('Closed', 'Stopped') AND IFNULL(DN_ITEM.AGAINST_SALES_ORDER, '') = '')"
      ]
    },
    {
      "queryNo": 1481,
      "pathList": [
        "SELECT NAME FROM TABSALES ORDER WHERE (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0) AND (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE (IFNULL(TABSALES ORDER.STATUS, '') IN ('Completed', 'Closed')) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0) AND (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE (IFNULL(TABSALES ORDER.DOCSTATUS, 0) = 2.0 + 1) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE (IFNULL(TABSALES ORDER.DOCSTATUS, 0) = 2.0) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE (IFNULL(TABSALES ORDER.DOCSTATUS, 0) = 2.0 - 1) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE NOT (TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1') AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (TABSALES ORDER.CUSTOMER IS NULL) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed')) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0)",
        "SELECT NAME FROM TABSALES ORDER WHERE (((TABSALES ORDER.STATUS IS NOT NULL))) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0 AND TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE ((TABSALES ORDER.STATUS IS NULL)) AND (IFNULL(TABSALES ORDER.DOCSTATUS, 0) < 2.0 AND TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE (((TABSALES ORDER.DOCSTATUS IS NOT NULL))) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed') AND TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')",
        "SELECT NAME FROM TABSALES ORDER WHERE ((TABSALES ORDER.DOCSTATUS IS NULL)) AND (IFNULL(TABSALES ORDER.STATUS, '') NOT IN ('Completed', 'Closed') AND TABSALES ORDER.CUSTOMER = '_Test Customer 1 - 1')"
      ]
    },
    {
      "queryNo": 1482,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00003')",
        "SELECT MODIFIED, DOCSTATUS FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00003')"
      ]
    },
    {
      "queryNo": 1483,
      "pathList": [
        "SELECT * FROM TABASSET WHERE NOT (NAME = 'Macbook Pro 1')",
        "SELECT * FROM TABASSET WHERE (NAME = 'Macbook Pro 1')"
      ]
    },
    {
      "queryNo": 1485,
      "pathList": [
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE (PARENT = 'TASK00012') AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE NOT (PARENT = 'TASK00012') AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE NOT (PARENTTYPE = 'Task') AND (PARENT = 'TASK00012') AND (PARENTFIELD = 'depends_on') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE (PARENTTYPE IS NULL) AND (PARENT = 'TASK00012') AND (PARENTFIELD = 'depends_on') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE NOT (PARENTFIELD = 'depends_on') AND (PARENT = 'TASK00012') AND (PARENTTYPE = 'Task') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE (PARENTFIELD IS NULL) AND (PARENT = 'TASK00012') AND (PARENTTYPE = 'Task') AND (NAME NOT IN ('ccbf8901af'))",
        "SELECT NAME FROM TABTASK DEPENDS ON WHERE (NAME IN ('ccbf8901af')) AND (PARENT = 'TASK00012') AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on')"
      ]
    },
    {
      "queryNo": 1486,
      "pathList": [
        "SELECT * FROM TABUSERROLE WHERE (PARENTTYPE = 'User') AND (PARENT = 'test-for-type@example.com') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test-for-type@example.com') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test-for-type@example.com') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE NOT (PARENT = 'test-for-type@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')",
        "SELECT * FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENTTYPE = 'User') AND (PARENT = 'test-for-type@example.com')",
        "SELECT * FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'User') AND (PARENT = 'test-for-type@example.com')"
      ]
    },
    {
      "queryNo": 1487,
      "pathList": [
        "SELECT DEFAULT_RECEIVABLE_ACCOUNT FROM TABCOMPANY WHERE NOT (NAME = '_Test Company 1')",
        "SELECT DEFAULT_RECEIVABLE_ACCOUNT FROM TABCOMPANY WHERE (NAME = '_Test Company 1')"
      ]
    },
    {
      "queryNo": 1488,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE NOT (NAME = 'BOM-_Test Variant Item-001')",
        "SELECT NAME FROM TABBOM WHERE (NAME = 'BOM-_Test Variant Item-001')"
      ]
    },
    {
      "queryNo": 1489,
      "pathList": [
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE NOT (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Payment Reconciliation') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE NOT (PARENT = 'Payment Reconciliation') AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENTFIELD = 'payments')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE NOT (PARENTFIELD = 'payments') AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation')",
        "SELECT * FROM TABPAYMENT RECONCILIATION PAYMENT WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Payment Reconciliation') AND (PARENT = 'Payment Reconciliation')"
      ]
    },
    {
      "queryNo": 1491,
      "pathList": [
        "SELECT * FROM TABUSER EMAIL WHERE (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE NOT (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE (PARENT IS NULL) AND (PARENTFIELD = 'user_emails')",
        "SELECT * FROM TABUSER EMAIL WHERE NOT (PARENTFIELD = 'user_emails') AND (PARENT = 'test2@example.com')",
        "SELECT * FROM TABUSER EMAIL WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test2@example.com')"
      ]
    },
    {
      "queryNo": 1492,
      "pathList": [
        "SELECT NAME, SMTP_PORT FROM TABEMAIL DOMAIN WHERE NOT (NAME = 'example.com')",
        "SELECT NAME, SMTP_PORT FROM TABEMAIL DOMAIN WHERE (NAME = 'example.com')"
      ]
    },
    {
      "queryNo": 1493,
      "pathList": [
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE INNER JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE NOT (TABDOCPERM.ROLE = 'System Manager')",
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE INNER JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE (TABDOCPERM.ROLE = 'System Manager')",
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE INNER JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE (TABDOCPERM.ROLE IS NULL)",
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE LEFT JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE (TABDOCPERM.PARENT IS NULL) AND (TABDOCTYPE.NAME IS NOT NULL)",
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE RIGHT JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE ((TABDOCTYPE.NAME IS NULL) AND (TABDOCPERM.PARENT IS NOT NULL)) AND (TABDOCPERM.ROLE = 'System Manager')",
        "SELECT TABDOCTYPE.MODULE, TABDOCTYPE.NAME, TABDOCTYPE.MODIFIED, TABDOCTYPE.DOCSTATUS FROM TABDOCTYPE RIGHT JOIN TABDOCPERM ON (TABDOCPERM.PARENT = TABDOCTYPE.NAME) WHERE ((TABDOCTYPE.NAME IS NULL) AND (TABDOCPERM.PARENT IS NULL)) AND (TABDOCPERM.ROLE = 'System Manager')"
      ]
    },
    {
      "queryNo": 1494,
      "pathList": [
        "SELECT * FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item')",
        "SELECT * FROM TABBIN WHERE (ITEM_CODE = '_Test Item')",
        "SELECT * FROM TABBIN WHERE (ITEM_CODE IS NULL)",
        "SELECT SUM(PROJECTED_QTY) AS PROJECTED_QTY FROM TABBIN WHERE ITEM_CODE = '_Test Item' HAVING COUNT(PROJECTED_QTY) > COUNT(DISTINCT PROJECTED_QTY) AND COUNT(DISTINCT PROJECTED_QTY) > 1"
      ]
    },
    {
      "queryNo": 1495,
      "pathList": [
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('9ee6218765'))",
        "SELECT NAME FROM TABBOM ITEM WHERE (NAME IN ('9ee6218765')) AND (PARENT = 'BOM-_Test Variant Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1496,
      "pathList": [
        "SELECT NAME FROM TABBLOG POST WHERE NOT (TITLE = '_Test Blog Post')",
        "SELECT NAME FROM TABBLOG POST WHERE (TITLE = '_Test Blog Post')",
        "SELECT NAME FROM TABBLOG POST WHERE (TITLE IS NULL)"
      ]
    },
    {
      "queryNo": 1497,
      "pathList": [
        "SELECT NAME FROM TABBLOCK MODULE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'block_modules') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'block_modules') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE NOT (PARENTFIELD = 'block_modules') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('e005631ecf'))",
        "SELECT NAME FROM TABBLOCK MODULE WHERE (NAME IN ('e005631ecf')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'block_modules')"
      ]
    },
    {
      "queryNo": 1498,
      "pathList": [
        "SELECT NAME FROM TABEMAIL GROUP WHERE NOT (NAME = '_Test Email Group')",
        "SELECT NAME FROM TABEMAIL GROUP WHERE (NAME = '_Test Email Group')"
      ]
    },
    {
      "queryNo": 1499,
      "pathList": [
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE NOT IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (COMMUNICATION_TYPE IS NULL) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (REFERENCE_DOCTYPE = 'User') AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE IS NULL) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (REFERENCE_NAME = 'Administrator') AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (REFERENCE_NAME IS NULL) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE NOT (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year)) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (MODIFIED IS NULL) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (SEEN = 0)",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = 1) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = 0) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))",
        "SELECT * FROM TABCOMMUNICATION WHERE (SEEN = -1) AND (COMMUNICATION_TYPE IN ('Chat', 'Notification')) AND (REFERENCE_DOCTYPE = 'User') AND (REFERENCE_NAME = 'Administrator') AND (MODIFIED >= DATE_SUB(NOW(), INTERVAL 1 year))"
      ]
    },
    {
      "queryNo": 1500,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('a496d47242', '329a1b58b9', 'b1b0e80e75', '7d80cfb0a0', '3dcca4543d', '3b7e2e6e19', 'a8777daf10')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1501,
      "pathList": [
        "SELECT MAX(char_length(REF_NAME)) FROM TABEVENT HAVING COUNT(char_length(REF_NAME)) > COUNT(DISTINCT char_length(REF_NAME)) AND COUNT(DISTINCT char_length(REF_NAME)) > 1"
      ]
    },
    {
      "queryNo": 1502,
      "pathList": [
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD IN ('parenttype', 'parent')) AND (DOCTYPE = 'Buying Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD NOT IN ('parenttype', 'parent')) AND (DOCTYPE = 'Buying Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (FIELD IS NULL) AND (DOCTYPE = 'Buying Settings')",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE NOT (DOCTYPE = 'Buying Settings') AND (FIELD IN ('parenttype', 'parent'))",
        "SELECT FIELD, VALUE FROM TABSINGLES WHERE (DOCTYPE IS NULL) AND (FIELD IN ('parenttype', 'parent'))"
      ]
    },
    {
      "queryNo": 1503,
      "pathList": [
        "SELECT NAME, LABEL FROM TABSHIPPING RULE WHERE (NAME NOT IN ('_Test Shipping Rule - India'))",
        "SELECT NAME, LABEL FROM TABSHIPPING RULE WHERE (NAME IN ('_Test Shipping Rule - India'))"
      ]
    },
    {
      "queryNo": 1504,
      "pathList": [
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.NAME NOT LIKE '%%yoyo%%')",
        "SELECT TABDOCTYPE.NAME FROM TABDOCTYPE WHERE (TABDOCTYPE.NAME LIKE '%%yoyo%%')"
      ]
    },
    {
      "queryNo": 1506,
      "pathList": [
        "SELECT EXP_END_DATE FROM TABTASK WHERE NOT (NAME = 'TASK00013')",
        "SELECT EXP_END_DATE FROM TABTASK WHERE (NAME = 'TASK00013')"
      ]
    },
    {
      "queryNo": 1507,
      "pathList": [
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (USER = 'testperm@example.com') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER = 'testperm@example.com') AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND NOT (EVERYONE = 1) AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 2) AND NOT (USER = 'testperm@example.com') AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 1) AND NOT (USER = 'testperm@example.com') AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (EVERYONE = 0) AND NOT (USER = 'testperm@example.com') AND (SHARE_DOCTYPE = 'User') AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'User') AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'User') AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (WRITE = 1)",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 2) AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'User')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 1) AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'User')",
        "SELECT SHARE_NAME FROM TABDOCSHARE WHERE (WRITE = 0) AND ((USER = 'testperm@example.com' OR EVERYONE = 1)) AND (SHARE_DOCTYPE = 'User')"
      ]
    },
    {
      "queryNo": 1508,
      "pathList": [
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (ROLE = 'Website Manager') AND (PERMLEVEL = 0) AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE NOT (ROLE = 'Website Manager') AND (PERMLEVEL = 0) AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (ROLE IS NULL) AND (PERMLEVEL = 0) AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PERMLEVEL = 1) AND (ROLE = 'Website Manager') AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PERMLEVEL = 0) AND (ROLE = 'Website Manager') AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PERMLEVEL = -1) AND (ROLE = 'Website Manager') AND (PARENT = 'Blog Post')",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE NOT (PARENT = 'Blog Post') AND (ROLE = 'Website Manager') AND (PERMLEVEL = 0)",
        "SELECT NAME FROM TABCUSTOM DOCPERM WHERE (PARENT IS NULL) AND (ROLE = 'Website Manager') AND (PERMLEVEL = 0)"
      ]
    },
    {
      "queryNo": 1509,
      "pathList": [
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.ACCOUNT IS NULL) AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY_TYPE = 'Supplier') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY_TYPE IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.PARTY = '_Test Supplier') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.PARTY IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.IS_ADVANCE = 'Yes') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.IS_ADVANCE IS NULL) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 2) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T1.DOCSTATUS = 0) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (DEBIT_IN_ACCOUNT_CURRENCY > 0) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = 1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = 0) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (DEBIT_IN_ACCOUNT_CURRENCY = -1) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND ((T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE = 'Purchase Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE NOT (T2.REFERENCE_TYPE = 'Purchase Order') AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (T2.REFERENCE_TYPE IS NULL) AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')) AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (IFNULL(T2.REFERENCE_NAME, '') NOT IN ('PO-00006')) AND (T2.REFERENCE_TYPE = 'Purchase Order') AND (T2.ACCOUNT = 'Creditors - _TC') AND (T2.PARTY_TYPE = 'Supplier') AND (T2.PARTY = '_Test Supplier') AND (T2.IS_ADVANCE = 'Yes') AND (T1.DOCSTATUS = 1) AND (DEBIT_IN_ACCOUNT_CURRENCY > 0)",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 LEFT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1 AND (IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 RIGHT JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Purchase Order' AND IFNULL(T2.REFERENCE_NAME, '') IN ('PO-00006')))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE (((T2.REFERENCE_NAME IS NOT NULL))) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Purchase Order'))",
        "SELECT 'Journal Entry' AS REFERENCE_TYPE, T1.NAME AS REFERENCE_NAME, T1.REMARK AS REMARKS, T2.DEBIT_IN_ACCOUNT_CURRENCY AS AMOUNT, T2.NAME AS REFERENCE_ROW, T2.REFERENCE_NAME AS AGAINST_ORDER FROM TABJOURNAL ENTRY T1 INNER JOIN TABJOURNAL ENTRY ACCOUNT T2 ON T1.NAME = T2.PARENT WHERE ((T2.REFERENCE_NAME IS NULL)) AND (T2.ACCOUNT = 'Creditors - _TC' AND T2.PARTY_TYPE = 'Supplier' AND T2.PARTY = '_Test Supplier' AND T2.IS_ADVANCE = 'Yes' AND T1.DOCSTATUS = 1 AND DEBIT_IN_ACCOUNT_CURRENCY > 0 AND (T2.REFERENCE_TYPE = 'Purchase Order'))"
      ]
    },
    {
      "queryNo": 1510,
      "pathList": [
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE INNER JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE NOT (TABDOCPERM.PARENT = 'Blogger')",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE INNER JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE (TABDOCPERM.PARENT = 'Blogger')",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE INNER JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE (TABDOCPERM.PARENT IS NULL)",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE LEFT JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE (TABDOCPERM.ROLE IS NULL) AND (TABUSERROLE.ROLE IS NOT NULL)",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE LEFT JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE (TABDOCPERM.ROLE IS NULL) AND (TABUSERROLE.ROLE IS NULL)",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE RIGHT JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE ((TABUSERROLE.ROLE IS NULL) AND (TABDOCPERM.ROLE IS NOT NULL)) AND (TABDOCPERM.PARENT = 'Blogger')",
        "SELECT DISTINCT TABUSERROLE.PARENT FROM TABUSERROLE RIGHT JOIN TABDOCPERM ON TABDOCPERM.ROLE = TABUSERROLE.ROLE WHERE ((TABUSERROLE.ROLE IS NULL) AND (TABDOCPERM.ROLE IS NULL)) AND (TABDOCPERM.PARENT = 'Blogger')"
      ]
    },
    {
      "queryNo": 1511,
      "pathList": [
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE NOT (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE NOT (PARENTTYPE = 'BOM') AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTFIELD = 'scrap_items') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTFIELD = 'scrap_items') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE NOT (PARENTFIELD = 'scrap_items') AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (NAME NOT IN ('c2fdbc6680'))",
        "SELECT NAME FROM TABBOM SCRAP ITEM WHERE (NAME IN ('c2fdbc6680')) AND (PARENT = 'BOM-_Test FG Item-001') AND (PARENTTYPE = 'BOM') AND (PARENTFIELD = 'scrap_items')"
      ]
    },
    {
      "queryNo": 1512,
      "pathList": [
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 2) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 1) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (IS_DEFAULT = 0) AND (ITEM = '_Test FG Item')",
        "SELECT NAME FROM TABBOM WHERE (ITEM = '_Test FG Item') AND (IS_DEFAULT = 1)",
        "SELECT NAME FROM TABBOM WHERE NOT (ITEM = '_Test FG Item') AND (IS_DEFAULT = 1)",
        "SELECT NAME FROM TABBOM WHERE (ITEM IS NULL) AND (IS_DEFAULT = 1)"
      ]
    },
    {
      "queryNo": 1513,
      "pathList": [
        "SELECT COMMUNICATION, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABEMAIL QUEUE WHERE NOT (MESSAGE_ID = '20170209172141.2312.21853.0vExP838a1@erpnext.vm')",
        "SELECT COMMUNICATION, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABEMAIL QUEUE WHERE (MESSAGE_ID = '20170209172141.2312.21853.0vExP838a1@erpnext.vm')",
        "SELECT COMMUNICATION, REFERENCE_DOCTYPE, REFERENCE_NAME FROM TABEMAIL QUEUE WHERE (MESSAGE_ID IS NULL)"
      ]
    },
    {
      "queryNo": 1514,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups')) AND NOT (ITEM_CODE = 'Macbook Pro') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = 'Macbook Pro') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER, '') NOT IN ('_Test Customer', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER_GROUP, '') NOT IN ('_Test Customer Group', 'All Customer Groups', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(TERRITORY, '') NOT IN ('_Test Territory', 'All Territories', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('Standard Selling', '')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND ('2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ('2017-02-09' NOT BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31')) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((TERRITORY IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((TERRITORY IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND '2017-02-09' BETWEEN IFNULL(VALID_FROM, '2000-01-01') AND IFNULL(VALID_UPTO, '2500-12-31'))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_FROM IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_FROM IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((VALID_UPTO IS NOT NULL))) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((VALID_UPTO IS NULL)) AND ((ITEM_CODE = 'Macbook Pro' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('Standard Selling', ''))"
      ]
    },
    {
      "queryNo": 1515,
      "pathList": [
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (PROJECT = '_Test Project 1') AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE NOT (PROJECT = '_Test Project 1') AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (PROJECT IS NULL) AND (DOCSTATUS < 2) GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 3) AND (PROJECT = '_Test Project 1') GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 2) AND (PROJECT = '_Test Project 1') GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE (DOCSTATUS = 1) AND (PROJECT = '_Test Project 1') GROUP BY ACTIVITY_TYPE",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project 1' AND DOCSTATUS < 2 GROUP BY ACTIVITY_TYPE HAVING count(*) > 1",
        "SELECT COUNT(*) FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project 1' AND DOCSTATUS < 2 HAVING count(DISTINCT ACTIVITY_TYPE) > 1",
        "SELECT ACTIVITY_TYPE, SUM(HOURS) AS TOTAL_HOURS FROM TABTIMESHEET DETAIL WHERE PROJECT = '_Test Project 1' AND DOCSTATUS < 2 GROUP BY ACTIVITY_TYPE HAVING COUNT(HOURS) > COUNT(DISTINCT HOURS) AND COUNT(DISTINCT HOURS) > 1"
      ]
    },
    {
      "queryNo": 1516,
      "pathList": [
        "SELECT * FROM TABPOS PROFILE WHERE (IFNULL(USER, '') = '') AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE NOT (IFNULL(USER, '') = '') AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE NOT (COMPANY = '_Test Company') AND (IFNULL(USER, '') = '')",
        "SELECT * FROM TABPOS PROFILE WHERE (COMPANY IS NULL) AND (IFNULL(USER, '') = '')",
        "SELECT * FROM TABPOS PROFILE WHERE (((USER IS NOT NULL))) AND (COMPANY = '_Test Company')",
        "SELECT * FROM TABPOS PROFILE WHERE ((USER IS NULL)) AND (COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 1517,
      "pathList": [
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (UOM = '_Test UOM') AND (PARENT IN ('_Test Variant Item-S', '_Test Variant Item'))",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE NOT (UOM = '_Test UOM') AND (PARENT IN ('_Test Variant Item-S', '_Test Variant Item'))",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (UOM IS NULL) AND (PARENT IN ('_Test Variant Item-S', '_Test Variant Item'))",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (PARENT NOT IN ('_Test Variant Item-S', '_Test Variant Item')) AND (UOM = '_Test UOM')",
        "SELECT CONVERSION_FACTOR FROM TABUOM CONVERSION DETAIL WHERE (PARENT IS NULL) AND (UOM = '_Test UOM')"
      ]
    },
    {
      "queryNo": 1518,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (PARENT_ACCOUNT = 'Test Warehouse for Merging 1 - _TC') AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (PARENT_ACCOUNT = 'Test Warehouse for Merging 1 - _TC') AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABACCOUNT WHERE (PARENT_ACCOUNT IS NULL) AND (DOCSTATUS <> 2)",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 3) AND (PARENT_ACCOUNT = 'Test Warehouse for Merging 1 - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 2) AND (PARENT_ACCOUNT = 'Test Warehouse for Merging 1 - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (DOCSTATUS = 1) AND (PARENT_ACCOUNT = 'Test Warehouse for Merging 1 - _TC')"
      ]
    },
    {
      "queryNo": 1519,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE NOT (AMENDED_FROM = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (AMENDED_FROM = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1520,
      "pathList": [
        "SELECT NAME FROM TABUSER WHERE NOT (NAME <> 'Guest')",
        "SELECT NAME FROM TABUSER WHERE (NAME <> 'Guest')"
      ]
    },
    {
      "queryNo": 1521,
      "pathList": [
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE NOT (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_DOCTYPE, PARENTTYPE FROM TABCOMMUNICATION WHERE (REFERENCE_DOCTYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1522,
      "pathList": [
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00003') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00003') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PREC-00003') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENT = 'PREC-00003') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'supplied_items')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE NOT (PARENTFIELD = 'supplied_items') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00003')",
        "SELECT * FROM TABPURCHASE RECEIPT ITEM SUPPLIED WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00003')"
      ]
    },
    {
      "queryNo": 1523,
      "pathList": [
        "SELECT WRITE_OFF_ACCOUNT, EXCHANGE_GAIN_LOSS_ACCOUNT, COST_CENTER FROM TABCOMPANY WHERE NOT (NAME = '_Test Company')",
        "SELECT WRITE_OFF_ACCOUNT, EXCHANGE_GAIN_LOSS_ACCOUNT, COST_CENTER FROM TABCOMPANY WHERE (NAME = '_Test Company')"
      ]
    },
    {
      "queryNo": 1524,
      "pathList": [
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTTYPE = 'Employee') AND (PARENT = '_T-Employee-0001') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Employee-0001') AND (PARENTFIELD = 'leave_approvers') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE NOT (PARENTFIELD = 'leave_approvers') AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (PARENTFIELD IS NULL) AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (NAME NOT IN ('5e98e0dc43', '14114befc6'))",
        "SELECT NAME FROM TABEMPLOYEE LEAVE APPROVER WHERE (NAME IN ('5e98e0dc43', '14114befc6')) AND (PARENT = '_T-Employee-0001') AND (PARENTTYPE = 'Employee') AND (PARENTFIELD = 'leave_approvers')"
      ]
    },
    {
      "queryNo": 1525,
      "pathList": [
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE (PARENTTYPE = 'Item') AND (PARENT = '_Test Item for Auto Price List') AND (PARENTFIELD = 'website_item_groups')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = '_Test Item for Auto Price List') AND (PARENTFIELD = 'website_item_groups')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Item for Auto Price List') AND (PARENTFIELD = 'website_item_groups')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENT = '_Test Item for Auto Price List') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'website_item_groups')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'website_item_groups')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE NOT (PARENTFIELD = 'website_item_groups') AND (PARENTTYPE = 'Item') AND (PARENT = '_Test Item for Auto Price List')",
        "SELECT * FROM TABWEBSITE ITEM GROUP WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = '_Test Item for Auto Price List')"
      ]
    },
    {
      "queryNo": 1526,
      "pathList": [
      ]
    },
    {
      "queryNo": 1527,
      "pathList": [
        "SELECT DISTINCT PARENT FROM TABBOM OPERATION WHERE NOT (WORKSTATION = '_Test Workstation 1')",
        "SELECT DISTINCT PARENT FROM TABBOM OPERATION WHERE (WORKSTATION = '_Test Workstation 1')",
        "SELECT DISTINCT PARENT FROM TABBOM OPERATION WHERE (WORKSTATION IS NULL)"
      ]
    },
    {
      "queryNo": 1528,
      "pathList": [
        "SELECT NAME FROM TABDOCFIELD WHERE (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE NOT (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE (PARENT IS NULL) AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE NOT (PARENTTYPE = 'DocType') AND (PARENT = 'ToDo') AND (PARENTFIELD = 'fields') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE (PARENTTYPE IS NULL) AND (PARENT = 'ToDo') AND (PARENTFIELD = 'fields') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE NOT (PARENTFIELD = 'fields') AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE (PARENTFIELD IS NULL) AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (NAME NOT IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92'))",
        "SELECT NAME FROM TABDOCFIELD WHERE (NAME IN ('42594f37c5', '1d33322d80', '42e8905f4a', 'e3817df1d0', 'd1d9230160', '107ba1f7c6', '268bda199d', 'c95955c71d', 'eaa2a54c48', '5f8c00dace', '4cc0780e32', 'be1e4a09ab', '0081b75292', 'e9b9d7af8a', '511c09171d', '615c245c92')) AND (PARENT = 'ToDo') AND (PARENTTYPE = 'DocType') AND (PARENTFIELD = 'fields')"
      ]
    },
    {
      "queryNo": 1530,
      "pathList": [
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Sales Invoice') AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Sales Invoice') AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'SINV-00016')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'SINV-00016') AND (VOUCHER_TYPE = 'Sales Invoice')",
        "SELECT ACCOUNT, DEBIT, CREDIT FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Sales Invoice')"
      ]
    },
    {
      "queryNo": 1531,
      "pathList": [
        "SELECT NAME FROM TABACADEMIC TERM WHERE NOT (NAME = '2014-2015 (_Test Academic Term)')",
        "SELECT NAME FROM TABACADEMIC TERM WHERE (NAME = '2014-2015 (_Test Academic Term)')"
      ]
    },
    {
      "queryNo": 1532,
      "pathList": [
        "SELECT NAME FROM TABJOB APPLICANT WHERE NOT (TABJOB APPLICANT.STATUS = 'Open')",
        "SELECT NAME FROM TABJOB APPLICANT WHERE (TABJOB APPLICANT.STATUS = 'Open')",
        "SELECT NAME FROM TABJOB APPLICANT WHERE (TABJOB APPLICANT.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1533,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE NOT (AGAINST_SALES_INVOICE = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE (AGAINST_SALES_INVOICE = 'SINV-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE ITEM WHERE (AGAINST_SALES_INVOICE IS NULL)"
      ]
    },
    {
      "queryNo": 1534,
      "pathList": [
        "SELECT ITEM_GROUP FROM TABITEM WHERE NOT (NAME = '_Test FG Item')",
        "SELECT ITEM_GROUP FROM TABITEM WHERE (NAME = '_Test FG Item')"
      ]
    },
    {
      "queryNo": 1535,
      "pathList": [
        "SELECT OUTGOING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'PREC-00007') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT OUTGOING_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'PREC-00007') AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT OUTGOING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Purchase Receipt')",
        "SELECT OUTGOING_RATE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Purchase Receipt') AND (VOUCHER_NO = 'PREC-00007')",
        "SELECT OUTGOING_RATE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'PREC-00007')"
      ]
    },
    {
      "queryNo": 1536,
      "pathList": [
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE (PARENTTYPE = 'Material Request') AND (PARENT = '_T-Material Request-00002') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTTYPE = 'Material Request') AND (PARENT = '_T-Material Request-00002') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = '_T-Material Request-00002') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENT = '_T-Material Request-00002') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Material Request') AND (PARENT = '_T-Material Request-00002')",
        "SELECT * FROM TABMATERIAL REQUEST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Material Request') AND (PARENT = '_T-Material Request-00002')"
      ]
    },
    {
      "queryNo": 1537,
      "pathList": [
        "SELECT * FROM TABSHIPPING RULE WHERE NOT (NAME = '_Test Shipping Rule - India')",
        "SELECT * FROM TABSHIPPING RULE WHERE (NAME = '_Test Shipping Rule - India')"
      ]
    },
    {
      "queryNo": 1538,
      "pathList": [
        "SELECT NAME FROM TABREQUEST FOR QUOTATION WHERE (TABREQUEST FOR QUOTATION.DOCSTATUS = 0.0 + 1)",
        "SELECT NAME FROM TABREQUEST FOR QUOTATION WHERE (TABREQUEST FOR QUOTATION.DOCSTATUS = 0.0)",
        "SELECT NAME FROM TABREQUEST FOR QUOTATION WHERE (TABREQUEST FOR QUOTATION.DOCSTATUS = 0.0 - 1)"
      ]
    },
    {
      "queryNo": 1539,
      "pathList": [
        "SELECT * FROM TABWAREHOUSE WHERE (LFT = 44) AND NOT (RGT = 44)",
        "SELECT * FROM TABWAREHOUSE WHERE (LFT = 43) AND NOT (RGT = 44)",
        "SELECT * FROM TABWAREHOUSE WHERE (LFT = 42) AND NOT (RGT = 44)",
        "SELECT * FROM TABWAREHOUSE WHERE (RGT = 45) AND NOT (LFT = 43)",
        "SELECT * FROM TABWAREHOUSE WHERE (RGT = 44) AND NOT (LFT = 43)",
        "SELECT * FROM TABWAREHOUSE WHERE (RGT = 43) AND NOT (LFT = 43)"
      ]
    },
    {
      "queryNo": 1540,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE NOT (AMENDED_FROM = 'DN-00015')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE (AMENDED_FROM = 'DN-00015')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABDELIVERY NOTE WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1541,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE >= '2013-01-01') AND (POSTING_DATE <= '2013-02-14') AND (VOUCHER_TYPE <> 'Period Closing Voucher') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (VOUCHER_TYPE <> 'Period Closing Voucher') AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (VOUCHER_TYPE IS NULL) AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC') AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (POSTING_DATE <= '2013-02-14') AND (POSTING_DATE >= '2013-01-01') AND (VOUCHER_TYPE <> 'Period Closing Voucher')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2013-02-14' AND POSTING_DATE >= '2013-01-01' AND VOUCHER_TYPE <> 'Period Closing Voucher' AND GLE.ACCOUNT = '_Test Account Cost for Goods Sold - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 1542,
      "pathList": [
        "SELECT NAME FROM TABSERIAL NO WHERE (ITEM_CODE = '_Test Serialized Item With Series') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABSERIAL NO WHERE NOT (ITEM_CODE = '_Test Serialized Item With Series') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABSERIAL NO WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABSERIAL NO WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT NAME FROM TABSERIAL NO WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Serialized Item With Series')"
      ]
    },
    {
      "queryNo": 1543,
      "pathList": [
        "SELECT _COMMENTS FROM TABEVENT WHERE NOT (NAME = 'EV00017')",
        "SELECT _COMMENTS FROM TABEVENT WHERE (NAME = 'EV00017')"
      ]
    },
    {
      "queryNo": 1544,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSALES ORDER WHERE NOT (NAME = 'SO-00017')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSALES ORDER WHERE (NAME = 'SO-00017')"
      ]
    },
    {
      "queryNo": 1545,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE NOT (PURCHASE_RECEIPT = 'PREC-00012')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT = 'PREC-00012')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_RECEIPT IS NULL)"
      ]
    },
    {
      "queryNo": 1546,
      "pathList": [
      ]
    },
    {
      "queryNo": 1547,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMATERIAL REQUEST ITEM WHERE NOT (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMATERIAL REQUEST ITEM WHERE (SALES_ORDER = 'SO-00013')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABMATERIAL REQUEST ITEM WHERE (SALES_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1548,
      "pathList": [
        "SELECT NAME FROM TABTERRITORY WHERE NOT (NAME = 'United States')",
        "SELECT NAME FROM TABTERRITORY WHERE (NAME = 'United States')"
      ]
    },
    {
      "queryNo": 1549,
      "pathList": [
        "SELECT NAME FROM TABFILE WHERE (LFT = 3) AND (RGT > 9)",
        "SELECT NAME FROM TABFILE WHERE (LFT = 2) AND (RGT > 9)",
        "SELECT NAME FROM TABFILE WHERE (LFT = 1) AND (RGT > 9)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 10) AND (LFT < 2)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 9) AND (LFT < 2)",
        "SELECT NAME FROM TABFILE WHERE (RGT = 8) AND (LFT < 2)"
      ]
    },
    {
      "queryNo": 1550,
      "pathList": [
        "SELECT MAX(char_length(MODIFIED_BY)) FROM TABUSER HAVING COUNT(char_length(MODIFIED_BY)) > COUNT(DISTINCT char_length(MODIFIED_BY)) AND COUNT(DISTINCT char_length(MODIFIED_BY)) > 1"
      ]
    },
    {
      "queryNo": 1551,
      "pathList": [
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW INNER JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE NOT (TABWORKFLOW TRANSITION.ALLOWED = 'System Manager')",
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW INNER JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE (TABWORKFLOW TRANSITION.ALLOWED = 'System Manager')",
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW INNER JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE (TABWORKFLOW TRANSITION.ALLOWED IS NULL)",
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW LEFT JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE (TABWORKFLOW TRANSITION.PARENT IS NULL) AND (TABWORKFLOW.NAME IS NOT NULL)",
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW RIGHT JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE ((TABWORKFLOW.NAME IS NULL) AND (TABWORKFLOW TRANSITION.PARENT IS NOT NULL)) AND (TABWORKFLOW TRANSITION.ALLOWED = 'System Manager')",
        "SELECT TABWORKFLOW.NAME, TABWORKFLOW.MODIFIED, TABWORKFLOW.DOCSTATUS FROM TABWORKFLOW RIGHT JOIN TABWORKFLOW TRANSITION ON (TABWORKFLOW TRANSITION.PARENT = TABWORKFLOW.NAME) WHERE ((TABWORKFLOW.NAME IS NULL) AND (TABWORKFLOW TRANSITION.PARENT IS NULL)) AND (TABWORKFLOW TRANSITION.ALLOWED = 'System Manager')"
      ]
    },
    {
      "queryNo": 1552,
      "pathList": [
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE <= '2017-02-09 12:27:02.190850') AND (GLE.ACCOUNT = '_Test Bank - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (POSTING_DATE <= '2017-02-09 12:27:02.190850') AND (GLE.ACCOUNT = '_Test Bank - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (POSTING_DATE IS NULL) AND (GLE.ACCOUNT = '_Test Bank - _TC')",
        "SELECT * FROM TABGL ENTRY GLE WHERE NOT (GLE.ACCOUNT = '_Test Bank - _TC') AND (POSTING_DATE <= '2017-02-09 12:27:02.190850')",
        "SELECT * FROM TABGL ENTRY GLE WHERE (GLE.ACCOUNT IS NULL) AND (POSTING_DATE <= '2017-02-09 12:27:02.190850')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09 12:27:02.190850' AND GLE.ACCOUNT = '_Test Bank - _TC' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY GLE WHERE POSTING_DATE <= '2017-02-09 12:27:02.190850' AND GLE.ACCOUNT = '_Test Bank - _TC' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 1553,
      "pathList": [
        "SELECT DISTINCT PURCHASE_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE NOT (PURCHASE_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT PURCHASE_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE (PURCHASE_DOCUMENT_TYPE = 'Role')",
        "SELECT DISTINCT PURCHASE_DOCUMENT_TYPE, PARENTTYPE FROM TABSERIAL NO WHERE (PURCHASE_DOCUMENT_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1554,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE NOT (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (ASSET = 'Macbook Pro 1')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE ITEM WHERE (ASSET IS NULL)"
      ]
    },
    {
      "queryNo": 1555,
      "pathList": [
        "SELECT IS_FROZEN, DISABLED FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer')",
        "SELECT IS_FROZEN, DISABLED FROM TABCUSTOMER WHERE (NAME = '_Test Customer')"
      ]
    },
    {
      "queryNo": 1556,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE WHERE NOT (NAME = 'SINV-00008')",
        "SELECT * FROM TABSALES INVOICE WHERE (NAME = 'SINV-00008')"
      ]
    },
    {
      "queryNo": 1557,
      "pathList": [
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 2) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 1) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (HAS_SERIAL_NO = 0) AND (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item'))",
        "SELECT NAME FROM TABITEM WHERE (NAME IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item')) AND (HAS_SERIAL_NO = 1)",
        "SELECT NAME FROM TABITEM WHERE (NAME NOT IN ('_Test Item', '_Test Item Home Desktop 100', '_Test FG Item')) AND (HAS_SERIAL_NO = 1)"
      ]
    },
    {
      "queryNo": 1558,
      "pathList": [
        "SELECT * FROM TABLEAVE APPLICATION WHERE (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (EMPLOYEE IS NULL) AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 3) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0001') AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (STATUS NOT IN ('Open', 'Approved')) AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (STATUS IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE NOT (FROM_DATE = '2013-01-01') AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (TO_DATE = '2013-01-05') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE NOT (TO_DATE = '2013-01-05') AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE (TO_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (NAME <> 'LAP/00011')",
        "SELECT * FROM TABLEAVE APPLICATION WHERE NOT (NAME <> 'LAP/00011') AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS < 2) AND (STATUS IN ('Open', 'Approved')) AND (FROM_DATE = '2013-01-01') AND (TO_DATE = '2013-01-05')",
        "SELECT SUM(TOTAL_LEAVE_DAYS) FROM TABLEAVE APPLICATION WHERE EMPLOYEE = '_T-Employee-0001' AND DOCSTATUS < 2 AND STATUS IN ('Open', 'Approved') AND FROM_DATE = '2013-01-01' AND TO_DATE = '2013-01-05' AND NAME <> 'LAP/00011' HAVING COUNT(TOTAL_LEAVE_DAYS) > COUNT(DISTINCT TOTAL_LEAVE_DAYS) AND COUNT(DISTINCT TOTAL_LEAVE_DAYS) > 1"
      ]
    },
    {
      "queryNo": 1559,
      "pathList": [
        "SELECT MAX(char_length(GITHUB_USERNAME)) FROM TABUSER HAVING COUNT(char_length(GITHUB_USERNAME)) > COUNT(DISTINCT char_length(GITHUB_USERNAME)) AND COUNT(DISTINCT char_length(GITHUB_USERNAME)) > 1"
      ]
    },
    {
      "queryNo": 1560,
      "pathList": [
        "SELECT MAX(char_length(GENDER)) FROM TABUSER HAVING COUNT(char_length(GENDER)) > COUNT(DISTINCT char_length(GENDER)) AND COUNT(DISTINCT char_length(GENDER)) > 1"
      ]
    },
    {
      "queryNo": 1561,
      "pathList": [
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (PARENTTYPE = 'Contact') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTFIELD = 'links') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTFIELD = 'links') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE NOT (PARENTFIELD = 'links') AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (PARENTFIELD IS NULL) AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (NAME NOT IN ('e67324e8dc'))",
        "SELECT NAME FROM TABDYNAMIC LINK WHERE (NAME IN ('e67324e8dc')) AND (PARENT = '_Test Contact for _Test Customer-_Test Customer') AND (PARENTTYPE = 'Contact') AND (PARENTFIELD = 'links')"
      ]
    },
    {
      "queryNo": 1562,
      "pathList": [
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_DATE IS NULL) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_TIME IS NULL) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE NOT IN ('_Test Item', '_Test Item Home Desktop 100')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE NOT IN ('_Test Warehouse - _TC')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:23:43.536528')) AND (ITEM_CODE IN ('_Test Item', '_Test Item Home Desktop 100'))"
      ]
    },
    {
      "queryNo": 1563,
      "pathList": [
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (A.DOCSTATUS = 2) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (A.DOCSTATUS = 1) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (A.DOCSTATUS = 0) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.DOCSTATUS = 1) AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE NOT (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.DOCSTATUS = 1) AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (DS.SCHEDULE_DATE IS NULL) AND (A.DOCSTATUS = 1) AND (A.STATUS IN ('Submitted', 'Partially Depreciated')) AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (A.STATUS NOT IN ('Submitted', 'Partially Depreciated')) AND (A.DOCSTATUS = 1) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (A.STATUS IS NULL) AND (A.DOCSTATUS = 1) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE NOT (IFNULL(DS.JOURNAL_ENTRY, '') = '') AND (A.DOCSTATUS = 1) AND (DS.SCHEDULE_DATE <= '2017-02-09') AND (A.STATUS IN ('Submitted', 'Partially Depreciated'))",
        "SELECT A.NAME FROM TABASSET A LEFT JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE ((DS.PARENT IS NULL) AND (A.NAME IS NOT NULL)) AND (A.DOCSTATUS = 1 AND A.STATUS IN ('Submitted', 'Partially Depreciated') AND IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A RIGHT JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE ((A.NAME IS NULL) AND (DS.PARENT IS NOT NULL)) AND (DS.SCHEDULE_DATE <= '2017-02-09' AND IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A RIGHT JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE ((A.NAME IS NULL) AND (DS.PARENT IS NULL)) AND (DS.SCHEDULE_DATE <= '2017-02-09' AND IFNULL(DS.JOURNAL_ENTRY, '') = '')",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE (((DS.JOURNAL_ENTRY IS NOT NULL))) AND (A.DOCSTATUS = 1 AND DS.SCHEDULE_DATE <= '2017-02-09' AND A.STATUS IN ('Submitted', 'Partially Depreciated'))",
        "SELECT A.NAME FROM TABASSET A INNER JOIN TABDEPRECIATION SCHEDULE DS ON A.NAME = DS.PARENT WHERE ((DS.JOURNAL_ENTRY IS NULL)) AND (A.DOCSTATUS = 1 AND DS.SCHEDULE_DATE <= '2017-02-09' AND A.STATUS IN ('Submitted', 'Partially Depreciated'))"
      ]
    },
    {
      "queryNo": 1564,
      "pathList": [
        "SELECT NAME FROM TABFISCAL YEAR WHERE NOT (NAME = '_Test Fiscal Year 2012')",
        "SELECT NAME FROM TABFISCAL YEAR WHERE (NAME = '_Test Fiscal Year 2012')"
      ]
    },
    {
      "queryNo": 1565,
      "pathList": [
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE (PUBLISH = 2) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE (PUBLISH = 1) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE (PUBLISH = 0) AND (ROUTE = 'test-route-000')",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE (ROUTE = 'test-route-000') AND (PUBLISH = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE NOT (ROUTE = 'test-route-000') AND (PUBLISH = 1)",
        "SELECT ROUTE, NAME, MODIFIED FROM TABSTUDENT ADMISSION WHERE (ROUTE IS NULL) AND (PUBLISH = 1)"
      ]
    },
    {
      "queryNo": 1566,
      "pathList": [
        "SELECT MAX(char_length(PARENTTYPE)) FROM TABEVENT HAVING COUNT(char_length(PARENTTYPE)) > COUNT(DISTINCT char_length(PARENTTYPE)) AND COUNT(DISTINCT char_length(PARENTTYPE)) > 1"
      ]
    },
    {
      "queryNo": 1567,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.STATUS NOT IN ('Completed', 'Closed')) AND (TABPURCHASE ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.STATUS IN ('Completed', 'Closed')) AND (TABPURCHASE ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.STATUS IS NULL) AND (TABPURCHASE ORDER.DOCSTATUS < 2.0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.DOCSTATUS = 2.0 + 1) AND (TABPURCHASE ORDER.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.DOCSTATUS = 2.0) AND (TABPURCHASE ORDER.STATUS NOT IN ('Completed', 'Closed'))",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (TABPURCHASE ORDER.DOCSTATUS = 2.0 - 1) AND (TABPURCHASE ORDER.STATUS NOT IN ('Completed', 'Closed'))"
      ]
    },
    {
      "queryNo": 1568,
      "pathList": [
        "SELECT STOCK_VALUE FROM TABBIN WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE FROM TABBIN WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE FROM TABBIN WHERE (WAREHOUSE IS NULL) AND (ITEM_CODE = '_Test Item')",
        "SELECT STOCK_VALUE FROM TABBIN WHERE NOT (ITEM_CODE = '_Test Item') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT STOCK_VALUE FROM TABBIN WHERE (ITEM_CODE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1569,
      "pathList": [
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE = '_Test Warehouse - _TC') AND (ACCOUNT_TYPE = 'Stock')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (WAREHOUSE = '_Test Warehouse - _TC') AND (ACCOUNT_TYPE = 'Stock')",
        "SELECT NAME FROM TABACCOUNT WHERE (WAREHOUSE IS NULL) AND (ACCOUNT_TYPE = 'Stock')",
        "SELECT NAME FROM TABACCOUNT WHERE NOT (ACCOUNT_TYPE = 'Stock') AND (WAREHOUSE = '_Test Warehouse - _TC')",
        "SELECT NAME FROM TABACCOUNT WHERE (ACCOUNT_TYPE IS NULL) AND (WAREHOUSE = '_Test Warehouse - _TC')"
      ]
    },
    {
      "queryNo": 1570,
      "pathList": [
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = 1) AND ((NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME) OR EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = 0) AND ((NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME) OR EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (DISABLED = -1) AND ((NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME) OR EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)) AND (NOT EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')) AND (DISABLED = 0)",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)) AND (NOT EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')) AND (DISABLED = 0)",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE (EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')) AND (EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)) AND (DISABLED = 0)",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE NOT (FYC.PARENT = FY.NAME)) AND (DISABLED = 0 AND (EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE (FYC.PARENT = FY.NAME)) AND (DISABLED = 0 AND (EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE (FYC.PARENT IS NULL)) AND (DISABLED = 0 AND (EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME AND FYC.COMPANY = 'Wind Power LLC')))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE (FYC.PARENT = FY.NAME) AND (FYC.COMPANY = 'Wind Power LLC')) AND (DISABLED = 0 AND (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE NOT (FYC.PARENT = FY.NAME) AND (FYC.COMPANY = 'Wind Power LLC')) AND (DISABLED = 0 AND (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE (FYC.PARENT IS NULL) AND (FYC.COMPANY = 'Wind Power LLC')) AND (DISABLED = 0 AND (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE NOT (FYC.COMPANY = 'Wind Power LLC') AND (FYC.PARENT = FY.NAME)) AND (DISABLED = 0 AND (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)))",
        "SELECT FY.NAME, FY.YEAR_START_DATE, FY.YEAR_END_DATE FROM TABFISCAL YEAR FY WHERE EXISTS (SELECT COMPANY FROM TABFISCAL YEAR COMPANY FYC WHERE (FYC.COMPANY IS NULL) AND (FYC.PARENT = FY.NAME)) AND (DISABLED = 0 AND (NOT EXISTS (SELECT NAME FROM TABFISCAL YEAR COMPANY FYC WHERE FYC.PARENT = FY.NAME)))"
      ]
    },
    {
      "queryNo": 1571,
      "pathList": [
        "SELECT * FROM TABTASK DEPENDS ON WHERE (PARENTTYPE = 'Task') AND (PARENT = 'TASK00010') AND (PARENTFIELD = 'depends_on')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE NOT (PARENTTYPE = 'Task') AND (PARENT = 'TASK00010') AND (PARENTFIELD = 'depends_on')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE (PARENTTYPE IS NULL) AND (PARENT = 'TASK00010') AND (PARENTFIELD = 'depends_on')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE NOT (PARENT = 'TASK00010') AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Task') AND (PARENTFIELD = 'depends_on')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE NOT (PARENTFIELD = 'depends_on') AND (PARENTTYPE = 'Task') AND (PARENT = 'TASK00010')",
        "SELECT * FROM TABTASK DEPENDS ON WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Task') AND (PARENT = 'TASK00010')"
      ]
    },
    {
      "queryNo": 1572,
      "pathList": [
        "SELECT NAME, TARGET_NAME FROM TABTRANSLATION WHERE (SOURCE_NAME = 'Event') AND (LANGUAGE = 'en')",
        "SELECT NAME, TARGET_NAME FROM TABTRANSLATION WHERE NOT (SOURCE_NAME = 'Event') AND (LANGUAGE = 'en')",
        "SELECT NAME, TARGET_NAME FROM TABTRANSLATION WHERE (SOURCE_NAME IS NULL) AND (LANGUAGE = 'en')",
        "SELECT NAME, TARGET_NAME FROM TABTRANSLATION WHERE NOT (LANGUAGE = 'en') AND (SOURCE_NAME = 'Event')",
        "SELECT NAME, TARGET_NAME FROM TABTRANSLATION WHERE (LANGUAGE IS NULL) AND (SOURCE_NAME = 'Event')"
      ]
    },
    {
      "queryNo": 1573,
      "pathList": [
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.EMPLOYEE IS NULL) AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 13:55:59.427627' > TSD.FROM_TIME) AND ('2017-02-09 13:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:55:59.427627' > TSD.FROM_TIME) AND ('2017-02-09 13:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 13:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:55:59.427627' < TSD.TO_TIME) AND ('2017-02-09 13:55:59.427627' > TSD.FROM_TIME) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 13:55:59.427627' > TSD.FROM_TIME) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME) AND ('2017-02-09 15:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME) AND ('2017-02-09 15:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 15:55:59.427627' < TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 15:55:59.427627' < TSD.TO_TIME) AND ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME)) AND NOT (('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME) AND ('2017-02-09 15:55:59.427627' >= TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME) AND ('2017-02-09 15:55:59.427627' >= TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.FROM_TIME IS NULL) AND ('2017-02-09 15:55:59.427627' >= TSD.TO_TIME) AND NOT (('2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT ('2017-02-09 15:55:59.427627' >= TSD.TO_TIME) AND ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME)) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TSD.TO_TIME IS NULL) AND ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME) AND NOT (('2017-02-09 13:55:59.427627' > TSD.FROM_TIME)) AND NOT (('2017-02-09 15:55:59.427627' > TSD.FROM_TIME)) AND (TS.EMPLOYEE = '_T-Employee-0001') AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TSD.NAME <> 'df9353a452') AND (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TS.NAME <> 'TS-00012') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE NOT (TS.NAME <> 'TS-00012') AND (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.DOCSTATUS < 2)",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 3) AND (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 2) AND (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD INNER JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE (TS.DOCSTATUS = 1) AND (TS.EMPLOYEE = '_T-Employee-0001') AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME))) AND (TSD.NAME <> 'df9353a452') AND (TS.NAME <> 'TS-00012')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD LEFT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NOT NULL)) AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND TSD.NAME <> 'df9353a452')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD LEFT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TS.NAME IS NULL) AND (TSD.PARENT IS NULL)) AND ((('2017-02-09 13:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 13:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 15:55:59.427627' > TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' < TSD.TO_TIME) OR ('2017-02-09 13:55:59.427627' <= TSD.FROM_TIME AND '2017-02-09 15:55:59.427627' >= TSD.TO_TIME)) AND TSD.NAME <> 'df9353a452')",
        "SELECT TS.NAME AS NAME, TSD.FROM_TIME AS FROM_TIME, TSD.TO_TIME AS TO_TIME FROM TABTIMESHEET DETAIL TSD RIGHT JOIN TABTIMESHEET TS ON TSD.PARENT = TS.NAME WHERE ((TSD.PARENT IS NULL) AND (TS.NAME IS NOT NULL)) AND (TS.EMPLOYEE = '_T-Employee-0001' AND TS.NAME <> 'TS-00012' AND TS.DOCSTATUS < 2)"
      ]
    },
    {
      "queryNo": 1574,
      "pathList": [
        "SELECT MAX(char_length(TIME_ZONE)) FROM TABUSER HAVING COUNT(char_length(TIME_ZONE)) > COUNT(DISTINCT char_length(TIME_ZONE)) AND COUNT(DISTINCT char_length(TIME_ZONE)) > 1"
      ]
    },
    {
      "queryNo": 1576,
      "pathList": [
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENTTYPE = 'Production Order') AND (PARENT = 'PRO-00001') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PRO-00001') AND (PARENTFIELD = 'operations') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE NOT (PARENTFIELD = 'operations') AND (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (NAME NOT IN ('d41f644502'))",
        "SELECT NAME FROM TABPRODUCTION ORDER OPERATION WHERE (NAME IN ('d41f644502')) AND (PARENT = 'PRO-00001') AND (PARENTTYPE = 'Production Order') AND (PARENTFIELD = 'operations')"
      ]
    },
    {
      "queryNo": 1577,
      "pathList": [
        "SELECT BOM_NO FROM TABBOM ITEM WHERE NOT (PARENT = 'BOM-_Test PPT Item SC B-001')",
        "SELECT BOM_NO FROM TABBOM ITEM WHERE (PARENT = 'BOM-_Test PPT Item SC B-001')",
        "SELECT BOM_NO FROM TABBOM ITEM WHERE (PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1578,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE NOT (PURCHASE_INVOICE = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (PURCHASE_INVOICE = 'PINV-00005')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABASSET WHERE (PURCHASE_INVOICE IS NULL)"
      ]
    },
    {
      "queryNo": 1579,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT = 'PREC-00012') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENT = 'PREC-00012') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTTYPE = 'Purchase Receipt') AND (PARENT = 'PREC-00012') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'PREC-00012') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'PREC-00012') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'PREC-00012') AND (PARENTTYPE = 'Purchase Receipt') AND (NAME NOT IN ('bd770fa806'))",
        "SELECT NAME FROM TABPURCHASE RECEIPT ITEM WHERE (NAME IN ('bd770fa806')) AND (PARENT = 'PREC-00012') AND (PARENTTYPE = 'Purchase Receipt') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1580,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (DOCSTATUS = 2) AND (NAME = 'PREC-00003')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (DOCSTATUS = 1) AND (NAME = 'PREC-00003')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (DOCSTATUS = 0) AND (NAME = 'PREC-00003')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00003') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00003') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1581,
      "pathList": [
        "SELECT NAME FROM TABCOMMUNICATION WHERE NOT (SENDER = 'test_sender@example.com')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (SENDER = 'test_sender@example.com')",
        "SELECT NAME FROM TABCOMMUNICATION WHERE (SENDER IS NULL)"
      ]
    },
    {
      "queryNo": 1582,
      "pathList": [
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00013') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE NOT (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00013') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SINV-00013') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE NOT (PARENT = 'SINV-00013') AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENTFIELD = 'timesheets')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE NOT (PARENTFIELD = 'timesheets') AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00013')",
        "SELECT * FROM TABSALES INVOICE TIMESHEET WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Sales Invoice') AND (PARENT = 'SINV-00013')"
      ]
    },
    {
      "queryNo": 1583,
      "pathList": [
        "SELECT IS_LWP FROM TABLEAVE TYPE WHERE NOT (NAME = '_Test Leave Type')",
        "SELECT IS_LWP FROM TABLEAVE TYPE WHERE (NAME = '_Test Leave Type')"
      ]
    },
    {
      "queryNo": 1584,
      "pathList": [
        "SELECT OWNER FROM TABDOCTYPE WHERE NOT (NAME = 'ToDo')",
        "SELECT OWNER FROM TABDOCTYPE WHERE (NAME = 'ToDo')"
      ]
    },
    {
      "queryNo": 1585,
      "pathList": [
      ]
    },
    {
      "queryNo": 1586,
      "pathList": [
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENTTYPE = 'Stock Reconciliation') AND (PARENT = 'SR/00011') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENTTYPE = 'Stock Reconciliation') AND (PARENT = 'SR/00011') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'SR/00011') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENT = 'SR/00011') AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENT = 'SR/00011')",
        "SELECT * FROM TABSTOCK RECONCILIATION ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Stock Reconciliation') AND (PARENT = 'SR/00011')"
      ]
    },
    {
      "queryNo": 1587,
      "pathList": [
        "SELECT CREDIT_LIMIT FROM TABCUSTOMER WHERE NOT (NAME = 'Party Status Test - 1')",
        "SELECT CREDIT_LIMIT FROM TABCUSTOMER WHERE (NAME = 'Party Status Test - 1')"
      ]
    },
    {
      "queryNo": 1588,
      "pathList": [
        "SELECT TABUSER.NAME, TABUSER.USER_TYPE, TABUSER.FIRST_NAME, TABUSER.LAST_NAME, TABUSER.LAST_ACTIVE, TABUSERROLE.ROLE FROM TABUSER INNER JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME)",
        "SELECT TABUSER.NAME, TABUSER.USER_TYPE, TABUSER.FIRST_NAME, TABUSER.LAST_NAME, TABUSER.LAST_ACTIVE, TABUSERROLE.ROLE FROM TABUSER LEFT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSERROLE.PARENT IS NULL) AND (TABUSER.NAME IS NOT NULL)",
        "SELECT TABUSER.NAME, TABUSER.USER_TYPE, TABUSER.FIRST_NAME, TABUSER.LAST_NAME, TABUSER.LAST_ACTIVE, TABUSERROLE.ROLE FROM TABUSER RIGHT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSER.NAME IS NULL) AND (TABUSERROLE.PARENT IS NOT NULL)",
        "SELECT TABUSER.NAME, TABUSER.USER_TYPE, TABUSER.FIRST_NAME, TABUSER.LAST_NAME, TABUSER.LAST_ACTIVE, TABUSERROLE.ROLE FROM TABUSER RIGHT JOIN TABUSERROLE ON (TABUSERROLE.PARENT = TABUSER.NAME) WHERE (TABUSER.NAME IS NULL) AND (TABUSERROLE.PARENT IS NULL)"
      ]
    },
    {
      "queryNo": 1589,
      "pathList": [
        "SELECT NAME FROM TABREPORT WHERE NOT (NAME = 'Permitted Documents For User')",
        "SELECT NAME FROM TABREPORT WHERE (NAME = 'Permitted Documents For User')"
      ]
    },
    {
      "queryNo": 1590,
      "pathList": [
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE (PARENTTYPE = 'Customize Form') AND (PARENT = 'Customize Form') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE NOT (PARENTTYPE = 'Customize Form') AND (PARENT = 'Customize Form') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Customize Form') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE NOT (PARENT = 'Customize Form') AND (PARENTTYPE = 'Customize Form') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Customize Form') AND (PARENTFIELD = 'fields')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE NOT (PARENTFIELD = 'fields') AND (PARENTTYPE = 'Customize Form') AND (PARENT = 'Customize Form')",
        "SELECT * FROM TABCUSTOMIZE FORM FIELD WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Customize Form') AND (PARENT = 'Customize Form')"
      ]
    },
    {
      "queryNo": 1591,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT ENTRY WHERE NOT (NAME = 'PE-00007')",
        "SELECT NAME FROM TABPAYMENT ENTRY WHERE (NAME = 'PE-00007')"
      ]
    },
    {
      "queryNo": 1592,
      "pathList": [
      ]
    },
    {
      "queryNo": 1593,
      "pathList": [
      ]
    },
    {
      "queryNo": 1594,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = 'Test Variant PRT') AND NOT (ITEM_CODE = '_Test Variant Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = 'Test Variant PRT') AND NOT (ITEM_CODE = '_Test Variant Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Variant Item') AND NOT (ITEM_CODE = 'Test Variant PRT') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group')) AND NOT (ITEM_CODE = 'Test Variant PRT') AND NOT (ITEM_CODE = '_Test Variant Item') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = 'Test Variant PRT') AND NOT (ITEM_CODE = '_Test Variant Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = 'Test Variant PRT') AND NOT (ITEM_CODE = '_Test Variant Item') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', '_Test Item Group')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER, '') NOT IN ('_Test Customer', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER_GROUP, '') NOT IN ('_Test Customer Group', 'All Customer Groups', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(TERRITORY, '') NOT IN ('_Test Territory', 'All Territories', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('_Test Price List', '')) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((TERRITORY IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((TERRITORY IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = 'Test Variant PRT' OR ITEM_CODE = '_Test Variant Item' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', '_Test Item Group') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))"
      ]
    },
    {
      "queryNo": 1595,
      "pathList": [
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO = 'STE-00017') AND (VOUCHER_TYPE = 'Stock Entry') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_NO = 'STE-00017') AND (VOUCHER_TYPE = 'Stock Entry') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Stock Entry') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (VOUCHER_TYPE = 'Stock Entry') AND (VOUCHER_NO = 'STE-00017') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'STE-00017') AND (ITEM_CODE = '_Test Item Home Desktop 100')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE NOT (ITEM_CODE = '_Test Item Home Desktop 100') AND (VOUCHER_NO = 'STE-00017') AND (VOUCHER_TYPE = 'Stock Entry')",
        "SELECT STOCK_VALUE_DIFFERENCE FROM TABSTOCK LEDGER ENTRY WHERE (ITEM_CODE IS NULL) AND (VOUCHER_NO = 'STE-00017') AND (VOUCHER_TYPE = 'Stock Entry')"
      ]
    },
    {
      "queryNo": 1596,
      "pathList": [
        "SELECT * FROM TABTIMESHEET WHERE NOT (NAME = 'TS-00002')",
        "SELECT * FROM TABTIMESHEET WHERE (NAME = 'TS-00002')"
      ]
    },
    {
      "queryNo": 1597,
      "pathList": [
        "SELECT IS_GROUP, DOCSTATUS, COMPANY FROM TABACCOUNT WHERE NOT (NAME = 'Debtors - _TC')",
        "SELECT IS_GROUP, DOCSTATUS, COMPANY FROM TABACCOUNT WHERE (NAME = 'Debtors - _TC')"
      ]
    },
    {
      "queryNo": 1598,
      "pathList": [
        "SELECT ACCOUNT, ACCOUNT_CURRENCY, DEBIT, CREDIT, DEBIT_IN_ACCOUNT_CURRENCY, CREDIT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = 'JV-00024')",
        "SELECT ACCOUNT, ACCOUNT_CURRENCY, DEBIT, CREDIT, DEBIT_IN_ACCOUNT_CURRENCY, CREDIT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = 'JV-00024')",
        "SELECT ACCOUNT, ACCOUNT_CURRENCY, DEBIT, CREDIT, DEBIT_IN_ACCOUNT_CURRENCY, CREDIT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = 'JV-00024')",
        "SELECT ACCOUNT, ACCOUNT_CURRENCY, DEBIT, CREDIT, DEBIT_IN_ACCOUNT_CURRENCY, CREDIT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = 'JV-00024') AND (VOUCHER_TYPE = 'Journal Entry')",
        "SELECT ACCOUNT, ACCOUNT_CURRENCY, DEBIT, CREDIT, DEBIT_IN_ACCOUNT_CURRENCY, CREDIT_IN_ACCOUNT_CURRENCY FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Journal Entry')"
      ]
    },
    {
      "queryNo": 1600,
      "pathList": [
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.IS_GROUP = 1.0 + 1) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.IS_GROUP = 1.0 - 1) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE NOT (TABACCOUNT.COMPANY = 'India - Chart of Accounts') AND (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.COMPANY IS NULL) AND (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.ACCOUNT_TYPE = 'Cash')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE NOT (TABACCOUNT.ACCOUNT_TYPE = 'Cash') AND (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts')",
        "SELECT TABACCOUNT.NAME FROM TABACCOUNT WHERE (TABACCOUNT.ACCOUNT_TYPE IS NULL) AND (TABACCOUNT.IS_GROUP = 1.0) AND (TABACCOUNT.COMPANY = 'India - Chart of Accounts')"
      ]
    },
    {
      "queryNo": 1601,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('a496d47242', '329a1b58b9', 'b1b0e80e75'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('a496d47242', '329a1b58b9', 'b1b0e80e75')) AND (PARENT = 'test@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1602,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM ATTRIBUTE WHERE NOT (NAME = 'Test Size')",
        "SELECT MODIFIED, DOCSTATUS FROM TABITEM ATTRIBUTE WHERE (NAME = 'Test Size')"
      ]
    },
    {
      "queryNo": 1603,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 2) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 1) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 0) AND (BASE_NET_TOTAL = 0)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (BASE_NET_TOTAL = 1) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (BASE_NET_TOTAL = 0) AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (BASE_NET_TOTAL = -1) AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1604,
      "pathList": [
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 3) AND (PRODUCTION_ORDER = 'PRO-00008') AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 2) AND (PRODUCTION_ORDER = 'PRO-00008') AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 1) AND (PRODUCTION_ORDER = 'PRO-00008') AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00008') AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00008') AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (DOCSTATUS <> 2) AND (PURPOSE = 'Manufacture') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (PURPOSE = 'Manufacture') AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00008') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE (PURPOSE IS NULL) AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00008') AND (NAME <> NULL)",
        "SELECT NAME FROM TABSTOCK ENTRY WHERE NOT (NAME <> NULL) AND (DOCSTATUS <> 2) AND (PRODUCTION_ORDER = 'PRO-00008') AND (PURPOSE = 'Manufacture')"
      ]
    },
    {
      "queryNo": 1605,
      "pathList": [
        "SELECT NAME FROM TABBLOG POST WHERE (OWNER = 'test2@example.com') AND (IFNULL(BLOGGER, '') = '')",
        "SELECT NAME FROM TABBLOG POST WHERE NOT (OWNER = 'test2@example.com') AND (IFNULL(BLOGGER, '') = '')",
        "SELECT NAME FROM TABBLOG POST WHERE (OWNER IS NULL) AND (IFNULL(BLOGGER, '') = '')",
        "SELECT NAME FROM TABBLOG POST WHERE NOT (IFNULL(BLOGGER, '') = '') AND (OWNER = 'test2@example.com')",
        "SELECT NAME FROM TABBLOG POST WHERE (((BLOGGER IS NOT NULL))) AND (OWNER = 'test2@example.com')",
        "SELECT NAME FROM TABBLOG POST WHERE ((BLOGGER IS NULL)) AND (OWNER = 'test2@example.com')"
      ]
    },
    {
      "queryNo": 1606,
      "pathList": [
        "SELECT ITEM_NAME, DESCRIPTION, STOCK_UOM FROM TABITEM WHERE NOT (NAME = '_Test Item')",
        "SELECT ITEM_NAME, DESCRIPTION, STOCK_UOM FROM TABITEM WHERE (NAME = '_Test Item')"
      ]
    },
    {
      "queryNo": 1607,
      "pathList": [
        "SELECT ITEM_CODE, WAREHOUSE FROM TABSERIAL NO WHERE NOT (NAME = 'ABCD00007')",
        "SELECT ITEM_CODE, WAREHOUSE FROM TABSERIAL NO WHERE (NAME = 'ABCD00007')"
      ]
    },
    {
      "queryNo": 1608,
      "pathList": [
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (PARENT = '_Test Holiday List') AND (HOLIDAY_DATE BETWEEN '2013-02-02' AND '2013-02-02')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE NOT (PARENT = '_Test Holiday List') AND (HOLIDAY_DATE BETWEEN '2013-02-02' AND '2013-02-02')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (PARENT IS NULL) AND (HOLIDAY_DATE BETWEEN '2013-02-02' AND '2013-02-02')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (HOLIDAY_DATE NOT BETWEEN '2013-02-02' AND '2013-02-02') AND (PARENT = '_Test Holiday List')",
        "SELECT HOLIDAY_DATE FROM TABHOLIDAY WHERE (HOLIDAY_DATE IS NULL) AND (PARENT = '_Test Holiday List')"
      ]
    },
    {
      "queryNo": 1609,
      "pathList": [
        "SELECT NAME FROM TABPRICE LIST WHERE NOT (NAME = 'Standard Selling')",
        "SELECT NAME FROM TABPRICE LIST WHERE (NAME = 'Standard Selling')"
      ]
    },
    {
      "queryNo": 1610,
      "pathList": [
        "SELECT NAME FROM TABCONTACT WHERE NOT (TABCONTACT.STATUS = 'Open')",
        "SELECT NAME FROM TABCONTACT WHERE (TABCONTACT.STATUS = 'Open')",
        "SELECT NAME FROM TABCONTACT WHERE (TABCONTACT.STATUS IS NULL)"
      ]
    },
    {
      "queryNo": 1611,
      "pathList": [
        "SELECT CURRENCY FROM TABSALES ORDER WHERE NOT (NAME = '_T-Sales Order-00001')",
        "SELECT CURRENCY FROM TABSALES ORDER WHERE (NAME = '_T-Sales Order-00001')"
      ]
    },
    {
      "queryNo": 1613,
      "pathList": [
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE NOT (NEW_ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (NEW_ITEM_CODE = '_Test Serialized Item With Series')",
        "SELECT NAME FROM TABPRODUCT BUNDLE WHERE (NEW_ITEM_CODE IS NULL)"
      ]
    },
    {
      "queryNo": 1614,
      "pathList": [
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE (DF.OPTIONS = 'Sales Order') AND (DF.FIELDTYPE = 'Link')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE NOT (DF.OPTIONS = 'Sales Order') AND (DF.FIELDTYPE = 'Link')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE (DF.OPTIONS IS NULL) AND (DF.FIELDTYPE = 'Link')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE NOT (DF.FIELDTYPE = 'Link') AND (DF.OPTIONS = 'Sales Order')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE (DF.FIELDTYPE IS NULL) AND (DF.OPTIONS = 'Sales Order')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE NOT (DT.NAME = DF.PARENT)) AND (DF.OPTIONS = 'Sales Order' AND DF.FIELDTYPE = 'Link')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (DT.NAME = DF.PARENT)) AND (DF.OPTIONS = 'Sales Order' AND DF.FIELDTYPE = 'Link')",
        "SELECT PARENT, FIELDNAME, (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE DT.NAME = DF.PARENT) AS ISSINGLE FROM TABDOCFIELD DF WHERE EXISTS (SELECT ISSINGLE FROM TABDOCTYPE DT WHERE (DF.PARENT IS NULL)) AND (DF.OPTIONS = 'Sales Order' AND DF.FIELDTYPE = 'Link')"
      ]
    },
    {
      "queryNo": 1615,
      "pathList": [
        "SELECT MAX(char_length(PARENTTYPE)) FROM TABUSER HAVING COUNT(char_length(PARENTTYPE)) > COUNT(DISTINCT char_length(PARENTTYPE)) AND COUNT(DISTINCT char_length(PARENTTYPE)) > 1"
      ]
    },
    {
      "queryNo": 1616,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00004')",
        "SELECT MODIFIED, DOCSTATUS FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00004')"
      ]
    },
    {
      "queryNo": 1617,
      "pathList": [
        "SELECT OWNER FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer USD')",
        "SELECT OWNER FROM TABCUSTOMER WHERE (NAME = '_Test Customer USD')"
      ]
    },
    {
      "queryNo": 1618,
      "pathList": [
        "SELECT DEPARTMENT FROM TABEMPLOYEE WHERE NOT (NAME = '_T-Employee-0002')",
        "SELECT DEPARTMENT FROM TABEMPLOYEE WHERE (NAME = '_T-Employee-0002')"
      ]
    },
    {
      "queryNo": 1619,
      "pathList": [
        "SELECT NAME FROM TABVERSION WHERE NOT (DOCNAME = 'test note')",
        "SELECT NAME FROM TABVERSION WHERE (DOCNAME = 'test note')",
        "SELECT NAME FROM TABVERSION WHERE (DOCNAME IS NULL)"
      ]
    },
    {
      "queryNo": 1620,
      "pathList": [
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPURCHASE INVOICE ADVANCE WHERE NOT (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPURCHASE INVOICE ADVANCE WHERE (REFERENCE_TYPE = 'Role')",
        "SELECT DISTINCT REFERENCE_TYPE, PARENTTYPE FROM TABPURCHASE INVOICE ADVANCE WHERE (REFERENCE_TYPE IS NULL)"
      ]
    },
    {
      "queryNo": 1621,
      "pathList": [
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00003')",
        "SELECT SUPPLIER, COMPANY, CURRENCY FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00003')"
      ]
    },
    {
      "queryNo": 1622,
      "pathList": [
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE NOT (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (EMPLOYEE IS NULL) AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE NOT (LEAVE_TYPE = '_Test Leave Type') AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (LEAVE_TYPE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 2) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 1) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (DOCSTATUS = 0) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (FROM_DATE > '2015-09-30') AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE NOT (FROM_DATE > '2015-09-30') AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (FROM_DATE IS NULL) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (CARRY_FORWARD = 1)",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (CARRY_FORWARD = 2) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30')",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (CARRY_FORWARD = 1) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30')",
        "SELECT NAME, FROM_DATE FROM TABLEAVE ALLOCATION WHERE (CARRY_FORWARD = 0) AND (EMPLOYEE = '_T-Employee-0001') AND (LEAVE_TYPE = '_Test Leave Type') AND (DOCSTATUS = 1) AND (FROM_DATE > '2015-09-30')"
      ]
    },
    {
      "queryNo": 1623,
      "pathList": [
        "SELECT DESCRIPTION FROM TABBOM WHERE NOT (NAME = '_Test Numeric Template Item')",
        "SELECT DESCRIPTION FROM TABBOM WHERE (NAME = '_Test Numeric Template Item')"
      ]
    },
    {
      "queryNo": 1624,
      "pathList": [
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE NOT (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE NOT (REFERENCE_NAME = 'EV00010') AND (REFERENCE_TYPE = 'Event') AND (STATUS = 'Open') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Event') AND (STATUS = 'Open') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE NOT (STATUS = 'Open') AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE (STATUS IS NULL) AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (OWNER = 'test@example.com')",
        "SELECT OWNER FROM TABTODO WHERE NOT (OWNER = 'test@example.com') AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open')",
        "SELECT OWNER FROM TABTODO WHERE (OWNER IS NULL) AND (REFERENCE_TYPE = 'Event') AND (REFERENCE_NAME = 'EV00010') AND (STATUS = 'Open')"
      ]
    },
    {
      "queryNo": 1625,
      "pathList": [
        "SELECT MAX(char_length(LAST_LOGIN)) FROM TABUSER HAVING COUNT(char_length(LAST_LOGIN)) > COUNT(DISTINCT char_length(LAST_LOGIN)) AND COUNT(DISTINCT char_length(LAST_LOGIN)) > 1"
      ]
    },
    {
      "queryNo": 1626,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE NOT (RECURRING_ID = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (RECURRING_ID = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALES INVOICE WHERE (RECURRING_ID IS NULL)"
      ]
    },
    {
      "queryNo": 1627,
      "pathList": [
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS, CUSTOMER_GROUP FROM TABCUSTOMER WHERE NOT (NAME = '_Test Customer')",
        "SELECT CREDIT_DAYS_BASED_ON, CREDIT_DAYS, CUSTOMER_GROUP FROM TABCUSTOMER WHERE (NAME = '_Test Customer')"
      ]
    },
    {
      "queryNo": 1628,
      "pathList": [
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 2) AND (NAME IN ('_Test Role 2', 'System Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 1) AND (NAME IN ('_Test Role 2', 'System Manager'))",
        "SELECT NAME FROM TABROLE WHERE (DESK_ACCESS = 0) AND (NAME IN ('_Test Role 2', 'System Manager'))",
        "SELECT NAME FROM TABROLE WHERE (NAME IN ('_Test Role 2', 'System Manager')) AND (DESK_ACCESS = 1)",
        "SELECT NAME FROM TABROLE WHERE (NAME NOT IN ('_Test Role 2', 'System Manager')) AND (DESK_ACCESS = 1)"
      ]
    },
    {
      "queryNo": 1629,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 1630,
      "pathList": [
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE = 'Sales Order') AND (REFERENCE_NAME = 'SO-00033') AND (CREDIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_TYPE = 'Sales Order') AND (REFERENCE_NAME = 'SO-00033') AND (CREDIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_TYPE IS NULL) AND (REFERENCE_NAME = 'SO-00033') AND (CREDIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE NOT (REFERENCE_NAME = 'SO-00033') AND (REFERENCE_TYPE = 'Sales Order') AND (CREDIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (REFERENCE_NAME IS NULL) AND (REFERENCE_TYPE = 'Sales Order') AND (CREDIT = 400)",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (CREDIT = 401) AND (REFERENCE_TYPE = 'Sales Order') AND (REFERENCE_NAME = 'SO-00033')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (CREDIT = 400) AND (REFERENCE_TYPE = 'Sales Order') AND (REFERENCE_NAME = 'SO-00033')",
        "SELECT NAME FROM TABJOURNAL ENTRY ACCOUNT WHERE (CREDIT = 399) AND (REFERENCE_TYPE = 'Sales Order') AND (REFERENCE_NAME = 'SO-00033')"
      ]
    },
    {
      "queryNo": 1631,
      "pathList": [
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE (PARENTTYPE = 'Workstation') AND (PARENT = '_Test Workstation 1') AND (PARENTFIELD = 'working_hours')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE NOT (PARENTTYPE = 'Workstation') AND (PARENT = '_Test Workstation 1') AND (PARENTFIELD = 'working_hours')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE (PARENTTYPE IS NULL) AND (PARENT = '_Test Workstation 1') AND (PARENTFIELD = 'working_hours')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE NOT (PARENT = '_Test Workstation 1') AND (PARENTTYPE = 'Workstation') AND (PARENTFIELD = 'working_hours')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Workstation') AND (PARENTFIELD = 'working_hours')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE NOT (PARENTFIELD = 'working_hours') AND (PARENTTYPE = 'Workstation') AND (PARENT = '_Test Workstation 1')",
        "SELECT * FROM TABWORKSTATION WORKING HOUR WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Workstation') AND (PARENT = '_Test Workstation 1')"
      ]
    },
    {
      "queryNo": 1632,
      "pathList": [
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT = 'Administrator') AND (PARENTTYPE = 'User Permission')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (PARENT = 'Administrator') AND (PARENTTYPE = 'User Permission')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User Permission')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE NOT (PARENTTYPE = 'User Permission') AND (PARENT = 'Administrator')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Administrator')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE (((DEFVALUE IS NOT NULL))) AND (PARENT = 'Administrator' AND PARENTTYPE = 'User Permission')",
        "SELECT DEFKEY, IFNULL(DEFVALUE, '') AS DEFVALUE FROM TABDEFAULTVALUE WHERE ((DEFVALUE IS NULL)) AND (PARENT = 'Administrator' AND PARENTTYPE = 'User Permission')"
      ]
    },
    {
      "queryNo": 1633,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABSALARY SLIP WHERE NOT (NAME = 'Sal Slip/EMP-0001/00003')",
        "SELECT MODIFIED, DOCSTATUS FROM TABSALARY SLIP WHERE (NAME = 'Sal Slip/EMP-0001/00003')"
      ]
    },
    {
      "queryNo": 1634,
      "pathList": [
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = ORDERED_QTY + 1) AND (NAME = '965bec8b58') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = ORDERED_QTY) AND (NAME = '965bec8b58') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = ORDERED_QTY - 1) AND (NAME = '965bec8b58') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (NAME = '965bec8b58') AND (QTY < ORDERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE NOT (NAME = '965bec8b58') AND (QTY < ORDERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 2) AND (QTY < ORDERED_QTY) AND (NAME = '965bec8b58')",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 1) AND (QTY < ORDERED_QTY) AND (NAME = '965bec8b58')",
        "SELECT ITEM_CODE, QTY, ORDERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 0) AND (QTY < ORDERED_QTY) AND (NAME = '965bec8b58')"
      ]
    },
    {
      "queryNo": 1635,
      "pathList": [
        "SELECT NAME FROM TABCOMPANY WHERE NOT (NAME = 'COA from Existing Company')",
        "SELECT NAME FROM TABCOMPANY WHERE (NAME = 'COA from Existing Company')"
      ]
    },
    {
      "queryNo": 1636,
      "pathList": [
        "SELECT NAME FROM TABDESKTOP ICON WHERE NOT (MODULE_NAME = 'ToDo')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (MODULE_NAME = 'ToDo')",
        "SELECT NAME FROM TABDESKTOP ICON WHERE (MODULE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 1637,
      "pathList": [
        "SELECT DOCSTATUS FROM TABSALES INVOICE WHERE NOT (NAME = 'SINV-00021')",
        "SELECT DOCSTATUS FROM TABSALES INVOICE WHERE (NAME = 'SINV-00021')"
      ]
    },
    {
      "queryNo": 1638,
      "pathList": [
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = DELIVERED_QTY + 1) AND (NAME = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = DELIVERED_QTY) AND (NAME = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (QTY = DELIVERED_QTY - 1) AND (NAME = '21b1167610') AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (NAME = '21b1167610') AND (QTY < DELIVERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE NOT (NAME = '21b1167610') AND (QTY < DELIVERED_QTY) AND (DOCSTATUS = 1)",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 2) AND (QTY < DELIVERED_QTY) AND (NAME = '21b1167610')",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 1) AND (QTY < DELIVERED_QTY) AND (NAME = '21b1167610')",
        "SELECT ITEM_CODE, QTY, DELIVERED_QTY, PARENTTYPE, PARENT FROM TABSALES ORDER ITEM WHERE (DOCSTATUS = 0) AND (QTY < DELIVERED_QTY) AND (NAME = '21b1167610')"
      ]
    },
    {
      "queryNo": 1639,
      "pathList": [
        "SELECT VALUE FROM TABSINGLES WHERE (DOCTYPE = 'Manufacturing Settings') AND (FIELD = 'disable_capacity_planning')",
        "SELECT VALUE FROM TABSINGLES WHERE NOT (DOCTYPE = 'Manufacturing Settings') AND (FIELD = 'disable_capacity_planning')",
        "SELECT VALUE FROM TABSINGLES WHERE (DOCTYPE IS NULL) AND (FIELD = 'disable_capacity_planning')",
        "SELECT VALUE FROM TABSINGLES WHERE NOT (FIELD = 'disable_capacity_planning') AND (DOCTYPE = 'Manufacturing Settings')",
        "SELECT VALUE FROM TABSINGLES WHERE (FIELD IS NULL) AND (DOCTYPE = 'Manufacturing Settings')"
      ]
    },
    {
      "queryNo": 1640,
      "pathList": [
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENTTYPE = 'Website Settings') AND (PARENT = 'Website Settings') AND (PARENTFIELD = 'footer_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE NOT (PARENTTYPE = 'Website Settings') AND (PARENT = 'Website Settings') AND (PARENTFIELD = 'footer_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Website Settings') AND (PARENTFIELD = 'footer_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE NOT (PARENT = 'Website Settings') AND (PARENTTYPE = 'Website Settings') AND (PARENTFIELD = 'footer_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Website Settings') AND (PARENTFIELD = 'footer_items')",
        "SELECT * FROM TABTOP BAR ITEM WHERE NOT (PARENTFIELD = 'footer_items') AND (PARENTTYPE = 'Website Settings') AND (PARENT = 'Website Settings')",
        "SELECT * FROM TABTOP BAR ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Website Settings') AND (PARENT = 'Website Settings')"
      ]
    },
    {
      "queryNo": 1641,
      "pathList": [
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST INNER JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE (TABHOLIDAY.HOLIDAY_DATE = '2017-02-09') AND (TABHOLIDAY LIST.NAME = '_Test Holiday List')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST INNER JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE NOT (TABHOLIDAY.HOLIDAY_DATE = '2017-02-09') AND (TABHOLIDAY LIST.NAME = '_Test Holiday List')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST INNER JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE (TABHOLIDAY.HOLIDAY_DATE IS NULL) AND (TABHOLIDAY LIST.NAME = '_Test Holiday List')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST INNER JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE NOT (TABHOLIDAY LIST.NAME = '_Test Holiday List') AND (TABHOLIDAY.HOLIDAY_DATE = '2017-02-09')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST LEFT JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE ((TABHOLIDAY.PARENT IS NULL) AND (TABHOLIDAY LIST.NAME IS NOT NULL)) AND (TABHOLIDAY LIST.NAME = '_Test Holiday List')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST RIGHT JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE ((TABHOLIDAY LIST.NAME IS NULL) AND (TABHOLIDAY.PARENT IS NOT NULL)) AND (TABHOLIDAY.HOLIDAY_DATE = '2017-02-09')",
        "SELECT TABHOLIDAY LIST.NAME FROM TABHOLIDAY LIST RIGHT JOIN TABHOLIDAY ON (TABHOLIDAY.PARENT = TABHOLIDAY LIST.NAME) WHERE ((TABHOLIDAY LIST.NAME IS NULL) AND (TABHOLIDAY.PARENT IS NULL)) AND (TABHOLIDAY.HOLIDAY_DATE = '2017-02-09')"
      ]
    },
    {
      "queryNo": 1642,
      "pathList": [
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (STUDENT_GROUP IS NULL) AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (SCHEDULE_DATE = '2017-02-09') AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (SCHEDULE_DATE IS NULL) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME))) AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME > '1:00:00') AND (FROM_TIME < '2:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND NOT (('2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (FROM_TIME < '2:00:00') AND (FROM_TIME > '1:00:00') AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME > '1:00:00') AND (TO_TIME < '2:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND NOT (('1:00:00' = FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (TO_TIME < '2:00:00') AND (TO_TIME > '1:00:00') AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' > FROM_TIME) AND ('1:00:00' < TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('1:00:00' < TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' < TO_TIME) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('1:00:00' > FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' = FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('1:00:00' = FROM_TIME) AND ('2:00:00' = TO_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (FROM_TIME IS NULL) AND ('2:00:00' = TO_TIME) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT ('2:00:00' = TO_TIME) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT ((TO_TIME > '1:00:00' AND TO_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE (TO_TIME IS NULL) AND ('1:00:00' = FROM_TIME) AND NOT ((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00')) AND NOT (('1:00:00' > FROM_TIME)) AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (NAME <> 'SH00025')",
        "SELECT NAME, FROM_TIME, TO_TIME FROM TABCOURSE SCHEDULE WHERE NOT (NAME <> 'SH00025') AND (STUDENT_GROUP = 'TC-TP-2014-2015-2014-2015 (_Test Academic Term)') AND (SCHEDULE_DATE = '2017-02-09') AND (((FROM_TIME > '1:00:00' AND FROM_TIME < '2:00:00') OR (TO_TIME > '1:00:00' AND TO_TIME < '2:00:00') OR ('1:00:00' > FROM_TIME AND '1:00:00' < TO_TIME) OR ('1:00:00' = FROM_TIME AND '2:00:00' = TO_TIME)))"
      ]
    },
    {
      "queryNo": 1643,
      "pathList": [
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE NOT (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_DATE IS NULL) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (SLE.POSTING_TIME IS NULL) AND (ITEM_CODE IN ('_Test Item')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE NOT IN ('_Test Item')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (ITEM_CODE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (WAREHOUSE IN ('_Test Warehouse - _TC'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE NOT IN ('_Test Warehouse - _TC')) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (ITEM_CODE IN ('_Test Item'))",
        "SELECT DISTINCT SLE.VOUCHER_TYPE, SLE.VOUCHER_NO FROM TABSTOCK LEDGER ENTRY SLE WHERE (WAREHOUSE IS NULL) AND (timestamp(SLE.POSTING_DATE, SLE.POSTING_TIME) >= timestamp('2017-02-09', '12:25:27.397847')) AND (ITEM_CODE IN ('_Test Item'))"
      ]
    },
    {
      "queryNo": 1644,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE NOT (NAME = 'PREC-00007')",
        "SELECT NAME FROM TABPURCHASE RECEIPT WHERE (NAME = 'PREC-00007')"
      ]
    },
    {
      "queryNo": 1645,
      "pathList": [
        "SELECT NAME FROM TABTIMESHEET WHERE NOT (PRODUCTION_ORDER = 'PRO-00001')",
        "SELECT NAME FROM TABTIMESHEET WHERE (PRODUCTION_ORDER = 'PRO-00001')",
        "SELECT NAME FROM TABTIMESHEET WHERE (PRODUCTION_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1646,
      "pathList": [
        "SELECT ROLE FROM TABUSERROLE WHERE (PARENT = 'Daily_test_employee@salary.com') AND (ROLE NOT IN ('All', 'Guest'))",
        "SELECT ROLE FROM TABUSERROLE WHERE NOT (PARENT = 'Daily_test_employee@salary.com') AND (ROLE NOT IN ('All', 'Guest'))",
        "SELECT ROLE FROM TABUSERROLE WHERE (PARENT IS NULL) AND (ROLE NOT IN ('All', 'Guest'))",
        "SELECT ROLE FROM TABUSERROLE WHERE (ROLE IN ('All', 'Guest')) AND (PARENT = 'Daily_test_employee@salary.com')",
        "SELECT ROLE FROM TABUSERROLE WHERE (ROLE IS NULL) AND (PARENT = 'Daily_test_employee@salary.com')"
      ]
    },
    {
      "queryNo": 1647,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 3) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 2) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 1) AND (REFERENCE_DOCTYPE = 'Sales Invoice') AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE = 'Sales Invoice') AND (DOCSTATUS <> 2) AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_DOCTYPE = 'Sales Invoice') AND (DOCSTATUS <> 2) AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_DOCTYPE IS NULL) AND (DOCSTATUS <> 2) AND (REFERENCE_NAME = 'SINV-00021')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_NAME = 'SINV-00021') AND (DOCSTATUS <> 2) AND (REFERENCE_DOCTYPE = 'Sales Invoice')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_NAME IS NULL) AND (DOCSTATUS <> 2) AND (REFERENCE_DOCTYPE = 'Sales Invoice')"
      ]
    },
    {
      "queryNo": 1648,
      "pathList": [
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (IFNULL(BILLING_STATE, '') = '') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE))) AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (FROM_DATE > '2015-01-03') AND (FROM_DATE < '2015-01-09') AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (FROM_DATE > '2015-01-03') AND (FROM_DATE < '2015-01-09') AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (FROM_DATE IS NULL) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' < TO_DATE)) AND NOT (('2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (FROM_DATE < '2015-01-09') AND (FROM_DATE > '2015-01-03') AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (TO_DATE > '2015-01-03') AND (TO_DATE < '2015-01-09') AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (TO_DATE > '2015-01-03') AND (TO_DATE < '2015-01-09') AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (TO_DATE IS NULL) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE)) AND NOT (('2015-01-03' = FROM_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (TO_DATE < '2015-01-09') AND (TO_DATE > '2015-01-03') AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ('2015-01-03' > FROM_DATE) AND ('2015-01-03' < TO_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT ('2015-01-03' > FROM_DATE) AND ('2015-01-03' < TO_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (FROM_DATE IS NULL) AND ('2015-01-03' < TO_DATE) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT ('2015-01-03' < TO_DATE) AND ('2015-01-03' > FROM_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (TO_DATE IS NULL) AND ('2015-01-03' > FROM_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' = FROM_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ('2015-01-03' = FROM_DATE) AND ('2015-01-09' = TO_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT ('2015-01-03' = FROM_DATE) AND ('2015-01-09' = TO_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (FROM_DATE IS NULL) AND ('2015-01-09' = TO_DATE) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' < TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT ('2015-01-09' = TO_DATE) AND ('2015-01-03' = FROM_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT ((TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (TO_DATE IS NULL) AND ('2015-01-03' = FROM_DATE) AND NOT ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09')) AND NOT (('2015-01-03' > FROM_DATE)) AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE NOT (NAME <> 'TR0008') AND (IFNULL(SHIPPING_CITY, '') = '') AND (IFNULL(COMPANY, '') = '_Test Company') AND (IFNULL(SHIPPING_STATE, '') = '') AND (IFNULL(SHIPPING_COUNTY, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(BILLING_COUNTRY, '') = '') AND (IFNULL(CUSTOMER, '') = '_Test Customer') AND (IFNULL(BILLING_CITY, '') = '') AND (IFNULL(TAX_TYPE, '') = 'Sales') AND (IFNULL(SHIPPING_COUNTRY, '') = '') AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(BILLING_COUNTY, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') = '') AND (IFNULL(BILLING_STATE, '') = '') AND (((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)))",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_CITY IS NOT NULL))) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_CITY IS NULL)) AND (IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((COMPANY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((COMPANY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_CITY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_CITY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((TAX_TYPE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((TAX_TYPE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SHIPPING_COUNTRY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SHIPPING_COUNTRY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((SUPPLIER IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((SUPPLIER IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_COUNTY IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_COUNTY IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(BILLING_STATE, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE (((BILLING_STATE IS NOT NULL))) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')",
        "SELECT NAME, PRIORITY FROM TABTAX RULE WHERE ((BILLING_STATE IS NULL)) AND (IFNULL(SHIPPING_CITY, '') = '' AND IFNULL(COMPANY, '') = '_Test Company' AND IFNULL(SHIPPING_STATE, '') = '' AND IFNULL(SHIPPING_COUNTY, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(BILLING_COUNTRY, '') = '' AND IFNULL(CUSTOMER, '') = '_Test Customer' AND IFNULL(BILLING_CITY, '') = '' AND IFNULL(TAX_TYPE, '') = 'Sales' AND IFNULL(SHIPPING_COUNTRY, '') = '' AND IFNULL(SUPPLIER, '') = '' AND IFNULL(BILLING_COUNTY, '') = '' AND IFNULL(CUSTOMER_GROUP, '') = '' AND ((FROM_DATE > '2015-01-03' AND FROM_DATE < '2015-01-09') OR (TO_DATE > '2015-01-03' AND TO_DATE < '2015-01-09') OR ('2015-01-03' > FROM_DATE AND '2015-01-03' < TO_DATE) OR ('2015-01-03' = FROM_DATE AND '2015-01-09' = TO_DATE)) AND NAME <> 'TR0008')"
      ]
    },
    {
      "queryNo": 1649,
      "pathList": [
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'Event') AND (USER = 'test1@example.com') AND (SHARE_NAME = 'EV00013')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'Event') AND (USER = 'test1@example.com') AND (SHARE_NAME = 'EV00013')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND (USER = 'test1@example.com') AND (SHARE_NAME = 'EV00013')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE NOT (USER = 'test1@example.com') AND (SHARE_DOCTYPE = 'Event') AND (SHARE_NAME = 'EV00013')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE (USER IS NULL) AND (SHARE_DOCTYPE = 'Event') AND (SHARE_NAME = 'EV00013')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE NOT (SHARE_NAME = 'EV00013') AND (SHARE_DOCTYPE = 'Event') AND (USER = 'test1@example.com')",
        "SELECT READ, WRITE, SHARE FROM TABDOCSHARE WHERE (SHARE_NAME IS NULL) AND (SHARE_DOCTYPE = 'Event') AND (USER = 'test1@example.com')"
      ]
    },
    {
      "queryNo": 1650,
      "pathList": [
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 2) AND (NAME = 'PO-00001')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 1) AND (NAME = 'PO-00001')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (DOCSTATUS = 0) AND (NAME = 'PO-00001')",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00001') AND (DOCSTATUS = 1)"
      ]
    },
    {
      "queryNo": 1651,
      "pathList": [
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE = 'User') AND (USER = 'Bimonthly_test_employee@salary.com') AND (SHARE_NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (SHARE_DOCTYPE = 'User') AND (USER = 'Bimonthly_test_employee@salary.com') AND (SHARE_NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_DOCTYPE IS NULL) AND (USER = 'Bimonthly_test_employee@salary.com') AND (SHARE_NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (USER = 'Bimonthly_test_employee@salary.com') AND (SHARE_DOCTYPE = 'User') AND (SHARE_NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE (USER IS NULL) AND (SHARE_DOCTYPE = 'User') AND (SHARE_NAME = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE NOT (SHARE_NAME = 'Bimonthly_test_employee@salary.com') AND (SHARE_DOCTYPE = 'User') AND (USER = 'Bimonthly_test_employee@salary.com')",
        "SELECT NAME FROM TABDOCSHARE WHERE (SHARE_NAME IS NULL) AND (SHARE_DOCTYPE = 'User') AND (USER = 'Bimonthly_test_employee@salary.com')"
      ]
    },
    {
      "queryNo": 1652,
      "pathList": [
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENT IS NULL) AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTTYPE = 'User') AND (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTTYPE IS NULL) AND (PARENT = 'test2@example.com') AND (PARENTFIELD = 'user_roles') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE NOT (PARENTFIELD = 'user_roles') AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE (PARENTFIELD IS NULL) AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (NAME NOT IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d'))",
        "SELECT NAME FROM TABUSERROLE WHERE (NAME IN ('fb6624c2ad', '7dcdf83959', '64e9ede9fc', '601d0f0531', 'a497314342', '3ec1f4b70d')) AND (PARENT = 'test2@example.com') AND (PARENTTYPE = 'User') AND (PARENTFIELD = 'user_roles')"
      ]
    },
    {
      "queryNo": 1653,
      "pathList": [
        "SELECT NAME FROM TABCUSTOMER WHERE NOT (NAME = 'Government')",
        "SELECT NAME FROM TABCUSTOMER WHERE (NAME = 'Government')"
      ]
    },
    {
      "queryNo": 1654,
      "pathList": [
        "SELECT NAME, OWNER, CREATION, DATA FROM TABVERSION WHERE (TABVERSION.DOCNAME = 'EV00013') AND (TABVERSION.REF_DOCTYPE = 'Event')",
        "SELECT NAME, OWNER, CREATION, DATA FROM TABVERSION WHERE NOT (TABVERSION.DOCNAME = 'EV00013') AND (TABVERSION.REF_DOCTYPE = 'Event')",
        "SELECT NAME, OWNER, CREATION, DATA FROM TABVERSION WHERE (TABVERSION.DOCNAME IS NULL) AND (TABVERSION.REF_DOCTYPE = 'Event')",
        "SELECT NAME, OWNER, CREATION, DATA FROM TABVERSION WHERE NOT (TABVERSION.REF_DOCTYPE = 'Event') AND (TABVERSION.DOCNAME = 'EV00013')",
        "SELECT NAME, OWNER, CREATION, DATA FROM TABVERSION WHERE (TABVERSION.REF_DOCTYPE IS NULL) AND (TABVERSION.DOCNAME = 'EV00013')"
      ]
    },
    {
      "queryNo": 1655,
      "pathList": [
        "SELECT EXP_START_DATE FROM TABTASK WHERE NOT (NAME = 'TASK00013')",
        "SELECT EXP_START_DATE FROM TABTASK WHERE (NAME = 'TASK00013')"
      ]
    },
    {
      "queryNo": 1656,
      "pathList": [
      ]
    },
    {
      "queryNo": 1657,
      "pathList": [
        "SELECT FILE_URL FROM TABFILE WHERE NOT (NAME = '7dd156ff10') AND NOT (FILE_NAME = '7dd156ff10')",
        "SELECT FILE_URL FROM TABFILE WHERE (NAME = '7dd156ff10') AND NOT (FILE_NAME = '7dd156ff10')",
        "SELECT FILE_URL FROM TABFILE WHERE (FILE_NAME = '7dd156ff10') AND NOT (NAME = '7dd156ff10')",
        "SELECT FILE_URL FROM TABFILE WHERE (FILE_NAME IS NULL) AND NOT (NAME = '7dd156ff10')"
      ]
    },
    {
      "queryNo": 1658,
      "pathList": [
        "SELECT * FROM TABBLOG POST WHERE NOT (NAME = '-test-blog-post-2')",
        "SELECT * FROM TABBLOG POST WHERE (NAME = '-test-blog-post-2')"
      ]
    },
    {
      "queryNo": 1659,
      "pathList": [
        "SELECT * FROM TABITEM WHERE NOT (ITEM_GROUP = '_Test Item Group')",
        "SELECT * FROM TABITEM WHERE (ITEM_GROUP = '_Test Item Group')",
        "SELECT * FROM TABITEM WHERE (ITEM_GROUP IS NULL)",
        "SELECT COUNT(NAME) FROM TABITEM WHERE ITEM_GROUP = '_Test Item Group' HAVING COUNT(NAME) > COUNT(DISTINCT NAME) AND COUNT(DISTINCT NAME) > 1"
      ]
    },
    {
      "queryNo": 1660,
      "pathList": [
        "SELECT NAME FROM TABWAREHOUSE WHERE NOT (WAREHOUSE_NAME = 'Stores')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (WAREHOUSE_NAME = 'Stores')",
        "SELECT NAME FROM TABWAREHOUSE WHERE (WAREHOUSE_NAME IS NULL)"
      ]
    },
    {
      "queryNo": 1661,
      "pathList": [
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE NOT (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Production Planning Tool') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE NOT (PARENT = 'Production Planning Tool') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENTFIELD = 'items')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')",
        "SELECT * FROM TABPRODUCTION PLAN ITEM WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Production Planning Tool') AND (PARENT = 'Production Planning Tool')"
      ]
    },
    {
      "queryNo": 1662,
      "pathList": [
        "SELECT ADVANCE_PAID FROM TABPURCHASE ORDER WHERE NOT (NAME = 'PO-00014')",
        "SELECT ADVANCE_PAID FROM TABPURCHASE ORDER WHERE (NAME = 'PO-00014')"
      ]
    },
    {
      "queryNo": 1663,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE NOT (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_ORDER = 'PO-00002')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPURCHASE INVOICE ITEM WHERE (PURCHASE_ORDER IS NULL)"
      ]
    },
    {
      "queryNo": 1664,
      "pathList": [
        "SELECT * FROM TABITEM SUPPLIER WHERE (PARENTTYPE = 'Item') AND (PARENT = 'Macbook Pro') AND (PARENTFIELD = 'supplier_items')",
        "SELECT * FROM TABITEM SUPPLIER WHERE NOT (PARENTTYPE = 'Item') AND (PARENT = 'Macbook Pro') AND (PARENTFIELD = 'supplier_items')",
        "SELECT * FROM TABITEM SUPPLIER WHERE (PARENTTYPE IS NULL) AND (PARENT = 'Macbook Pro') AND (PARENTFIELD = 'supplier_items')",
        "SELECT * FROM TABITEM SUPPLIER WHERE NOT (PARENT = 'Macbook Pro') AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'supplier_items')",
        "SELECT * FROM TABITEM SUPPLIER WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Item') AND (PARENTFIELD = 'supplier_items')",
        "SELECT * FROM TABITEM SUPPLIER WHERE NOT (PARENTFIELD = 'supplier_items') AND (PARENTTYPE = 'Item') AND (PARENT = 'Macbook Pro')",
        "SELECT * FROM TABITEM SUPPLIER WHERE (PARENTFIELD IS NULL) AND (PARENTTYPE = 'Item') AND (PARENT = 'Macbook Pro')"
      ]
    },
    {
      "queryNo": 1665,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE NOT (SALES_INVOICE = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (SALES_INVOICE = 'SINV-00016')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABTIMESHEET WHERE (SALES_INVOICE IS NULL)"
      ]
    },
    {
      "queryNo": 1666,
      "pathList": [
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE (IFNULL(USER, '') = NULL) AND (NAME <> '6125d62f89') AND (COMPANY = '_Test Company')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE NOT (IFNULL(USER, '') = NULL) AND (NAME <> '6125d62f89') AND (COMPANY = '_Test Company')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE NOT (NAME <> '6125d62f89') AND (IFNULL(USER, '') = NULL) AND (COMPANY = '_Test Company')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE NOT (COMPANY = '_Test Company') AND (IFNULL(USER, '') = NULL) AND (NAME <> '6125d62f89')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE (COMPANY IS NULL) AND (IFNULL(USER, '') = NULL) AND (NAME <> '6125d62f89')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE (((USER IS NOT NULL))) AND (NAME <> '6125d62f89' AND COMPANY = '_Test Company')",
        "SELECT NAME, USER FROM TABPOS PROFILE WHERE ((USER IS NULL)) AND (NAME <> '6125d62f89' AND COMPANY = '_Test Company')"
      ]
    },
    {
      "queryNo": 1667,
      "pathList": [
        "SELECT MAX(char_length(PARENTFIELD)) FROM TABTODO HAVING COUNT(char_length(PARENTFIELD)) > COUNT(DISTINCT char_length(PARENTFIELD)) AND COUNT(DISTINCT char_length(PARENTFIELD)) > 1"
      ]
    },
    {
      "queryNo": 1668,
      "pathList": [
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_TYPE IS NULL) AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (VOUCHER_NO = '_T-Journal Entry-00004') AND (VOUCHER_TYPE = 'Journal Entry') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (VOUCHER_NO IS NULL) AND (VOUCHER_TYPE = 'Journal Entry') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (ACCOUNT = '_Test Receivable - _TC') AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (ACCOUNT IS NULL) AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE ((AGAINST_VOUCHER IS NOT NULL)) AND NOT (AGAINST_VOUCHER = '') AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER IS NULL) AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (AGAINST_VOUCHER = '') AND ((AGAINST_VOUCHER IS NOT NULL)) AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (PARTY_TYPE = 'Customer') AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY_TYPE = 'Customer') AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY_TYPE IS NULL) AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY = '_Test Customer')",
        "SELECT * FROM TABGL ENTRY WHERE NOT (PARTY = '_Test Customer') AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer')",
        "SELECT * FROM TABGL ENTRY WHERE (PARTY IS NULL) AND (VOUCHER_TYPE = 'Journal Entry') AND (VOUCHER_NO = '_T-Journal Entry-00004') AND (ACCOUNT = '_Test Receivable - _TC') AND (((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '')) AND (PARTY_TYPE = 'Customer')",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Journal Entry' AND VOUCHER_NO = '_T-Journal Entry-00004' AND ACCOUNT = '_Test Receivable - _TC' AND ((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '') AND PARTY_TYPE = 'Customer' AND PARTY = '_Test Customer' HAVING COUNT(DEBIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT DEBIT_IN_ACCOUNT_CURRENCY) > 1",
        "SELECT SUM(DEBIT_IN_ACCOUNT_CURRENCY) - SUM(CREDIT_IN_ACCOUNT_CURRENCY) FROM TABGL ENTRY WHERE VOUCHER_TYPE = 'Journal Entry' AND VOUCHER_NO = '_T-Journal Entry-00004' AND ACCOUNT = '_Test Receivable - _TC' AND ((AGAINST_VOUCHER IS NULL) OR AGAINST_VOUCHER = '') AND PARTY_TYPE = 'Customer' AND PARTY = '_Test Customer' HAVING COUNT(CREDIT_IN_ACCOUNT_CURRENCY) > COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) AND COUNT(DISTINCT CREDIT_IN_ACCOUNT_CURRENCY) > 1"
      ]
    },
    {
      "queryNo": 1669,
      "pathList": [
        "SELECT * FROM TABSALES PERSON WHERE NOT (IFNULL(PARENT_SALES_PERSON, '') = '')",
        "SELECT * FROM TABSALES PERSON WHERE (IFNULL(PARENT_SALES_PERSON, '') = '')",
        "SELECT * FROM TABSALES PERSON WHERE ((PARENT_SALES_PERSON IS NOT NULL))",
        "SELECT * FROM TABSALES PERSON WHERE (PARENT_SALES_PERSON IS NULL)"
      ]
    },
    {
      "queryNo": 1670,
      "pathList": [
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABDELIVERY NOTE WHERE NOT (NAME = 'DN-00009')",
        "SELECT CUSTOMER, COMPANY, PROJECT, CURRENCY FROM TABDELIVERY NOTE WHERE (NAME = 'DN-00009')"
      ]
    },
    {
      "queryNo": 1671,
      "pathList": [
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (STATUS NOT IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (STATUS IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (STATUS IS NULL) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (REFERENCE_NAME = 'SO-00034') AND (STATUS NOT IN ('Initiated', 'Paid')) AND (NAME <> 'PR00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (REFERENCE_NAME IS NULL) AND (STATUS NOT IN ('Initiated', 'Paid')) AND (NAME <> 'PR00001') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE NOT (NAME <> 'PR00001') AND (STATUS NOT IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (DOCSTATUS = 1)",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 2) AND (STATUS NOT IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 1) AND (STATUS NOT IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001')",
        "SELECT NAME FROM TABPAYMENT REQUEST WHERE (DOCSTATUS = 0) AND (STATUS NOT IN ('Initiated', 'Paid')) AND (REFERENCE_NAME = 'SO-00034') AND (NAME <> 'PR00001')"
      ]
    },
    {
      "queryNo": 1672,
      "pathList": [
        "SELECT STATUS FROM TABTIMESHEET WHERE NOT (NAME = 'TS-00015')",
        "SELECT STATUS FROM TABTIMESHEET WHERE (NAME = 'TS-00015')"
      ]
    },
    {
      "queryNo": 1673,
      "pathList": [
        "SELECT MAX(char_length(USERNAME)) FROM TABUSER HAVING COUNT(char_length(USERNAME)) > COUNT(DISTINCT char_length(USERNAME)) AND COUNT(DISTINCT char_length(USERNAME)) > 1"
      ]
    },
    {
      "queryNo": 1674,
      "pathList": [
        "SELECT NAME FROM TABGL ENTRY WHERE NOT (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABGL ENTRY WHERE (COMPANY = 'India - Chart of Accounts')",
        "SELECT NAME FROM TABGL ENTRY WHERE (COMPANY IS NULL)"
      ]
    },
    {
      "queryNo": 1675,
      "pathList": [
        "SELECT MODIFIED, DOCSTATUS FROM TABQUOTATION WHERE NOT (NAME = 'QTN-00001')",
        "SELECT MODIFIED, DOCSTATUS FROM TABQUOTATION WHERE (NAME = 'QTN-00001')"
      ]
    },
    {
      "queryNo": 1676,
      "pathList": [
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 3) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.DOCSTATUS = 1) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE NOT (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM_ITEM.DOCSTATUS < 2) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 2) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 1) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (IS_STOCK_ITEM = 0) AND (BOM_ITEM.DOCSTATUS < 2) AND (BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001' AND IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM.NAME IS NULL) AND (BOM_ITEM.PARENT IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM RIGHT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE (BOM_ITEM.PARENT IS NULL) AND (BOM.NAME IS NOT NULL) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NOT NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME LEFT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((ITEM.NAME IS NULL) AND (BOM_ITEM.ITEM_CODE IS NULL)) AND (BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001') GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM LEFT JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME RIGHT JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE ((BOM_ITEM.ITEM_CODE IS NULL) AND (ITEM.NAME IS NOT NULL)) AND (IS_STOCK_ITEM = 1) GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING count(*) > 1",
        "SELECT ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001' AND IS_STOCK_ITEM = 1 GROUP BY ITEM.STOCK_UOM HAVING count(DISTINCT BOM_ITEM.ITEM_CODE) > 1",
        "SELECT BOM_ITEM.ITEM_CODE FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE HAVING count(DISTINCT ITEM.STOCK_UOM) > 1",
        "SELECT BOM_ITEM.ITEM_CODE, SUM(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) * 2 AS QTY, ITEM.STOCK_UOM FROM TABBOM SCRAP ITEM BOM_ITEM INNER JOIN TABBOM BOM ON BOM_ITEM.PARENT = BOM.NAME INNER JOIN TABITEM ITEM ON ITEM.NAME = BOM_ITEM.ITEM_CODE WHERE BOM_ITEM.DOCSTATUS < 2 AND BOM_ITEM.PARENT = 'BOM-_Test FG Item-001' AND IS_STOCK_ITEM = 1 GROUP BY BOM_ITEM.ITEM_CODE, ITEM.STOCK_UOM HAVING COUNT(BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) AND COUNT(DISTINCT BOM_ITEM.QTY / IFNULL(BOM.QUANTITY, 1)) > 1"
      ]
    },
    {
      "queryNo": 1677,
      "pathList": [
        "SELECT * FROM TABPRICING RULE WHERE NOT (ITEM_CODE = '_Test Item for Auto Price List') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', 'Products')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE = '_Test Item for Auto Price List') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', 'Products')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (ITEM_CODE IS NULL) AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', 'Products')) AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products')) AND NOT (ITEM_CODE = '_Test Item for Auto Price List') AND NOT (BRAND = NULL) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND = NULL) AND NOT (ITEM_CODE = '_Test Item for Auto Price List') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', 'Products')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (BRAND IS NULL) AND NOT (ITEM_CODE = '_Test Item for Auto Price List') AND (IFNULL(ITEM_GROUP, '') NOT IN ('All Item Groups', 'Products')) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 3) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 2) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DOCSTATUS = 1) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 1) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = 0) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (DISABLE = -1) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 2) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 1) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (SELLING = 0) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(COMPANY, '') NOT IN ('_Test Company', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER, '') NOT IN ('_Test Customer', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER, '') = '') AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SUPPLIER_TYPE, '') = '') AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(CAMPAIGN, '') = '') AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE NOT (IFNULL(SALES_PARTNER, '') = '') AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(CUSTOMER_GROUP, '') NOT IN ('_Test Customer Group', 'All Customer Groups', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(TERRITORY, '') NOT IN ('_Test Territory', 'All Territories', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (IFNULL(FOR_PRICE_LIST, '') NOT IN ('_Test Price List', '')) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL)) AND (DOCSTATUS < 2) AND (DISABLE = 0) AND (SELLING = 1) AND (IFNULL(COMPANY, '') IN ('_Test Company', '')) AND (IFNULL(CUSTOMER, '') IN ('_Test Customer', '')) AND (IFNULL(SUPPLIER, '') = '') AND (IFNULL(SUPPLIER_TYPE, '') = '') AND (IFNULL(CAMPAIGN, '') = '') AND (IFNULL(SALES_PARTNER, '') = '') AND (IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '')) AND (IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((ITEM_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((ITEM_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((COMPANY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((COMPANY IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SUPPLIER_TYPE IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SUPPLIER_TYPE IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CAMPAIGN IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CAMPAIGN IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((SALES_PARTNER IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((SALES_PARTNER IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((CUSTOMER_GROUP IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((CUSTOMER_GROUP IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((TERRITORY IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((TERRITORY IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(FOR_PRICE_LIST, '') IN ('_Test Price List', ''))",
        "SELECT * FROM TABPRICING RULE WHERE (((FOR_PRICE_LIST IS NOT NULL))) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))",
        "SELECT * FROM TABPRICING RULE WHERE ((FOR_PRICE_LIST IS NULL)) AND ((ITEM_CODE = '_Test Item for Auto Price List' OR IFNULL(ITEM_GROUP, '') IN ('All Item Groups', 'Products') OR BRAND = NULL) AND DOCSTATUS < 2 AND DISABLE = 0 AND SELLING = 1 AND IFNULL(COMPANY, '') IN ('_Test Company', '') AND IFNULL(CUSTOMER, '') IN ('_Test Customer', '') AND IFNULL(SUPPLIER, '') = '' AND IFNULL(SUPPLIER_TYPE, '') = '' AND IFNULL(CAMPAIGN, '') = '' AND IFNULL(SALES_PARTNER, '') = '' AND IFNULL(CUSTOMER_GROUP, '') IN ('_Test Customer Group', 'All Customer Groups', '') AND IFNULL(TERRITORY, '') IN ('_Test Territory', 'All Territories', ''))"
      ]
    },
    {
      "queryNo": 1678,
      "pathList": [
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE (T2.PREVDOC_DOCNAME = 'SO-00033') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE NOT (T2.PREVDOC_DOCNAME = 'SO-00033') AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE (T2.PREVDOC_DOCNAME IS NULL) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 2) AND (T2.PREVDOC_DOCNAME = 'SO-00033')",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 1) AND (T2.PREVDOC_DOCNAME = 'SO-00033')",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 INNER JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE (T1.DOCSTATUS = 0) AND (T2.PREVDOC_DOCNAME = 'SO-00033')",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 LEFT JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE ((T2.PARENT IS NULL) AND (T1.NAME IS NOT NULL)) AND (T1.DOCSTATUS = 1)",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 RIGHT JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NOT NULL)) AND (T2.PREVDOC_DOCNAME = 'SO-00033')",
        "SELECT T1.NAME FROM TABMAINTENANCE VISIT T1 RIGHT JOIN TABMAINTENANCE VISIT PURPOSE T2 ON T2.PARENT = T1.NAME WHERE ((T1.NAME IS NULL) AND (T2.PARENT IS NULL)) AND (T2.PREVDOC_DOCNAME = 'SO-00033')"
      ]
    },
    {
      "queryNo": 1679,
      "pathList": [
        "SELECT NAME FROM TABNEWSLETTER WHERE NOT (NAME = '_Test Newsletter')",
        "SELECT NAME FROM TABNEWSLETTER WHERE (NAME = '_Test Newsletter')"
      ]
    },
    {
      "queryNo": 1680,
      "pathList": [
        "SELECT BLOCK_DATE, REASON FROM TABLEAVE BLOCK LIST DATE WHERE (PARENT = '_Test Leave Block List') AND (BLOCK_DATE BETWEEN '2013-01-01' AND '2013-01-03')",
        "SELECT BLOCK_DATE, REASON FROM TABLEAVE BLOCK LIST DATE WHERE NOT (PARENT = '_Test Leave Block List') AND (BLOCK_DATE BETWEEN '2013-01-01' AND '2013-01-03')",
        "SELECT BLOCK_DATE, REASON FROM TABLEAVE BLOCK LIST DATE WHERE (PARENT IS NULL) AND (BLOCK_DATE BETWEEN '2013-01-01' AND '2013-01-03')",
        "SELECT BLOCK_DATE, REASON FROM TABLEAVE BLOCK LIST DATE WHERE (BLOCK_DATE NOT BETWEEN '2013-01-01' AND '2013-01-03') AND (PARENT = '_Test Leave Block List')",
        "SELECT BLOCK_DATE, REASON FROM TABLEAVE BLOCK LIST DATE WHERE (BLOCK_DATE IS NULL) AND (PARENT = '_Test Leave Block List')"
      ]
    },
    {
      "queryNo": 1682,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPAYMENT ENTRY WHERE NOT (AMENDED_FROM = 'PE-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPAYMENT ENTRY WHERE (AMENDED_FROM = 'PE-00003')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABPAYMENT ENTRY WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1683,
      "pathList": [
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP WHERE NOT (AMENDED_FROM = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP WHERE (AMENDED_FROM = 'Sal Slip/_T-Employee-0001/00001')",
        "SELECT NAME, PARENT, PARENTTYPE, DOCSTATUS FROM TABSALARY SLIP WHERE (AMENDED_FROM IS NULL)"
      ]
    },
    {
      "queryNo": 1684,
      "pathList": [
        "SELECT NAME FROM TABSALARY SLIP WHERE (JOURNAL_ENTRY = 'JV-00001') AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABSALARY SLIP WHERE NOT (JOURNAL_ENTRY = 'JV-00001') AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABSALARY SLIP WHERE (JOURNAL_ENTRY IS NULL) AND (DOCSTATUS < 2)",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 3) AND (JOURNAL_ENTRY = 'JV-00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 2) AND (JOURNAL_ENTRY = 'JV-00001')",
        "SELECT NAME FROM TABSALARY SLIP WHERE (DOCSTATUS = 1) AND (JOURNAL_ENTRY = 'JV-00001')"
      ]
    },
    {
      "queryNo": 1685,
      "pathList": [
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT = 'MREQ-00001') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENT = 'MREQ-00001') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENT IS NULL) AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTTYPE = 'Material Request') AND (PARENT = 'MREQ-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTTYPE IS NULL) AND (PARENT = 'MREQ-00001') AND (PARENTFIELD = 'items') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE NOT (PARENTFIELD = 'items') AND (PARENT = 'MREQ-00001') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (PARENTFIELD IS NULL) AND (PARENT = 'MREQ-00001') AND (PARENTTYPE = 'Material Request') AND (NAME NOT IN ('50ab2a5dac', '89da2c613f', '299df75383'))",
        "SELECT NAME FROM TABMATERIAL REQUEST ITEM WHERE (NAME IN ('50ab2a5dac', '89da2c613f', '299df75383')) AND (PARENT = 'MREQ-00001') AND (PARENTTYPE = 'Material Request') AND (PARENTFIELD = 'items')"
      ]
    },
    {
      "queryNo": 1686,
      "pathList": [
        "SELECT * FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1) AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE NOT (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1) AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE (PRODUCTION_ORDER IS NULL) AND (DOCSTATUS = 1) AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 2) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 1) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE (DOCSTATUS = 0) AND (PRODUCTION_ORDER = 'PRO-00002') AND (PURPOSE = 'Material Transfer for Manufacture')",
        "SELECT * FROM TABSTOCK ENTRY WHERE NOT (PURPOSE = 'Material Transfer for Manufacture') AND (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1)",
        "SELECT * FROM TABSTOCK ENTRY WHERE (PURPOSE IS NULL) AND (PRODUCTION_ORDER = 'PRO-00002') AND (DOCSTATUS = 1)",
        "SELECT SUM(FG_COMPLETED_QTY) FROM TABSTOCK ENTRY WHERE PRODUCTION_ORDER = 'PRO-00002' AND DOCSTATUS = 1 AND PURPOSE = 'Material Transfer for Manufacture' HAVING COUNT(FG_COMPLETED_QTY) > COUNT(DISTINCT FG_COMPLETED_QTY) AND COUNT(DISTINCT FG_COMPLETED_QTY) > 1"
      ]
    },
    {
      "queryNo": 1687,
      "pathList": [
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier USD') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier USD') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_DOCTYPE IS NULL) AND (LINK_NAME = '_Test Supplier USD') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (LINK_NAME = '_Test Supplier USD') AND (LINK_DOCTYPE = 'Supplier') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE (LINK_NAME IS NULL) AND (LINK_DOCTYPE = 'Supplier') AND (PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE NOT (PARENTTYPE = 'Address') AND (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier USD')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE (PARENTTYPE IS NULL) AND (LINK_DOCTYPE = 'Supplier') AND (LINK_NAME = '_Test Supplier USD')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE NOT (A.NAME = DL.PARENT)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier USD' AND PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE (A.NAME = DL.PARENT)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier USD' AND PARENTTYPE = 'Address')",
        "SELECT PARENT, (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE A.NAME = DL.PARENT) AS IS_PRIMARY_ADDRESS FROM TABDYNAMIC LINK DL WHERE EXISTS (SELECT IS_PRIMARY_ADDRESS FROM TABADDRESS A WHERE (DL.PARENT IS NULL)) AND (LINK_DOCTYPE = 'Supplier' AND LINK_NAME = '_Test Supplier USD' AND PARENTTYPE = 'Address')"
      ]
    },
    {
      "queryNo": 1688,
      "pathList": [
        "SELECT NAME FROM TABACTIVITY COST WHERE (EMPLOYEE_NAME = '_Test Employee') AND (ACTIVITY_TYPE = '_Test Activity Type 1') AND (NAME <> 'AC-00001')",
        "SELECT NAME FROM TABACTIVITY COST WHERE NOT (EMPLOYEE_NAME = '_Test Employee') AND (ACTIVITY_TYPE = '_Test Activity Type 1') AND (NAME <> 'AC-00001')",
        "SELECT NAME FROM TABACTIVITY COST WHERE (EMPLOYEE_NAME IS NULL) AND (ACTIVITY_TYPE = '_Test Activity Type 1') AND (NAME <> 'AC-00001')",
        "SELECT NAME FROM TABACTIVITY COST WHERE NOT (ACTIVITY_TYPE = '_Test Activity Type 1') AND (EMPLOYEE_NAME = '_Test Employee') AND (NAME <> 'AC-00001')",
        "SELECT NAME FROM TABACTIVITY COST WHERE (ACTIVITY_TYPE IS NULL) AND (EMPLOYEE_NAME = '_Test Employee') AND (NAME <> 'AC-00001')",
        "SELECT NAME FROM TABACTIVITY COST WHERE NOT (NAME <> 'AC-00001') AND (EMPLOYEE_NAME = '_Test Employee') AND (ACTIVITY_TYPE = '_Test Activity Type 1')"
      ]
    }
  ]
}